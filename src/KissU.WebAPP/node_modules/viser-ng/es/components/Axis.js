var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input } from '@angular/core';
import { Chart } from '../Chart';
import * as IStyle from './Style';
var Axis = (function (_super) {
    __extends(Axis, _super);
    function Axis() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Axis.prototype, "dataKey");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Axis.prototype, "show");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Axis.prototype, "position");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Axis.prototype, "title");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Axis.prototype, "tick");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Axis.prototype, "subTick");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Axis.prototype, "grid");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Axis.prototype, "zIndex");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Axis.prototype, "label");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Axis.prototype, "line");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Axis.prototype, "tickLine");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Axis.prototype, "subTickCount");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Axis.prototype, "subTickLine");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Axis.prototype, "autoPaint");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTitleMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTitleMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTitleMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTitleMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTitleClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTitleDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTitleTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTitleTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTitleTouchEnd");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLabelMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLabelMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLabelMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLabelMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLabelClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLabelDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLabelTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLabelTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLabelTouchEnd");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTicksMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTicksMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTicksMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTicksMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTicksClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTicksDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTicksTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTicksTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onTicksTouchEnd");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLineMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLineMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLineMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLineMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLineClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLineDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLineTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLineTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onLineTouchEnd");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onGridMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onGridMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onGridMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onGridMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onGridClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onGridDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onGridTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onGridTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Axis.prototype, "onGridTouchEnd");
    Axis = __decorate([
        Component({
            selector: 'v-axis',
            template: "<div #chartDom></div>",
        })
    ], Axis);
    return Axis;
}(Chart));
export { Axis };
//# sourceMappingURL=Axis.js.map