{"version":3,"file":"table.js.map","sources":["ng://@delon/abc/table/table-row.directive.ts","ng://@delon/abc/table/table.config.ts","ng://@delon/abc/table/table-column-source.ts","ng://@delon/abc/table/table-data-source.ts","ng://@delon/abc/table/table-export.ts","ng://@delon/abc/table/table.component.ts","ng://@delon/abc/table/table.module.ts"],"sourcesContent":["import { Directive, Host, Injectable, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Injectable()\nexport class STRowSource {\n  private titles: { [key: string]: TemplateRef<void> } = {};\n  private rows: { [key: string]: TemplateRef<void> } = {};\n\n  add(type: string, path: string, ref: TemplateRef<void>) {\n    this[type === 'title' ? 'titles' : 'rows'][path] = ref;\n  }\n\n  getTitle(path: string) {\n    return this.titles[path];\n  }\n\n  getRow(path: string) {\n    return this.rows[path];\n  }\n}\n\n@Directive({ selector: '[st-row]' })\nexport class STRowDirective implements OnInit {\n  @Input('st-row')\n  id: string;\n\n  @Input()\n  type: 'title';\n\n  constructor(private ref: TemplateRef<void>, @Host() private source: STRowSource) {}\n\n  ngOnInit(): void {\n    this.source.add(this.type, this.id, this.ref);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  STColumnButtonDrawerConfig,\n  STColumnButtonModalConfig,\n  STIcon,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n} from './table.interfaces';\n\n@Injectable({ providedIn: 'root' })\nexport class STConfig {\n  /**\n   * èµ·å§é¡µç ï¼é»è®¤ä¸ºï¼`1`\n   */\n  pi?: number;\n  /**\n   * æ¯é¡µæ°éï¼å½è®¾ç½®ä¸º `0` è¡¨ç¤ºä¸åé¡µï¼é»è®¤ï¼`10`\n   */\n  ps?: number;\n  /**\n   * æ¯å¦æ¾ç¤ºè¾¹æ¡\n   */\n  bordered?: boolean;\n  /**\n   * tableå¤§å°\n   */\n  size?: 'small' | 'middle' | 'default' = 'default';\n  /**\n   * æ¯å¦éèå¤´åå°¾ï¼å½å°å±å¹ä¸ææ¾ç¤ºï¼é»è®¤ï¼`false`\n   */\n  responsiveHideHeaderFooter?: boolean = false;\n  /** è¯·æ±ä½éç½® */\n  req?: STReq = {\n    type: 'page',\n    method: 'GET',\n    allInBody: false,\n    reName: { pi: 'pi', ps: 'ps', skip: 'skip', limit: 'limit' },\n  };\n  /** è¿åä½éç½® */\n  res?: STRes = {\n    reName: { list: ['list'], total: ['total'] },\n  };\n  /** è¿åä½éç½® */\n  page?: STPage = {\n    front: true,\n    zeroIndexed: false,\n    placement: 'right',\n    show: true,\n    showSize: false,\n    pageSizes: [10, 20, 30, 40, 50],\n    showQuickJumper: false,\n    total: true,\n    indexReset: true,\n    toTop: true,\n    toTopOffset: 100,\n  };\n  /**\n   * éå½åæåºå¼ï¼`columns` çéå½åé«äºå±æ§\n   */\n  sortReName?: { ascend?: string; descend?: string };\n  /**\n   * åæåºè§å\n   * - è¥ä¸æå®ï¼åè¿åï¼`columnName=ascend|descend`\n   * - è¥æå®ï¼åè¿åï¼`sort=columnName.(ascend|descend)`\n   */\n  singleSort?: STSingleSort = null;\n  /**\n   * æ¯å¦å¤æåºï¼å½ `sort` å¤ä¸ªç¸åå¼æ¶èªå¨åå¹¶ï¼å»ºè®®åç«¯æ¯ææ¶ä½¿ç¨\n   */\n  multiSort?: STMultiSort = null;\n  /**\n   * æé®æ¨¡ææ¡éç½®\n   */\n  modal?: STColumnButtonModalConfig = {\n    paramsName: 'record',\n    size: 'lg',\n    exact: true,\n  };\n  /**\n   * æé®æ½å±éç½®\n   */\n  drawer?: STColumnButtonDrawerConfig = {\n    paramsName: 'record',\n    size: 'md',\n    footer: true,\n    footerHeight: 55,\n  };\n  /**\n   * æ°æ³¡ç¡®è®¤æ¡åå®¹\n   */\n  popTitle?: string = 'ç¡®è®¤å é¤åï¼';\n  /**\n   * è¡åå»å¤å°æ¶é¿ä¹ç±»ä¸ºåå»ï¼åä½ï¼æ¯«ç§ï¼ï¼é»è®¤ï¼`200`\n   */\n  rowClickTime?: number = 200;\n  /**\n   * è¿æ»¤æé®ç¡®è®¤ææ¬ï¼é»è®¤ï¼`ç¡®è®¤`\n   */\n  filterConfirmText?: string = 'ç¡®è®¤';\n  /**\n   * è¿æ»¤æé®éç½®ææ¬ï¼é»è®¤ï¼`éç½®`\n   */\n  filterClearText?: string = 'éç½®';\n  /**\n   * æé®å¾æ \n   */\n  btnIcon?: STIcon = {\n    type: '',\n    theme: 'outline',\n    spin: false,\n  };\n  /**\n   * è¡å·ç´¢å¼ï¼é»è®¤ï¼`1`\n   * - è®¡ç®è§åä¸ºï¼`index + noIndex`\n   */\n  noIndex?: number = 1;\n  /**\n   * è¡¨æ ¼è¡çç±»å\n   */\n  rowClassName?: STRowClassName;\n  /**\n   * éè¿ç¹å»è¡æ¥å±å¼å­è¡\n   */\n  expandRowByClick?: boolean = false;\n}\n","import { Host, Inject, Injectable, Optional } from '@angular/core';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN } from '@delon/theme';\nimport { deepCopy } from '@delon/util';\n\nimport { STRowSource } from './table-row.directive';\nimport { STConfig } from './table.config';\nimport { STColumn, STColumnButton, STColumnFilter, STColumnSort } from './table.interfaces';\n\nexport interface STSortMap extends STColumnSort {\n  [key: string]: any;\n\n  /** æ¯å¦å¯ç¨æåº */\n  enabled?: boolean;\n}\n\n@Injectable()\nexport class STColumnSource {\n  constructor(\n    @Host() private rowSource: STRowSource,\n    @Optional() private acl: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    private cog: STConfig,\n  ) {}\n\n  private btnCoerce(list: STColumnButton[]): STColumnButton[] {\n    if (!list) return [];\n    const ret: STColumnButton[] = [];\n    const { modal, drawer, popTitle, btnIcon } = this.cog;\n\n    for (const item of list) {\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n\n      if (item.type === 'modal' || item.type === 'static') {\n        // compatible\n        if (item.component != null) {\n          item.modal = {\n            component: item.component,\n            params: item.params,\n            paramsName: item.paramName || modal.paramsName,\n            size: item.size || modal.size,\n            modalOptions: item.modalOptions || modal.modalOptions,\n          };\n        }\n        if (item.modal == null || item.modal.component == null) {\n          console.warn(`[st] Should specify modal parameter`);\n          item.type = 'none';\n        } else {\n          item.modal = { ...{ paramsName: 'record', size: 'lg' }, ...modal, ...item.modal };\n        }\n      }\n\n      if (item.type === 'drawer') {\n        if (item.drawer == null || item.drawer.component == null) {\n          console.warn(`[st] Should specify drawer parameter`);\n          item.type = 'none';\n        } else {\n          item.drawer = { ...{ paramsName: 'record', size: 'lg' }, ...drawer, ...item.drawer };\n        }\n      }\n\n      if (item.type === 'del' && typeof item.pop === 'undefined') {\n        item.pop = true;\n      }\n\n      if (item.pop === true) {\n        item.popTitle = item.popTitle || popTitle;\n      } else {\n        item.pop = false;\n      }\n\n      if (item.icon) {\n        item.icon = {\n          ...btnIcon,\n          ...(typeof item.icon === 'string' ? { type: item.icon } : item.icon),\n        };\n      }\n\n      item.children =\n        item.children && item.children.length > 0 ? this.btnCoerce(item.children) : [];\n\n      // i18n\n      if (item.i18n && this.i18nSrv) {\n        item.text = this.i18nSrv.fanyi(item.i18n);\n      }\n\n      ret.push(item);\n    }\n    this.btnCoerceIf(ret);\n    return ret;\n  }\n\n  private btnCoerceIf(list: STColumnButton[]) {\n    for (const item of list) {\n      if (!item.iif) item.iif = () => true;\n      if (item.children.length > 0) {\n        this.btnCoerceIf(item.children);\n      }\n    }\n  }\n\n  private fixedCoerce(list: STColumn[]) {\n    const countReduce = (a: number, b: STColumn) => a + +b.width.toString().replace('px', '');\n    // left width\n    list\n      .filter(w => w.fixed && w.fixed === 'left' && w.width)\n      .forEach((item, idx) => (item._left = list.slice(0, idx).reduce(countReduce, 0) + 'px'));\n    // right width\n    list\n      .filter(w => w.fixed && w.fixed === 'right' && w.width)\n      .reverse()\n      .forEach(\n        (item, idx) =>\n          (item._right = (idx > 0 ? list.slice(-idx).reduce(countReduce, 0) : 0) + 'px'),\n      );\n  }\n\n  private sortCoerce(item: STColumn): STSortMap {\n    // compatible\n    if (item.sorter && typeof item.sorter === 'function') {\n      return {\n        enabled: true,\n        default: item.sort as any,\n        compare: item.sorter,\n        key: item.sortKey || item.indexKey,\n        reName: item.sortReName,\n      };\n    }\n\n    if (typeof item.sort === 'undefined') {\n      return { enabled: false };\n    }\n\n    let res: STSortMap = {};\n\n    if (typeof item.sort === 'string') {\n      res.key = item.sort;\n    } else if (typeof item.sort !== 'boolean') {\n      res = item.sort;\n    }\n\n    if (!res.key) {\n      res.key = item.indexKey;\n    }\n\n    res.enabled = true;\n\n    return res;\n  }\n\n  private filterCoerce(item: STColumn): STColumnFilter {\n    let res: STColumnFilter = null;\n    // compatible\n    if (item.filters && item.filters.length > 0) {\n      res = {\n        confirmText: item.filterConfirmText,\n        clearText: item.filterClearText,\n        default: item.filtered,\n        fn: item.filter as any,\n        icon: item.filterIcon,\n        key: item.filterKey || item.indexKey,\n        menus: item.filters,\n        multiple: item.filterMultiple,\n        reName: item.filterReName,\n      };\n    } else {\n      res = item.filter;\n    }\n\n    if (res == null || res.menus.length === 0) {\n      return null;\n    }\n\n    if (typeof res.multiple === 'undefined') {\n      res.multiple = true;\n    }\n    if (!res.confirmText) {\n      res.confirmText = this.cog.filterConfirmText;\n    }\n    if (!res.clearText) {\n      res.clearText = this.cog.filterClearText;\n    }\n    if (!res.icon) {\n      res.icon = `filter`;\n    }\n    if (!res.key) {\n      res.key = item.indexKey;\n    }\n\n    res.default = res.menus.findIndex(w => w.checked) !== -1;\n\n    if (this.acl) {\n      res.menus = res.menus.filter(w => this.acl.can(w.acl));\n    }\n\n    if (res.menus.length <= 0) {\n      res = null;\n    }\n\n    return res;\n  }\n\n  private restoreRender(item: STColumn) {\n    if (item.renderTitle) {\n      item.__renderTitle = this.rowSource.getTitle(item.renderTitle);\n    }\n    if (item.render) {\n      item.__render = this.rowSource.getRow(item.render);\n    }\n  }\n\n  process(list: STColumn[]): STColumn[] {\n    if (!list || list.length === 0) throw new Error(`[st]: the columns property muse be define!`);\n\n    const { noIndex } = this.cog;\n    let checkboxCount = 0;\n    let radioCount = 0;\n    let point = 0;\n    const columns: STColumn[] = [];\n    const copyColumens = deepCopy(list) as STColumn[];\n    for (const item of copyColumens) {\n      if (item.iif && !item.iif(item)) {\n        continue;\n      }\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n      // index\n      if (item.index) {\n        if (!Array.isArray(item.index)) {\n          item.index = item.index.split('.');\n        }\n        item.indexKey = item.index.join('.');\n      }\n      // title\n      if (item.i18n && this.i18nSrv) {\n        item.title = this.i18nSrv.fanyi(item.i18n);\n      }\n      // no\n      if (item.type === 'no') {\n        item.noIndex = item.noIndex == null ? noIndex : item.noIndex;\n      }\n      // checkbox\n      if (item.selections == null) {\n        item.selections = [];\n      }\n      if (item.type === 'checkbox') {\n        ++checkboxCount;\n        if (!item.width) {\n          item.width = `${item.selections.length > 0 ? 62 : 50}px`;\n        }\n      }\n      if (this.acl) {\n        item.selections = item.selections.filter(w => this.acl.can(w.acl));\n      }\n      // radio\n      if (item.type === 'radio') {\n        ++radioCount;\n        item.selections = [];\n        if (!item.width) {\n          item.width = '50px';\n        }\n      }\n      // types\n      if (item.type === 'yn') {\n        item.yn = { truth: true, ...item.yn };\n        // compatible\n        if (item.ynTruth != null) item.yn.truth = item.ynTruth;\n        if (item.ynYes != null) item.yn.yes = item.ynYes;\n        if (item.ynNo != null) item.yn.no = item.ynNo;\n      }\n      if (\n        (item.type === 'link' && typeof item.click !== 'function') ||\n        (item.type === 'badge' && item.badge == null) ||\n        (item.type === 'tag' && item.tag == null)\n      ) {\n        (item as any).type = '';\n      }\n      // className\n      if (!item.className) {\n        item.className = {\n          number: 'text-right',\n          currency: 'text-right',\n          date: 'text-center',\n        }[item.type];\n      }\n      // width\n      if (typeof item.width === 'number') {\n        item.width = `${item.width}px`;\n      }\n\n      // sorter\n      item._sort = this.sortCoerce(item);\n      // filter\n      item.filter = this.filterCoerce(item);\n      // buttons\n      item.buttons = this.btnCoerce(item.buttons);\n      // restore custom row\n      this.restoreRender(item);\n\n      item.__point = point++;\n      columns.push(item);\n    }\n    if (checkboxCount > 1) {\n      throw new Error(`[st]: just only one column checkbox`);\n    }\n    if (radioCount > 1) {\n      throw new Error(`[st]: just only one column radio`);\n    }\n\n    this.fixedCoerce(columns);\n\n    return columns;\n  }\n\n  restoreAllRender(columns: STColumn[]) {\n    columns.forEach(i => this.restoreRender(i));\n  }\n}\n","import { DecimalPipe } from '@angular/common';\nimport { Host, Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { of, Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { _HttpClient, CNCurrencyPipe, DatePipe, YNPipe } from '@delon/theme';\nimport { deepCopy, deepGet } from '@delon/util';\n\nimport { STSortMap } from './table-column-source';\nimport {\n  STColumn,\n  STData,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRequestOptions,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STStatistical,\n  STStatisticalResult,\n  STStatisticalResults,\n  STStatisticalType,\n} from './table.interfaces';\n\nexport interface STDataSourceOptions {\n  pi?: number;\n  ps?: number;\n  data?: string | STData[] | Observable<STData[]>;\n  total?: number;\n  req?: STReq;\n  res?: STRes;\n  page?: STPage;\n  columns?: STColumn[];\n  singleSort?: STSingleSort;\n  multiSort?: STMultiSort;\n  rowClassName?: STRowClassName;\n}\n\nexport interface STDataSourceResult {\n  /** æ¯å¦éè¦æ¾ç¤ºåé¡µå¨ */\n  pageShow?: boolean;\n  /** æ° `pi`ï¼è¥è¿å `undefined` è¡¨ç¤ºç¨æ·åæ§ */\n  pi?: number;\n  /** æ° `ps`ï¼è¥è¿å `undefined` è¡¨ç¤ºç¨æ·åæ§ */\n  ps?: number;\n  /** æ° `total`ï¼è¥è¿å `undefined` è¡¨ç¤ºç¨æ·åæ§ */\n  total?: number;\n  /** æ°æ® */\n  list?: STData[];\n  /** ç»è®¡æ°æ® */\n  statistical?: STStatisticalResults;\n}\n\n@Injectable()\nexport class STDataSource {\n  private sortTick = 0;\n\n  constructor(\n    private http: _HttpClient,\n    @Host() private currentyPipe: CNCurrencyPipe,\n    @Host() private datePipe: DatePipe,\n    @Host() private ynPipe: YNPipe,\n    @Host() private numberPipe: DecimalPipe,\n    private dom: DomSanitizer,\n  ) {}\n\n  process(options: STDataSourceOptions): Promise<STDataSourceResult> {\n    return new Promise((resolvePromise, rejectPromise) => {\n      let data$: Observable<STData[]>;\n      let isRemote = false;\n      const { data, res, total, page, pi, ps, columns } = options;\n      let retTotal: number;\n      let retPs: number;\n      let retList: STData[];\n      let retPi: number;\n      let rawData: any;\n      let showPage = page.show;\n\n      if (typeof data === 'string') {\n        isRemote = true;\n        data$ = this.getByHttp(data, options).pipe(\n          map(result => {\n            rawData = result;\n            let ret: STData[];\n            if (Array.isArray(result)) {\n              ret = result;\n              retTotal = ret.length;\n              retPs = retTotal;\n              showPage = false;\n            } else {\n              // list\n              ret = deepGet(result, res.reName.list as string[], []);\n              if (ret == null || !Array.isArray(ret)) {\n                ret = [];\n              }\n              // total\n              const resultTotal =\n                res.reName.total && deepGet(result, res.reName.total as string[], null);\n              retTotal = resultTotal == null ? total || 0 : +resultTotal;\n            }\n            return deepCopy(ret);\n          }),\n          catchError(err => {\n            rejectPromise(err);\n            return [];\n          }),\n        );\n      } else if (Array.isArray(data)) {\n        data$ = of(data);\n      } else {\n        // a cold observable\n        data$ = data;\n      }\n\n      if (!isRemote) {\n        data$ = data$.pipe(\n          // sort\n          map((result: STData[]) => {\n            rawData = result;\n            let copyResult = deepCopy(result);\n            const sorterFn = this.getSorterFn(columns);\n            if (sorterFn) {\n              copyResult = copyResult.sort(sorterFn);\n            }\n            return copyResult;\n          }),\n          // filter\n          map((result: STData[]) => {\n            columns\n              .filter(w => w.filter)\n              .forEach(c => {\n                const values = c.filter.menus.filter(w => w.checked);\n                if (values.length === 0) return;\n                const onFilter = c.filter.fn;\n                if (typeof onFilter !== 'function') {\n                  console.warn(`[st] Muse provide the fn function in filter`);\n                  return;\n                }\n                result = result.filter(record => values.some(v => onFilter(v, record)));\n              });\n            return result;\n          }),\n          // paging\n          map((result: STData[]) => {\n            if (page.front) {\n              const maxPageIndex = Math.ceil(result.length / ps);\n              retPi = Math.max(1, pi > maxPageIndex ? maxPageIndex : pi);\n              retTotal = result.length;\n              if (page.show === true) {\n                return result.slice((retPi - 1) * ps, retPi * ps);\n              }\n            }\n            return result;\n          }),\n        );\n      }\n\n      // pre-process\n      if (typeof res.process === 'function') {\n        data$ = data$.pipe(map(result => res.process(result)));\n      }\n\n      // data accelerator\n      data$ = data$.pipe(\n        map(result => {\n          for (let i = 0, len = result.length; i < len; i++) {\n            result[i]._values = columns.map(c => this.get(result[i], c, i));\n            if (options.rowClassName) {\n              result[i]._rowClassName = options.rowClassName(result[i], i);\n            }\n          }\n          return result;\n        }),\n      );\n\n      data$\n        .forEach((result: STData[]) => (retList = result))\n        .then(() => {\n          const realTotal = retTotal || total;\n          const realPs = retPs || ps;\n          resolvePromise({\n            pi: retPi,\n            ps: retPs,\n            total: retTotal,\n            list: retList,\n            statistical: this.genStatistical(columns, retList, rawData),\n            pageShow: typeof showPage === 'undefined' ? realTotal > realPs : showPage,\n          });\n        });\n    });\n  }\n\n  private get(item: STData, col: STColumn, idx: number): { text: any; org?: any } {\n    if (col.format) {\n      const formatRes = col.format(item, col);\n      if (formatRes && ~formatRes.indexOf('</')) {\n        return { text: this.dom.bypassSecurityTrustHtml(formatRes), org: formatRes };\n      }\n      return { text: formatRes == null ? '' : formatRes, org: formatRes };\n    }\n\n    const value = deepGet(item, col.index as string[], col.default);\n\n    let ret = value;\n    switch (col.type) {\n      case 'no':\n        ret = this.getNoIndex(item, col, idx);\n        break;\n      case 'img':\n        ret = value ? `<img src=\"${value}\" class=\"img\">` : '';\n        break;\n      case 'number':\n        ret = this.numberPipe.transform(value, col.numberDigits);\n        break;\n      case 'currency':\n        ret = this.currentyPipe.transform(value);\n        break;\n      case 'date':\n        ret = this.datePipe.transform(value, col.dateFormat);\n        break;\n      case 'yn':\n        ret = this.ynPipe.transform(value === col.yn.truth, col.yn.yes, col.yn.no);\n        break;\n    }\n    return { text: ret == null ? '' : ret, org: value };\n  }\n\n  private getByHttp(url: string, options: STDataSourceOptions): Observable<{}> {\n    const { req, page, pi, ps, singleSort, multiSort, columns } = options;\n    const method = (req.method || 'GET').toUpperCase();\n    let params = {};\n    if (req.type === 'page') {\n      params = {\n        [req.reName.pi]: page.zeroIndexed ? pi - 1 : pi,\n        [req.reName.ps]: ps,\n      };\n    } else {\n      params = {\n        [req.reName.skip]: (pi - 1) * ps,\n        [req.reName.limit]: ps,\n      };\n    }\n    params = {\n      ...params,\n      ...req.params,\n      ...this.getReqSortMap(singleSort, multiSort, columns),\n      ...this.getReqFilterMap(columns),\n    };\n\n    let reqOptions: STRequestOptions = {\n      params,\n      body: req.body,\n      headers: req.headers,\n    };\n    if (method === 'POST' && req.allInBody === true) {\n      reqOptions = {\n        body: { ...req.body, ...params },\n        headers: req.headers,\n      };\n    }\n    if (typeof req.process === 'function') {\n      reqOptions = req.process(reqOptions);\n    }\n    return this.http.request(method, url, reqOptions);\n  }\n\n  getNoIndex(item: STData, col: STColumn, idx: number): number {\n    return typeof col.noIndex === 'function' ? col.noIndex(item, col, idx) : col.noIndex + idx;\n  }\n\n  // #region sort\n\n  private getValidSort(columns: STColumn[]): STSortMap[] {\n    return columns\n      .filter(item => item._sort && item._sort.enabled && item._sort.default)\n      .map(item => item._sort);\n  }\n\n  private getSorterFn(columns: STColumn[]) {\n    const sortList = this.getValidSort(columns);\n    if (sortList.length === 0) {\n      return;\n    }\n    if (typeof sortList[0].compare !== 'function') {\n      console.warn(`[st] Muse provide the compare function in sort`);\n      return;\n    }\n\n    return (a: STData, b: STData) => {\n      const result = sortList[0].compare(a, b);\n      if (result !== 0) {\n        return sortList[0].default === 'descend' ? -result : result;\n      }\n      return 0;\n    };\n  }\n\n  get nextSortTick(): number {\n    return ++this.sortTick;\n  }\n\n  getReqSortMap(\n    singleSort: STSingleSort,\n    multiSort: STMultiSort,\n    columns: STColumn[],\n  ): { [key: string]: string } {\n    let ret: { [key: string]: string } = {};\n    const sortList = this.getValidSort(columns);\n    if (!multiSort && sortList.length === 0) return ret;\n\n    if (multiSort) {\n      const ms = {\n        key: 'sort',\n        separator: '-',\n        nameSeparator: '.',\n        ...multiSort,\n      };\n\n      ret = {\n        [ms.key]: sortList.sort((a, b) => a.tick - b.tick)\n          .map(item => item.key + ms.nameSeparator + ((item.reName || {})[item.default] || item.default))\n          .join(ms.separator),\n      };\n    } else {\n      const mapData = sortList[0];\n      let sortFiled = mapData.key;\n      let sortValue = (sortList[0].reName || {})[mapData.default] || mapData.default;\n      if (singleSort) {\n        sortValue = sortFiled + (singleSort.nameSeparator || '.') + sortValue;\n        sortFiled = singleSort.key || 'sort';\n      }\n      ret[sortFiled] = sortValue;\n    }\n    return ret;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private getReqFilterMap(columns: STColumn[]): { [key: string]: string } {\n    let ret = {};\n    columns\n      .filter(w => w.filter && w.filter.default === true)\n      .forEach(col => {\n        const values = col.filter.menus.filter(f => f.checked === true);\n        let obj: {} = {};\n        if (col.filter.reName) {\n          obj = col.filter.reName(col.filter.menus, col);\n        } else {\n          obj[col.filter.key] = values.map(i => i.value).join(',');\n        }\n        ret = { ...ret, ...obj };\n      });\n    return ret;\n  }\n\n  // #endregion\n\n  // #region statistical\n\n  private genStatistical(columns: STColumn[], list: STData[], rawData: any): STStatisticalResults {\n    const res = {};\n    columns.forEach((col, index) => {\n      res[col.key ? col.key : index] =\n        col.statistical == null ? {} : this.getStatistical(col, index, list, rawData);\n    });\n    return res;\n  }\n\n  private getStatistical(col: STColumn, index: number, list: STData[], rawData: any): STStatisticalResult {\n    const val = col.statistical;\n    const item: STStatistical = {\n      digits: 2,\n      currenty: null,\n      ...(typeof val === 'string' ? { type: val as STStatisticalType } : (val as STStatistical)),\n    };\n    let res: STStatisticalResult = { value: 0 };\n    let currenty = false;\n    if (typeof item.type === 'function') {\n      res = item.type(this.getValues(index, list), col, list, rawData);\n      currenty = true;\n    } else {\n      switch (item.type) {\n        case 'count':\n          res.value = list.length;\n          break;\n        case 'distinctCount':\n          res.value = this.getValues(index, list).filter(\n            (value, idx, self) => self.indexOf(value) === idx,\n          ).length;\n          break;\n        case 'sum':\n          res.value = this.toFixed(this.getSum(index, list), item.digits);\n          currenty = true;\n          break;\n        case 'average':\n          res.value = this.toFixed(this.getSum(index, list) / list.length, item.digits);\n          currenty = true;\n          break;\n        case 'max':\n          res.value = Math.max(...this.getValues(index, list));\n          currenty = true;\n          break;\n        case 'min':\n          res.value = Math.min(...this.getValues(index, list));\n          currenty = true;\n          break;\n      }\n    }\n    if (item.currenty === true || (item.currenty == null && currenty === true)) {\n      res.text = this.currentyPipe.transform(res.value);\n    } else {\n      res.text = String(res.value);\n    }\n    return res;\n  }\n\n  private toFixed(val: number, digits: number): number {\n    if (isNaN(val) || !isFinite(val)) {\n      return 0;\n    }\n    return parseFloat(val.toFixed(digits));\n  }\n\n  private getValues(index: number, list: STData[]): number[] {\n    return list.map(i => i._values[index].org).map(i => (i === '' || i == null ? 0 : i));\n  }\n\n  private getSum(index: number, list: STData[]): number {\n    return this.getValues(index, list).reduce((p, i) => (p += parseFloat(String(i))), 0);\n  }\n\n  // #endregion\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { XlsxService } from '@delon/abc/xlsx';\nimport { deepGet } from '@delon/util';\n\nimport { STColumn, STExportOptions } from './table.interfaces';\n\n@Injectable()\nexport class STExport {\n  constructor(@Optional() private xlsxSrv: XlsxService) {}\n\n  private _stGet(item: any, col: STColumn): any {\n    const ret: { [key: string]: any } = { t: 's', v: '' };\n\n    if (col.format) {\n      ret.v = col.format(item, col);\n    } else {\n      const val = deepGet(item, col.index as string[], '');\n      ret.v = val;\n      switch (col.type) {\n        case 'currency':\n          ret.t = 'n';\n          break;\n        case 'date':\n          ret.t = 'd';\n          break;\n        case 'yn':\n          ret.v = ret.v === col.ynTruth ? col.ynYes || 'æ¯' : col.ynNo || 'å¦';\n          break;\n      }\n    }\n\n    return ret;\n  }\n\n  private genSheet(opt: STExportOptions): { [sheet: string]: {} } {\n    const sheets: { [sheet: string]: {} } = {};\n    const sheet = (sheets[opt.sheetname || 'Sheet1'] = {});\n    const colData = opt._c.filter(\n      w => w.exported !== false && w.index && (!w.buttons || w.buttons.length === 0),\n    );\n    const cc = colData.length;\n    const dc = opt._d.length;\n\n    // column\n    for (let i = 0; i < cc; i++) {\n      sheet[`${String.fromCharCode(i + 65)}1`] = {\n        t: 's',\n        v: colData[i].title,\n      };\n    }\n\n    // content\n    for (let i = 0; i < dc; i++) {\n      for (let j = 0; j < cc; j++) {\n        sheet[`${String.fromCharCode(j + 65)}${i + 2}`] = this._stGet(opt._d[i], colData[j]);\n      }\n    }\n\n    if (cc > 0 && dc > 0) {\n      sheet['!ref'] = `A1:${String.fromCharCode(cc + 65 - 1)}${dc + 1}`;\n    }\n\n    return sheets;\n  }\n\n  export(opt: STExportOptions) {\n    const sheets = this.genSheet(opt);\n    return this.xlsxSrv.export({\n      sheets,\n      filename: opt.filename,\n      callback: opt.callback,\n    });\n  }\n}\n","import { DecimalPipe, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AlainI18NService,\n  ALAIN_I18N_TOKEN,\n  CNCurrencyPipe,\n  DatePipe,\n  DelonLocaleService,\n  DrawerHelper,\n  LocaleData,\n  ModalHelper,\n  YNPipe,\n} from '@delon/theme';\nimport {\n  deepMerge,\n  deepMergeKey,\n  toBoolean,\n  updateHostClass,\n  InputBoolean,\n  InputNumber,\n} from '@delon/util';\nimport { of, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { STColumnSource } from './table-column-source';\nimport { STDataSource } from './table-data-source';\nimport { STExport } from './table-export';\nimport { STRowSource } from './table-row.directive';\nimport { STConfig } from './table.config';\nimport {\n  STChange,\n  STChangeType,\n  STColumn,\n  STColumnButton,\n  STColumnFilterMenu,\n  STColumnSelection,\n  STData,\n  STError,\n  STExportOptions,\n  STLoadOptions,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STStatisticalResults,\n} from './table.interfaces';\n\n@Component({\n  selector: 'st',\n  templateUrl: './table.component.html',\n  providers: [\n    STDataSource,\n    STRowSource,\n    STColumnSource,\n    STExport,\n    CNCurrencyPipe,\n    DatePipe,\n    YNPipe,\n    DecimalPipe,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class STComponent implements AfterViewInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private totalTpl = ``;\n  private locale: LocaleData = {};\n  private clonePage: STPage;\n  private copyCog: STConfig;\n  _data: STData[] = [];\n  _statistical: STStatisticalResults = {};\n  _isPagination = true;\n  _allChecked = false;\n  _allCheckedDisabled = false;\n  _indeterminate = false;\n  _columns: STColumn[] = [];\n\n  // #region fields\n\n  @Input() data: string | STData[] | Observable<STData[]>;\n  /** è¯·æ±ä½éç½® */\n  @Input()\n  get req() {\n    return this._req;\n  }\n  set req(value: STReq) {\n    this._req = deepMerge({}, this._req, this.cog.req, value);\n  }\n  private _req: STReq;\n  /** è¿åä½éç½® */\n  @Input()\n  get res() {\n    return this._res;\n  }\n  set res(value: STRes) {\n    const item = deepMergeKey({}, true, this.cog.res, value);\n    const reName = item.reName;\n    if (!Array.isArray(reName.list)) reName.list = reName.list.split('.');\n    if (!Array.isArray(reName.total)) reName.total = reName.total.split('.');\n    this._res = item;\n  }\n  private _res: STRes;\n  @Input() columns: STColumn[] = [];\n  @Input() @InputNumber() ps = 10;\n  @Input() @InputNumber() pi = 1;\n  @Input() @InputNumber() total = 0;\n  /** åé¡µå¨éç½® */\n  @Input()\n  get page() {\n    return this._page;\n  }\n  set page(value: STPage) {\n    this.clonePage = value;\n    const item = deepMergeKey({}, true, this.cog.page, value);\n    const { total } = item;\n    if (typeof total === 'string' && total.length) {\n      this.totalTpl = total;\n    } else if (toBoolean(total)) {\n      this.totalTpl = this.locale.total;\n    } else {\n      this.totalTpl = '';\n    }\n    this._page = item;\n  }\n  private _page: STPage;\n  /** æ¯å¦æ¾ç¤ºLoading */\n  @Input() @InputBoolean() loading = false;\n  /** å»¶è¿æ¾ç¤ºå è½½ææçæ¶é´ï¼é²æ­¢éªçï¼ */\n  @Input() @InputNumber() loadingDelay = 0;\n  /** æ¯å¦æ¾ç¤ºè¾¹æ¡ */\n  @Input() @InputBoolean() bordered = false;\n  /** tableå¤§å° */\n  @Input() size: 'small' | 'middle' | 'default';\n  /** çºµåæ¯ææ»å¨ï¼ä¹å¯ç¨äºæå®æ»å¨åºåçé«åº¦ï¼`{ y: '300px', x: '300px' }` */\n  @Input() scroll: { y?: string; x?: string };\n  /**\n   * åæåºè§å\n   * - è¥ä¸æå®ï¼åè¿åï¼`columnName=ascend|descend`\n   * - è¥æå®ï¼åè¿åï¼`sort=columnName.(ascend|descend)`\n   */\n  @Input() singleSort: STSingleSort = null;\n  private _multiSort: STMultiSort;\n  /** æ¯å¦å¤æåºï¼å½ `sort` å¤ä¸ªç¸åå¼æ¶èªå¨åå¹¶ï¼å»ºè®®åç«¯æ¯ææ¶ä½¿ç¨ */\n  @Input()\n  get multiSort() {\n    return this._multiSort;\n  }\n  set multiSort(value: any) {\n    if (typeof value === 'boolean' && !toBoolean(value)) {\n      this._multiSort = null;\n      return;\n    }\n    this._multiSort = {\n      ...(typeof value === 'object' ? value : {}),\n    };\n  }\n  @Input() rowClassName: STRowClassName;\n  /** `header` æ é¢ */\n  @Input() header: string | TemplateRef<void>;\n  /** `footer` åºé¨ */\n  @Input() footer: string | TemplateRef<void>;\n  /** é¢å¤ `body` é¡¶é¨åå®¹ */\n  @Input() bodyHeader: TemplateRef<STStatisticalResults>;\n  /** é¢å¤ `body` åå®¹ */\n  @Input() body: TemplateRef<STStatisticalResults>;\n  @Input() @InputBoolean() expandRowByClick = false;\n  /** `expand` å¯å±å¼ï¼å½æ°æ®æºä¸­åæ¬ `expand` è¡¨ç¤ºå±å¼ç¶æ */\n  @Input() expand: TemplateRef<{ $implicit: {}; column: STColumn }>;\n  @Input() noResult: string | TemplateRef<void>;\n  @Input() widthConfig: string[];\n  /** è¡åå»å¤å°æ¶é¿ä¹ç±»ä¸ºåå»ï¼åä½ï¼æ¯«ç§ï¼ï¼é»è®¤ï¼`200` */\n  @Input() @InputNumber() rowClickTime = 200;\n  @Input() @InputBoolean() responsiveHideHeaderFooter: boolean;\n  /** è¯·æ±å¼å¸¸æ¶åè° */\n  @Output() readonly error = new EventEmitter<STError>();\n  /**\n   * ååæ¶åè°ï¼åæ¬ï¼`pi`ã`ps`ã`checkbox`ã`radio`ã`sort`ã`filter`ã`click`ã`dblClick` åå¨\n   */\n  @Output() readonly change = new EventEmitter<STChange>();\n\n  // #endregion\n\n  constructor(\n    @Optional() @Inject(ALAIN_I18N_TOKEN) i18nSrv: AlainI18NService,\n    private cdr: ChangeDetectorRef,\n    private cog: STConfig,\n    private router: Router,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private exportSrv: STExport,\n    private modalHelper: ModalHelper,\n    private drawerHelper: DrawerHelper,\n    @Inject(DOCUMENT) private doc: any,\n    private columnSource: STColumnSource,\n    private dataSource: STDataSource,\n    private delonI18n: DelonLocaleService,\n  ) {\n    this.delonI18n.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.delonI18n.getData('st');\n      if (this._columns.length > 0) {\n        this.page = this.clonePage;\n        this.cd();\n      }\n    });\n\n    this.copyCog = deepMergeKey(new STConfig(), true, cog);\n    delete this.copyCog.multiSort;\n    Object.assign(this, this.copyCog);\n    if (cog.multiSort && cog.multiSort.global !== false) {\n      this.multiSort = { ...cog.multiSort };\n    }\n\n    i18nSrv.change\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        filter(() => this._columns.length > 0),\n      )\n      .subscribe(() => this.refreshColumns());\n  }\n\n  cd() {\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  renderTotal(total: string, range: string[]) {\n    return this.totalTpl\n      ? this.totalTpl\n          .replace('{{total}}', total)\n          .replace('{{range[0]}}', range[0])\n          .replace('{{range[1]}}', range[1])\n      : '';\n  }\n\n  private changeEmit(type: STChangeType, data?: any) {\n    const res: STChange = {\n      type,\n      pi: this.pi,\n      ps: this.ps,\n      total: this.total,\n    };\n    if (data != null) {\n      res[type] = data;\n    }\n    this.change.emit(res);\n  }\n\n  private get routerState() {\n    const { pi, ps, total } = this;\n    return { pi, ps, total };\n  }\n\n  // #region data\n\n  private _load() {\n    const { pi, ps, data, req, res, page, total, singleSort, multiSort, rowClassName } = this;\n    this.loading = true;\n    return this.dataSource\n      .process({\n        pi,\n        ps,\n        total,\n        data,\n        req,\n        res,\n        page,\n        columns: this._columns,\n        singleSort,\n        multiSort,\n        rowClassName,\n      })\n      .then(result => {\n        this.loading = false;\n        if (typeof result.pi !== 'undefined') {\n          this.pi = result.pi;\n        }\n        if (typeof result.ps !== 'undefined') {\n          this.ps = result.ps;\n        }\n        if (typeof result.total !== 'undefined') {\n          this.total = result.total;\n        }\n        if (typeof result.pageShow !== 'undefined') {\n          this._isPagination = result.pageShow;\n        }\n        this._data = result.list;\n        this._statistical = result.statistical;\n        return this._data;\n      })\n      .then(() => this._refCheck())\n      .catch(error => {\n        this.loading = false;\n        this.error.emit({ type: 'req', error });\n      });\n  }\n\n  /** æ¸ç©ºæææ°æ® */\n  clear(cleanStatus = true) {\n    if (cleanStatus) {\n      this.clearStatus();\n    }\n    this._data = [];\n    return this.cd();\n  }\n\n  /** æ¸ç©ºææç¶æ */\n  clearStatus() {\n    return this.clearCheck()\n      .clearRadio()\n      .clearFilter()\n      .clearSort();\n  }\n\n  /**\n   * æ ¹æ®é¡µç éæ°å è½½æ°æ®\n   *\n   * @param pi æå®å½åé¡µç ï¼é»è®¤ï¼`1`\n   * @param extraParams éæ°æå® `extraParams` å¼\n   * @param options éé¡¹\n   */\n  load(pi = 1, extraParams?: {}, options?: STLoadOptions) {\n    if (pi !== -1) this.pi = pi;\n    if (typeof extraParams !== 'undefined') {\n      this._req.params =\n        options && options.merge ? { ...this._req.params, ...extraParams } : extraParams;\n    }\n    this._change('pi');\n    return this;\n  }\n\n  /**\n   * éæ°å·æ°å½åé¡µ\n   * @param extraParams éæ°æå® `extraParams` å¼\n   */\n  reload(extraParams?: {}, options?: STLoadOptions) {\n    return this.load(-1, extraParams, options);\n  }\n\n  /**\n   * éç½®ä¸éæ°è®¾ç½® `pi` ä¸º `1`ï¼åå«ä»¥ä¸å¼ï¼\n   * - `check` æ°æ®\n   * - `radio` æ°æ®\n   * - `sort` æ°æ®\n   * - `fileter` æ°æ®\n   *\n   * @param extraParams éæ°æå® `extraParams` å¼\n   */\n  reset(extraParams?: {}, options?: STLoadOptions) {\n    this.clearStatus().load(1, extraParams, options);\n    return this;\n  }\n\n  private _toTop() {\n    if (!this.page.toTop) return;\n    const el = this.el.nativeElement as HTMLElement;\n    if (this.scroll) {\n      el.querySelector('.ant-table-body').scrollTo(0, 0);\n      return;\n    }\n    el.scrollIntoView();\n    // fix header height\n    this.doc.documentElement.scrollTop -= this.page.toTopOffset;\n  }\n\n  _change(type: 'pi' | 'ps') {\n    this._load().then(() => {\n      this._toTop();\n    });\n    this.changeEmit(type);\n  }\n\n  _click(e: Event, item: STData, col: STColumn) {\n    e.preventDefault();\n    e.stopPropagation();\n    const res = col.click(item, this);\n    if (typeof res === 'string') {\n      this.router.navigateByUrl(res, { state: this.routerState });\n    }\n    return false;\n  }\n\n  private rowClickCount = 0;\n  _rowClick(e: Event, item: STData, index: number) {\n    if ((e.target as HTMLElement).nodeName === 'INPUT') return;\n    const { expand, expandRowByClick, rowClickTime } = this;\n    if (!!expand && expandRowByClick) {\n      item.expand = !item.expand;\n      this.changeEmit('expand', item);\n      return;\n    }\n    ++this.rowClickCount;\n    if (this.rowClickCount !== 1) return;\n    setTimeout(() => {\n      const data = { e, item, index };\n      if (this.rowClickCount === 1) {\n        this.changeEmit('click', data);\n      } else {\n        this.changeEmit('dblClick', data);\n      }\n      this.rowClickCount = 0;\n    }, rowClickTime);\n  }\n\n  /** ç§»é¤æè¡æ°æ® */\n  removeRow(data: STData | STData[]) {\n    if (!Array.isArray(data)) {\n      data = [data];\n    }\n\n    (data as STData[])\n      .map(item => this._data.indexOf(item))\n      .filter(pos => pos !== -1)\n      .forEach(pos => this._data.splice(pos, 1));\n\n    // recalculate no\n    this._columns\n      .filter(w => w.type === 'no')\n      .forEach(c => this._data.forEach((i, idx) => (i._values[c.__point] = { text: this.dataSource.getNoIndex(i, c, idx), org: idx })));\n\n    return this.cd();\n  }\n\n  // #endregion\n\n  // #region sort\n\n  sort(col: STColumn, idx: number, value: any) {\n    if (this.multiSort) {\n      col._sort.default = value;\n      col._sort.tick = this.dataSource.nextSortTick;\n    } else {\n      this._columns.forEach((item, index) => (item._sort.default = index === idx ? value : null));\n    }\n    this._load();\n    const res = {\n      value,\n      map: this.dataSource.getReqSortMap(this.singleSort, this.multiSort, this._columns),\n      column: col,\n    };\n    this.changeEmit('sort', res);\n  }\n\n  clearSort() {\n    this._columns.forEach(item => (item._sort.default = null));\n    return this;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private handleFilter(col: STColumn) {\n    col.filter.default = col.filter.menus.findIndex(w => w.checked) !== -1;\n    this._load();\n    this.changeEmit('filter', col);\n  }\n\n  _filterConfirm(col: STColumn) {\n    this.handleFilter(col);\n  }\n\n  _filterClear(col: STColumn) {\n    col.filter.menus.forEach(i => (i.checked = false));\n    this.handleFilter(col);\n  }\n\n  _filterRadio(col: STColumn, item: STColumnFilterMenu, checked: boolean) {\n    col.filter.menus.forEach(i => (i.checked = false));\n    item.checked = checked;\n  }\n\n  clearFilter() {\n    this._columns\n      .filter(w => w.filter && w.filter.default === true)\n      .forEach(col => {\n        col.filter.default = false;\n        col.filter.menus.forEach(f => (f.checked = false));\n      });\n    return this;\n  }\n\n  // #endregion\n\n  // #region checkbox\n\n  /** æ¸é¤ææ `checkbox` */\n  clearCheck(): this {\n    return this._checkAll(false);\n  }\n\n  private _refCheck(): this {\n    const validData = this._data.filter(w => !w.disabled);\n    const checkedList = validData.filter(w => w.checked === true);\n    this._allChecked = checkedList.length > 0 && checkedList.length === validData.length;\n    const allUnChecked = validData.every(value => !value.checked);\n    this._indeterminate = !this._allChecked && !allUnChecked;\n    this._allCheckedDisabled = this._data.length === this._data.filter(w => w.disabled).length;\n    this.cd();\n    return this;\n  }\n\n  _checkAll(checked?: boolean): this {\n    checked = typeof checked === 'undefined' ? this._allChecked : checked;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = checked));\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkSelection(i: STData, value: boolean) {\n    i.checked = value;\n    return this._refCheck()._checkNotify();\n  }\n\n  _rowSelection(row: STColumnSelection): this {\n    row.select(this._data);\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkNotify(): this {\n    const res = this._data.filter(w => !w.disabled && w.checked === true);\n    this.changeEmit('checkbox', res);\n    return this;\n  }\n\n  // #endregion\n\n  // #region radio\n\n  /** æ¸é¤ææ `radio` */\n  clearRadio(): this {\n    this._data.filter(w => w.checked).forEach(item => (item.checked = false));\n    this.changeEmit('radio', null);\n    return this;\n  }\n\n  _refRadio(checked: boolean, item: STData): this {\n    // if (item.disabled === true) return;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = false));\n    item.checked = checked;\n    this.changeEmit('radio', item);\n    return this;\n  }\n\n  // #endregion\n\n  // #region buttons\n\n  _btnClick(e: Event, record: STData, btn: STColumnButton) {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    if (btn.type === 'modal' || btn.type === 'static') {\n      const { modal } = btn;\n      const obj = { [modal.paramsName]: record };\n      (this.modalHelper[btn.type === 'modal' ? 'create' : 'createStatic'] as any)(\n        modal.component,\n        { ...obj, ...(modal.params && modal.params(record)) },\n        deepMergeKey({}, true, this.copyCog.modal, modal),\n      )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe(res => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'drawer') {\n      const { drawer } = btn;\n      const obj = { [drawer.paramsName]: record };\n      this.drawerHelper\n        .create(\n          drawer.title,\n          drawer.component,\n          { ...obj, ...(drawer.params && drawer.params(record)) },\n          deepMergeKey({}, true, this.copyCog.drawer, drawer),\n        )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe(res => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'link') {\n      const clickRes = this.btnCallback(record, btn);\n      if (typeof clickRes === 'string') {\n        this.router.navigateByUrl(clickRes, { state: this.routerState });\n      }\n      return;\n    }\n    this.btnCallback(record, btn);\n  }\n\n  private btnCallback(record: STData, btn: STColumnButton, modal?: any) {\n    if (!btn.click) return;\n    if (typeof btn.click === 'string') {\n      switch (btn.click) {\n        case 'load':\n          this.load();\n          break;\n        case 'reload':\n          this.reload();\n          break;\n      }\n    } else {\n      return btn.click(record, modal, this);\n    }\n  }\n\n  _btnText(record: STData, btn: STColumnButton) {\n    if (btn.format) return btn.format(record, btn);\n    return btn.text || '';\n  }\n\n  _validBtns(item: STData, col: STColumn): STColumnButton[] {\n    return col.buttons.filter(btn => btn.iif(item, btn, col));\n  }\n\n  // #endregion\n\n  // #region export\n\n  /**\n   * å¯¼åºå½åé¡µï¼ç¡®ä¿å·²ç»æ³¨å `XlsxModule`\n   * @param newData éæ°æå®æ°æ®ï¼ä¾å¦å¸æå¯¼åºæææ°æ®éå¸¸æç¨\n   * @param opt é¢å¤åæ°\n   */\n  export(newData?: STData[], opt?: STExportOptions) {\n    (newData ? of(newData) : of(this._data)).subscribe((res: STData[]) =>\n      this.exportSrv.export({\n        ...opt,\n        ...{\n          _d: res,\n          _c: this._columns,\n        },\n      }),\n    );\n  }\n\n  // #endregion\n\n  resetColumns() {\n    return this.refreshColumns()._load();\n  }\n\n  private refreshColumns(): this {\n    this._columns = this.columnSource.process(this.columns);\n    return this;\n  }\n\n  private setClass() {\n    updateHostClass(this.el.nativeElement, this.renderer, {\n      [`st`]: true,\n      [`st__p-${this.page.placement}`]: this.page.placement,\n      [`ant-table-rep__hide-header-footer`]: this.responsiveHideHeaderFooter,\n    });\n  }\n\n  ngAfterViewInit() {\n    this.columnSource.restoreAllRender(this._columns);\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (changes.columns) {\n      this.refreshColumns();\n    }\n    if (changes.data && changes.data.currentValue) {\n      this._load();\n    }\n    this.setClass();\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\n\nimport { DelonACLModule } from '@delon/acl';\nimport { DelonUtilModule } from '@delon/util';\n\nimport { STRowDirective } from './table-row.directive';\nimport { STComponent } from './table.component';\n\nconst COMPONENTS = [STComponent, STRowDirective];\n\n@NgModule({\n  schemas: [NO_ERRORS_SCHEMA],\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonACLModule, NgZorroAntdModule],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class STModule {}\n"],"names":["tslib_1.__values","tslib_1.__decorate"],"mappings":"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"}
