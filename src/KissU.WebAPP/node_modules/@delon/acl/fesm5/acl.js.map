{"version":3,"file":"acl.js.map","sources":["ng://@delon/acl/src/acl.service.ts","ng://@delon/acl/src/acl.directive.ts","ng://@delon/acl/src/acl.config.ts","ng://@delon/acl/src/acl-guard.ts","ng://@delon/acl/src/acl.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ACLCanType, ACLType } from './acl.type';\n\n/**\n * è®¿é®æ§å¶æå¡\n */\n@Injectable({ providedIn: 'root' })\nexport class ACLService {\n  private roles: string[] = [];\n  private abilities: Array<number | string> = [];\n  private full = false;\n  private aclChange: BehaviorSubject<ACLType | boolean> = new BehaviorSubject<ACLType | boolean>(\n    null,\n  );\n\n  /** ACLåæ´éç¥ */\n  get change(): Observable<ACLType | boolean> {\n    return this.aclChange.asObservable();\n  }\n\n  /** è·åæææ°æ® */\n  get data() {\n    return {\n      full: this.full,\n      roles: this.roles,\n      abilities: this.abilities,\n    };\n  }\n\n  private parseACLType(val: string | string[] | ACLType): ACLType {\n    if (typeof val !== 'string' && !Array.isArray(val)) {\n      return val as ACLType;\n    }\n    if (Array.isArray(val)) {\n      return { role: val as string[] } as ACLType;\n    }\n    return {\n      role: [val],\n    } as ACLType;\n  }\n\n  /**\n   * è®¾ç½®å½åç¨æ·è§è²ææéè½åï¼ä¼åæ¸é¤ææï¼\n   */\n  set(value: ACLType) {\n    this.abilities = [];\n    this.roles = [];\n    this.add(value);\n    this.aclChange.next(value);\n  }\n\n  /**\n   * æ è¯å½åç¨æ·ä¸ºå¨éï¼å³ä¸åé\n   */\n  setFull(val: boolean) {\n    this.full = val;\n    this.aclChange.next(val);\n  }\n\n  /**\n   * è®¾ç½®å½åç¨æ·æéè½åï¼ä¼åæ¸é¤ææï¼\n   */\n  setAbility(abilities: Array<number | string>) {\n    this.set({ ability: abilities } as ACLType);\n  }\n\n  /**\n   * è®¾ç½®å½åç¨æ·è§è²ï¼ä¼åæ¸é¤ææï¼\n   */\n  setRole(roles: string[]) {\n    this.set({ role: roles } as ACLType);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·å¢å è§è²ææéè½å\n   */\n  add(value: ACLType) {\n    if (value.role && value.role.length > 0) {\n      this.roles.push(...value.role);\n    }\n    if (value.ability && value.ability.length > 0) {\n      this.abilities.push(...value.ability);\n    }\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·éå è§è²\n   */\n  attachRole(roles: string[]) {\n    for (const val of roles) {\n      if (!this.roles.includes(val)) {\n        this.roles.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·éå æé\n   */\n  attachAbility(abilities: Array<number | string>) {\n    for (const val of abilities) {\n      if (!this.abilities.includes(val)) {\n        this.abilities.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·ç§»é¤è§è²\n   */\n  removeRole(roles: string[]) {\n    for (const val of roles) {\n      const idx = this.roles.indexOf(val);\n      if (idx !== -1) {\n        this.roles.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·ç§»é¤æé\n   */\n  removeAbility(abilities: Array<number | string>) {\n    for (const val of abilities) {\n      const idx = this.abilities.indexOf(val);\n      if (idx !== -1) {\n        this.abilities.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * å½åç¨æ·æ¯å¦æå¯¹åºè§è²ï¼å¶å® `number` è¡¨ç¤ºAbility\n   *\n   * - å½ `full: true` æåæ° `null` æ¶è¿å `true`\n   * - è¥ä½¿ç¨ `ACLType` åæ°ï¼å¯ä»¥æå® `mode` æ ¡éªæ¨¡å¼\n   */\n  can(roleOrAbility: ACLCanType): boolean {\n    if (this.full === true || !roleOrAbility) {\n      return true;\n    }\n\n    let t: ACLType = {};\n    if (typeof roleOrAbility === 'number') {\n      t = { ability: [roleOrAbility] };\n    } else if (\n      Array.isArray(roleOrAbility) &&\n      roleOrAbility.length > 0 &&\n      typeof roleOrAbility[0] === 'number'\n    ) {\n      t = { ability: roleOrAbility };\n    } else {\n      t = this.parseACLType(roleOrAbility);\n    }\n\n    if (t.role) {\n      if (t.mode === 'allOf') return t.role.every(v => this.roles.includes(v));\n      else return t.role.some(v => this.roles.includes(v));\n    }\n    if (t.ability) {\n      if (t.mode === 'allOf') {\n        return (t.ability as any[]).every(v => this.abilities.includes(v));\n      } else {\n        return (t.ability as any[]).some(v => this.abilities.includes(v));\n      }\n    }\n    return false;\n  }\n\n  /** @inner */\n  parseAbility(value: ACLCanType): ACLCanType {\n    if (typeof value === 'number' || typeof value === 'string' || Array.isArray(value)) {\n      value = { ability: Array.isArray(value) ? value : [value] } as ACLType;\n    }\n    delete value.role;\n    return value;\n  }\n\n  /**\n   * å½åç¨æ·æ¯å¦æå¯¹åºæéç¹\n   */\n  canAbility(value: ACLCanType): boolean {\n    return this.can(this.parseAbility(value));\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n@Directive({ selector: '[acl]' })\nexport class ACLDirective implements OnDestroy {\n  private _value: ACLCanType;\n  private change$: Subscription;\n\n  @Input('acl')\n  set acl(value: ACLCanType) {\n    this.set(value);\n  }\n\n  @Input('acl-ability')\n  set ability(value: ACLCanType) {\n    this.set(this.srv.parseAbility(value));\n  }\n\n  private set(value: ACLCanType) {\n    const CLS = 'acl__hide';\n    const el = this.el.nativeElement;\n    if (this.srv.can(value)) {\n      this.renderer.removeClass(el, CLS);\n    } else {\n      this.renderer.addClass(el, CLS);\n    }\n    this._value = value;\n  }\n\n  constructor(private el: ElementRef, private renderer: Renderer2, private srv: ACLService) {\n    this.change$ = this.srv.change.subscribe(() => this.set(this._value));\n  }\n\n  ngOnDestroy(): void {\n    this.change$.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonACLConfig {\n  /**\n   * è·¯ç±å®å«å¤±è´¥åè·³è½¬ï¼é»è®¤ï¼`/403`\n   */\n  guard_url?: string = '/403';\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { of, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { DelonACLConfig } from './acl.config';\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n@Injectable({ providedIn: 'root' })\nexport class ACLGuard implements CanActivate, CanActivateChild, CanLoad {\n  constructor(private srv: ACLService, private router: Router, private options: DelonACLConfig) {}\n\n  private process(guard: ACLCanType | Observable<ACLCanType>): Observable<boolean> {\n    return (guard && guard instanceof Observable\n      ? guard\n      : of(typeof guard !== 'undefined' && guard !== null ? (guard as ACLCanType) : null)\n    ).pipe(\n      map(v => this.srv.can(v)),\n      tap(v => {\n        if (v) return;\n        this.router.navigateByUrl(this.options.guard_url);\n      }),\n    );\n  }\n\n  // lazy loading\n  canLoad(route: Route): Observable<boolean> {\n    return this.process((route.data && route.data.guard) || null);\n  }\n  // all children route\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<boolean> {\n    return this.canActivate(childRoute, state);\n  }\n  // route\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.process((route.data && route.data.guard) || null);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ACLDirective } from './acl.directive';\n\nconst COMPONENTS = [ACLDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class DelonACLModule {}\n"],"names":["tslib_1.__values"],"mappings":"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"}
