{"version":3,"file":"ng-zorro-antd-switch.js.map","sources":["ng://ng-zorro-antd/switch/nz-switch.component.ts","ng://ng-zorro-antd/switch/nz-switch.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\nimport {\n  forwardRef,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { InputBoolean, NzSizeDSType } from 'ng-zorro-antd/core';\n\n@Component({\n  selector: 'nz-switch',\n  exportAs: 'nzSwitch',\n  preserveWhitespaces: false,\n  templateUrl: './nz-switch.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzSwitchComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '(click)': 'hostClick($event)'\n  },\n  styles: [\n    `\n      nz-switch {\n        display: inline-block;\n      }\n    `\n  ]\n})\nexport class NzSwitchComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  checked = false;\n  onChange: (value: boolean) => void = () => null;\n  onTouched: () => void = () => null;\n  @ViewChild('switchElement') private switchElement: ElementRef;\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzControl = false;\n  @Input() nzCheckedChildren: string | TemplateRef<void>;\n  @Input() nzUnCheckedChildren: string | TemplateRef<void>;\n  @Input() nzSize: NzSizeDSType;\n\n  hostClick(e: MouseEvent): void {\n    e.preventDefault();\n    if (!this.nzDisabled && !this.nzLoading && !this.nzControl) {\n      this.updateValue(!this.checked);\n    }\n  }\n\n  updateValue(value: boolean): void {\n    if (this.checked !== value) {\n      this.checked = value;\n      this.onChange(this.checked);\n    }\n  }\n\n  onKeyDown(e: KeyboardEvent): void {\n    if (!this.nzControl && !this.nzDisabled && !this.nzLoading) {\n      if (e.keyCode === LEFT_ARROW) {\n        this.updateValue(false);\n        e.preventDefault();\n      } else if (e.keyCode === RIGHT_ARROW) {\n        this.updateValue(true);\n        e.preventDefault();\n      } else if (e.keyCode === SPACE || e.keyCode === ENTER) {\n        this.updateValue(!this.checked);\n        e.preventDefault();\n      }\n    }\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.switchElement.nativeElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.switchElement.nativeElement.blur();\n  }\n\n  constructor(private cdr: ChangeDetectorRef, private focusMonitor: FocusMonitor) {}\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.switchElement.nativeElement, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.switchElement.nativeElement);\n  }\n\n  writeValue(value: boolean): void {\n    this.checked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (_: boolean) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.nzDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzAddOnModule, NzWaveModule } from 'ng-zorro-antd/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzSwitchComponent } from './nz-switch.component';\n\n@NgModule({\n  exports: [NzSwitchComponent],\n  declarations: [NzSwitchComponent],\n  imports: [CommonModule, NzWaveModule, NzIconModule, NzAddOnModule]\n})\nexport class NzSwitchModule {}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}
