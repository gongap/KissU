{"version":3,"file":"ng-zorro-antd-progress.js.map","sources":["ng://ng-zorro-antd/progress/nz-progress.component.ts","ng://ng-zorro-antd/progress/nz-progress.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { isNotNil, InputNumber } from 'ng-zorro-antd/core';\n\nexport type NzProgressGapPositionType = 'top' | 'bottom' | 'left' | 'right';\nexport type NzProgressStatusType = 'success' | 'exception' | 'active' | 'normal';\nexport type NzProgressTypeType = 'line' | 'circle' | 'dashboard';\nexport type NzProgressStrokeLinecapType = 'round' | 'square';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-progress',\n  exportAs: 'nzProgress',\n  preserveWhitespaces: false,\n  templateUrl: './nz-progress.component.html'\n})\nexport class NzProgressComponent implements OnInit, OnChanges {\n  @Input() nzShowInfo = true;\n  @Input() nzWidth = 132;\n  @Input() nzStrokeColor: string;\n  @Input() nzSize: string;\n  @Input() nzFormat?: (percent: number) => string;\n  @Input() @InputNumber() nzSuccessPercent?: number;\n  @Input() @InputNumber() nzPercent: number;\n  @Input() @InputNumber() nzStrokeWidth: number;\n  @Input() @InputNumber() nzGapDegree: number;\n  @Input() nzStatus: NzProgressStatusType;\n  @Input() nzType: NzProgressTypeType = 'line';\n  @Input() nzGapPosition?: NzProgressGapPositionType;\n  @Input() nzStrokeLinecap: NzProgressStrokeLinecapType = 'round';\n\n  trailPathStyle: { [key: string]: string };\n  strokePathStyle: { [key: string]: string };\n  pathString: string;\n  icon: string;\n  statusColorMap: { [key: string]: string } = {\n    normal: '#108ee9',\n    exception: '#ff5500',\n    success: '#87d068'\n  };\n\n  private cachedStatus: NzProgressStatusType = 'normal';\n  private inferredStatus: NzProgressStatusType = 'normal';\n  private inferredStrokeWidth: number = 8;\n  private inferredGapPosition: string;\n  private inferredGapDegree: number;\n\n  get formatter(): (percent: number) => string {\n    return this.nzFormat || ((p: number): string => `${p}%`);\n  }\n\n  get status(): NzProgressStatusType {\n    return this.nzStatus || this.inferredStatus;\n  }\n\n  get strokeWidth(): number {\n    return this.nzStrokeWidth || this.inferredStrokeWidth;\n  }\n\n  get isCircleStyle(): boolean {\n    return this.nzType === 'circle' || this.nzType === 'dashboard';\n  }\n\n  ngOnInit(): void {\n    this.updatePathStyles();\n    this.updateIcon();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const {\n      nzGapPosition,\n      nzStrokeLinecap,\n      nzGapDegree,\n      nzType,\n      nzSize,\n      nzStatus,\n      nzPercent,\n      nzSuccessPercent\n    } = changes;\n\n    if (nzGapPosition || nzStrokeLinecap || nzGapDegree || nzType || nzPercent) {\n      this.updatePathStyles();\n    }\n\n    if (nzSize) {\n      if (this.nzSize === 'small') {\n        this.inferredStrokeWidth = 6;\n      }\n    }\n\n    if (nzStatus) {\n      this.cachedStatus = this.nzStatus || this.cachedStatus;\n      this.updateIcon();\n    }\n\n    if (nzPercent || nzSuccessPercent) {\n      const fillAll = parseInt(this.nzPercent.toString(), 10) >= 100;\n      if (fillAll) {\n        if ((isNotNil(this.nzSuccessPercent) && this.nzSuccessPercent! >= 100) || this.nzSuccessPercent === undefined) {\n          this.inferredStatus = 'success';\n        }\n      } else {\n        this.inferredStatus = this.cachedStatus;\n      }\n      this.updateIcon();\n    }\n\n    if (nzType) {\n      if (this.nzType !== 'line') {\n        this.inferredStrokeWidth = 6;\n      }\n      if (this.nzType === 'dashboard') {\n        this.inferredGapPosition = 'bottom';\n        this.inferredGapDegree = 75;\n      }\n      if (this.nzType === 'circle') {\n        this.inferredGapDegree = 0;\n      }\n    }\n  }\n\n  updatePathStyles(): void {\n    const radius = 50 - this.strokeWidth / 2;\n    const gapPosition = this.nzGapPosition || this.inferredGapPosition;\n    let beginPositionX = 0;\n    let beginPositionY = -radius;\n    let endPositionX = 0;\n    let endPositionY = radius * -2;\n\n    switch (gapPosition) {\n      case 'left':\n        beginPositionX = -radius;\n        beginPositionY = 0;\n        endPositionX = radius * 2;\n        endPositionY = 0;\n        break;\n      case 'right':\n        beginPositionX = radius;\n        beginPositionY = 0;\n        endPositionX = radius * -2;\n        endPositionY = 0;\n        break;\n      case 'bottom':\n        beginPositionY = radius;\n        endPositionY = radius * 2;\n        break;\n      default:\n    }\n\n    this.pathString = `M 50,50 m ${beginPositionX},${beginPositionY}\n     a ${radius},${radius} 0 1 1 ${endPositionX},${-endPositionY}\n     a ${radius},${radius} 0 1 1 ${-endPositionX},${endPositionY}`;\n\n    const len = Math.PI * 2 * radius;\n    const gapDegree = this.nzGapDegree || this.inferredGapDegree;\n\n    this.trailPathStyle = {\n      strokeDasharray: `${len - gapDegree}px ${len}px`,\n      strokeDashoffset: `-${gapDegree / 2}px`,\n      transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s'\n    };\n    this.strokePathStyle = {\n      stroke: this.nzStrokeColor || (null as any), // tslint:disable-line:no-any\n      strokeDasharray: `${(this.nzPercent / 100) * (len - gapDegree)}px ${len}px`,\n      strokeDashoffset: `-${gapDegree / 2}px`,\n      transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s'\n    };\n  }\n\n  updateIcon(): void {\n    const isCircle = this.nzType === 'circle' || this.nzType === 'dashboard';\n    const ret = this.status === 'success' ? 'check' : this.status === 'exception' ? 'close' : '';\n\n    this.icon = ret ? ret + (isCircle ? '-o' : '-circle-fill') : '';\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzProgressComponent } from './nz-progress.component';\n\n@NgModule({\n  exports: [NzProgressComponent],\n  declarations: [NzProgressComponent],\n  imports: [CommonModule, NzIconModule]\n})\nexport class NzProgressModule {}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}
