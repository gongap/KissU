{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ng-zorro-antd/modal/nz-modal-config.ts","ng://ng-zorro-antd/modal/nz-modal-control.service.ts","ng://ng-zorro-antd/modal/nz-modal-ref.class.ts","ng://ng-zorro-antd/modal/nz-modal.component.ts","ng://ng-zorro-antd/modal/css-unit.pipe.ts","ng://ng-zorro-antd/modal/nz-modal.service.ts","ng://ng-zorro-antd/modal/nz-modal.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","NZ_MODAL_CONFIG","InjectionToken","NzModalControlService","parentService","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","_this","hasRegistered","afterOpenSubscription","afterOpen","subscribe","push","afterCloseSubscription","afterClose","removeOpenModal","set","deregisterModal","registeredMeta","get","unsubscribe","delete","has","closeAll","close","index","indexOf","splice","next","Injectable","type","Optional","SkipSelf","rootOpenModals","rootAfterAllClose","Subject","rootRegisteredMetaMap","Map","_super","NzModalComponent","__extends","__","constructor","create","tslib_1.__extends","NzModalRef","nzAfterOpen","asObservable","nzAfterClose","nzCancelText","locale","nzOkText","nzVisible","animationState","nzMask","nzModalGlobalConfig","nzMaskClosable","ngOnInit","i18n","localeChange","pipe","takeUntil","unsubscribe$","getLocaleData","isComponent","nzContent","createDynamicComponent","isModalButtons","nzFooter","formatModalButtons","container","nzGetContainer","HTMLElement","appendChild","elementRef","nativeElement","fromEvent","document","body","e","keydownListener","OverlayRef","setOverlayRef","overlayElement","overlayRef","keydownEvents","modalControl","ngOnChanges","changes","handleVisibleStateChange","firstChange","ngAfterViewInit","contentComponentRef","bodyContainer","insert","hostView","autoFocusButtonOk","focus","ngOnDestroy","changeVisibleFromInside","then","dispose","complete","clearTimeout","timeoutId","event","keyCode","ESCAPE","nzKeyboard","onClickOkCancel","open","result","destroy","triggerOk","triggerCancel","getInstance","getContentComponentRef","getContentComponent","instance","getElement","onMaskDialogDown","dialogMouseDown","onDialogUp","setTimeout","onClickMask","$event","mask","maskClosable","classList","contains","isModalType","nzModalType","onClickCloseBtn","trigger","ok","nzOnOk","cancel","nzOnCancel","loadingKey","EventEmitter","emit","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","value","isTemplateRef","TemplateRef","Type","isArray","visible","animation","closeResult","scrollStrategy","enable","savePreviouslyFocusedElement","trapFocus","overlayKeyboardDispatcher","add","remove","Promise","resolve","animateTo","undefined","restoreFocus","disable","cdr","markForCheck","getButtonCallableProp","options","prop","args","onButtonClick","button","loading","nzVisibleChange","changeAnimationState","state","maskAnimationClassMap","_a","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","nzNoAnimation","buttons","map","size","autoLoading","show","disabled","component","factory","cfr","resolveComponentFactory","childInjector","Injector","providers","provide","useValue","parent","viewContainer","parentInjector","nzComponentParams","changeDetectorRef","detectChanges","modalElement","modalContainer","previouslyFocusedElement","previouslyDOMRect","getBoundingClientRect","lastPosition","getElementOffset","x","left","width","y","top","height","transformOrigin","offsetLeft","offsetTop","focusTrap","focusTrapFactory","focusInitialElementWhenReady","Component","selector","exportAs","template","changeDetection","ChangeDetectionStrategy","Default","Overlay","OverlayKeyboardDispatcher","NzI18nService","ComponentFactoryResolver","ElementRef","ViewContainerRef","FocusTrapFactory","ChangeDetectorRef","Inject","DOCUMENT","Input","Output","ViewChild","read","tslib_1.__decorate","InputBoolean","overlay","nzClosable","nzOkLoading","nzOkDisabled","nzCancelDisabled","nzCancelLoading","nzZIndex","nzWidth","nzOkType","nzIconType","scrollStrategies","block","CssUnitPipe","transform","defaultUnit","formatted","isNaN","Pipe","name","ModalBuilderForService","destroyModal","changeProps","createModal","attach","ComponentPortal","NzModalService","confirm","confirmType","logger","warn","nzClassName","info","simpleConfirm","success","error","warning","LoggerService","NgModule","imports","CommonModule","OverlayModule","NzI18nModule","NzButtonModule","LoggerModule","NzIconModule","NzNoAnimationModule","exports","declarations","entryComponents","NzModalModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface NzModalConfig {\n  nzMask?: boolean;\n  nzMaskClosable?: boolean;\n}\nexport const NZ_MODAL_CONFIG = new InjectionToken<NzModalConfig>('NZ_MODAL_CONFIG');\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { NzModalRef } from './nz-modal-ref.class';\n\ninterface RegisteredMeta {\n  modalRef: NzModalRef;\n  afterOpenSubscription: Subscription;\n  afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class NzModalControlService {\n  // Track singleton afterAllClose through over the injection tree\n  get afterAllClose(): Subject<void> {\n    return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose!;\n  }\n\n  // Track singleton openModals array through over the injection tree\n  get openModals(): NzModalRef[] {\n    return this.parentService ? this.parentService.openModals : this.rootOpenModals!;\n  }\n\n  private rootOpenModals: NzModalRef[] | null = this.parentService ? null : [];\n  private rootAfterAllClose: Subject<void> | null = this.parentService ? null : new Subject<void>();\n  private rootRegisteredMetaMap: Map<NzModalRef, RegisteredMeta> | null = this.parentService ? null : new Map();\n\n  private get registeredMetaMap(): Map<NzModalRef, RegisteredMeta> {\n    // Registered modal for later usage\n    return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap!;\n  }\n\n  constructor(@Optional() @SkipSelf() private parentService: NzModalControlService) {}\n\n  // Register a modal to listen its open/close\n  registerModal(modalRef: NzModalRef): void {\n    if (!this.hasRegistered(modalRef)) {\n      const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n      const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n      this.registeredMetaMap.set(modalRef, { modalRef, afterOpenSubscription, afterCloseSubscription });\n    }\n  }\n\n  // deregister modals\n  deregisterModal(modalRef: NzModalRef): void {\n    const registeredMeta = this.registeredMetaMap.get(modalRef);\n    if (registeredMeta) {\n      // Remove this modal if it is still in the opened modal list (NOTE: it may trigger \"afterAllClose\")\n      this.removeOpenModal(registeredMeta.modalRef);\n      registeredMeta.afterOpenSubscription.unsubscribe();\n      registeredMeta.afterCloseSubscription.unsubscribe();\n      this.registeredMetaMap.delete(modalRef);\n    }\n  }\n\n  hasRegistered(modalRef: NzModalRef): boolean {\n    return this.registeredMetaMap.has(modalRef);\n  }\n\n  // Close all registered opened modals\n  closeAll(): void {\n    let i = this.openModals.length;\n\n    while (i--) {\n      this.openModals[i].close();\n    }\n  }\n\n  private removeOpenModal(modalRef: NzModalRef): void {\n    const index = this.openModals.indexOf(modalRef);\n\n    if (index > -1) {\n      this.openModals.splice(index, 1);\n\n      if (!this.openModals.length) {\n        this.afterAllClose.next();\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Observable } from 'rxjs';\n\nimport { NzModalComponent } from './nz-modal.component';\n\n/**\n * API class that public to users to handle the modal instance.\n * NzModalRef is aim to avoid accessing to the modal instance directly by users.\n */\n// tslint:disable-next-line:no-any\nexport abstract class NzModalRef<T = any, R = any> {\n  abstract afterOpen: Observable<void>;\n  abstract afterClose: Observable<R>;\n\n  abstract open(): void;\n  abstract close(result?: R): void;\n  abstract destroy(result?: R): void;\n\n  /**\n   * Trigger the nzOnOk/nzOnCancel by manual\n   */\n  abstract triggerOk(): void;\n  abstract triggerCancel(): void;\n\n  // /**\n  //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n  //  * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\n  //  */\n  // abstract getContentComponentRef(): ComponentRef<{}>;\n\n  /**\n   * Return the component instance of nzContent when specify nzContent as a Component\n   * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\n   */\n  abstract getContentComponent(): T;\n\n  /**\n   * Get the dom element of this Modal\n   */\n  abstract getElement(): HTMLElement;\n\n  /**\n   * Get the instance of the Modal itself\n   */\n  abstract getInstance(): NzModalComponent;\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\n\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { BlockScrollStrategy, Overlay, OverlayKeyboardDispatcher, OverlayRef } from '@angular/cdk/overlay';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  Type,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { getElementOffset, isPromise, InputBoolean } from 'ng-zorro-antd/core';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\n\nimport { NzModalConfig, NZ_MODAL_CONFIG } from './nz-modal-config';\nimport { NzModalControlService } from './nz-modal-control.service';\nimport { NzModalRef } from './nz-modal-ref.class';\nimport { ModalButtonOptions, ModalOptions, ModalType, OnClickCallback } from './nz-modal.type';\n\nexport const MODAL_ANIMATE_DURATION = 200; // Duration when perform animations (ms)\n\ntype AnimationState = 'enter' | 'leave' | null;\nexport const WRAP_CLASS_NAME = 'ant-modal-wrap';\n\n@Component({\n  selector: 'nz-modal',\n  exportAs: 'nzModal',\n  templateUrl: './nz-modal.component.html',\n  // Using OnPush for modal caused footer can not to detect changes. we can fix it when 8.x.\n  changeDetection: ChangeDetectionStrategy.Default\n})\n\n// tslint:disable-next-line:no-any\nexport class NzModalComponent<T = any, R = any> extends NzModalRef<T, R>\n  implements OnInit, OnChanges, AfterViewInit, OnDestroy, ModalOptions<T> {\n  @Input() @InputBoolean() nzVisible: boolean = false;\n  @Input() @InputBoolean() nzClosable: boolean = true;\n  @Input() @InputBoolean() nzOkLoading: boolean = false;\n  @Input() @InputBoolean() nzOkDisabled: boolean = false;\n  @Input() @InputBoolean() nzCancelDisabled: boolean = false;\n  @Input() @InputBoolean() nzCancelLoading: boolean = false;\n  @Input() @InputBoolean() nzKeyboard: boolean = true;\n  @Input() @InputBoolean() nzNoAnimation = false;\n  @Input() @InputBoolean() nzMask: boolean;\n  @Input() @InputBoolean() nzMaskClosable: boolean;\n  @Input() nzContent: string | TemplateRef<{}> | Type<T>; // [STATIC] If not specified, will use <ng-content>\n  @Input() nzComponentParams: T; // [STATIC] ONLY avaliable when nzContent is a component\n  @Input() nzFooter: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null; // [STATIC] Default Modal ONLY\n  @Input() nzGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create(); // [STATIC]\n  @Input() nzZIndex: number = 1000;\n  @Input() nzWidth: number | string = 520;\n  @Input() nzWrapClassName: string;\n  @Input() nzClassName: string;\n  @Input() nzStyle: object;\n  @Input() nzTitle: string | TemplateRef<{}>;\n  @Input() nzMaskStyle: object;\n  @Input() nzBodyStyle: object;\n  @Input() nzOkText: string | null;\n  @Input() nzCancelText: string | null;\n  @Input() nzOkType = 'primary';\n  @Input() nzIconType: string = 'question-circle'; // Confirm Modal ONLY\n  @Input() nzModalType: ModalType = 'default';\n\n  @Input() @Output() readonly nzOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n  @Input() @Output() readonly nzOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n\n  @Output() readonly nzAfterOpen = new EventEmitter<void>(); // Trigger when modal open(visible) after animations\n  @Output() readonly nzAfterClose = new EventEmitter<R>(); // Trigger when modal leave-animation over\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\n\n  @ViewChild('modalContainer') modalContainer: ElementRef;\n  @ViewChild('bodyContainer', { read: ViewContainerRef }) bodyContainer: ViewContainerRef;\n  @ViewChild('autoFocusButtonOk', { read: ElementRef }) autoFocusButtonOk: ElementRef; // Only aim to focus the ok button that needs to be auto focused\n\n  get afterOpen(): Observable<void> {\n    // Observable alias for nzAfterOpen\n    return this.nzAfterOpen.asObservable();\n  }\n\n  get afterClose(): Observable<R> {\n    // Observable alias for nzAfterClose\n    return this.nzAfterClose.asObservable();\n  }\n\n  get cancelText(): string {\n    return this.nzCancelText || this.locale.cancelText!;\n  }\n\n  get okText(): string {\n    return this.nzOkText || this.locale.okText!;\n  }\n\n  get hidden(): boolean {\n    return !this.nzVisible && !this.animationState;\n  } // Indicate whether this dialog should hidden\n\n  /**\n   * @description\n   * The calculated highest weight of mask value\n   *\n   * Weight of different mask input:\n   * component default value < global configuration < component input value\n   */\n  get mask(): boolean {\n    if (this.nzMask != null) {\n      return this.nzMask;\n    } else if (this.nzModalGlobalConfig && this.nzModalGlobalConfig.nzMask != null) {\n      return this.nzModalGlobalConfig.nzMask;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @description\n   * The calculated highest weight of maskClosable value\n   *\n   * Weight of different maskClosable input:\n   * component default value < global configuration < component input value\n   */\n  get maskClosable(): boolean {\n    if (this.nzMaskClosable != null) {\n      return this.nzMaskClosable;\n    } else if (this.nzModalGlobalConfig && this.nzModalGlobalConfig.nzMaskClosable != null) {\n      return this.nzModalGlobalConfig.nzMaskClosable;\n    } else {\n      return true;\n    }\n  }\n\n  locale: { okText?: string; cancelText?: string } = {};\n  maskAnimationClassMap: object | null;\n  modalAnimationClassMap: object | null;\n  transformOrigin = '0px 0px 0px'; // The origin point that animation based on\n\n  private contentComponentRef: ComponentRef<T>; // Handle the reference when using nzContent as Component\n  private animationState: AnimationState; // Current animation state\n  private container: HTMLElement | OverlayRef;\n  private unsubscribe$ = new Subject<void>();\n  private previouslyFocusedElement: HTMLElement;\n  private focusTrap: FocusTrap;\n  private scrollStrategy: BlockScrollStrategy;\n  private overlayRef: OverlayRef;\n  private dialogMouseDown = false;\n  private timeoutId: number;\n\n  [key: string]: any; // tslint:disable-line:no-any\n\n  constructor(\n    private overlay: Overlay,\n    private overlayKeyboardDispatcher: OverlayKeyboardDispatcher,\n    private i18n: NzI18nService,\n    private cfr: ComponentFactoryResolver,\n    private elementRef: ElementRef,\n    private viewContainer: ViewContainerRef,\n    private modalControl: NzModalControlService,\n    private focusTrapFactory: FocusTrapFactory,\n    private cdr: ChangeDetectorRef,\n    @Optional() @Inject(NZ_MODAL_CONFIG) private nzModalGlobalConfig: NzModalConfig,\n    @Inject(DOCUMENT) private document: any // tslint:disable-line:no-any\n  ) {\n    super();\n    this.scrollStrategy = this.overlay.scrollStrategies.block();\n  }\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Modal') as { okText: string; cancelText: string };\n    });\n\n    if (this.isComponent(this.nzContent)) {\n      this.createDynamicComponent(this.nzContent as Type<T>); // Create component along without View\n    }\n\n    if (this.isModalButtons(this.nzFooter)) {\n      // Setup default button options\n      this.nzFooter = this.formatModalButtons(this.nzFooter as Array<ModalButtonOptions<T>>);\n    }\n\n    // Place the modal dom to elsewhere\n    this.container = typeof this.nzGetContainer === 'function' ? this.nzGetContainer() : this.nzGetContainer;\n    if (this.container instanceof HTMLElement) {\n      this.container.appendChild(this.elementRef.nativeElement);\n      fromEvent<KeyboardEvent>(this.document.body, 'keydown')\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(e => this.keydownListener(e));\n    } else if (this.container instanceof OverlayRef) {\n      // NOTE: only attach the dom to overlay, the view container is not changed actually\n      this.setOverlayRef(this.container);\n      this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n    }\n\n    if (this.overlayRef) {\n      this.overlayRef\n        .keydownEvents()\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(e => this.keydownListener(e));\n    }\n\n    // Register modal when afterOpen/afterClose is stable\n    this.modalControl.registerModal(this);\n  }\n\n  // [NOTE] NOT available when using by service!\n  // Because ngOnChanges never be called when using by service,\n  // here we can't support \"nzContent\"(Component) etc. as inputs that initialized dynamically.\n  // BUT: User also can change \"nzContent\" dynamically to trigger UI changes (provided you don't use \bComponent that needs initializations)\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzVisible) {\n      this.handleVisibleStateChange(this.nzVisible, !changes.nzVisible.firstChange); // Do not trigger animation while initializing\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // If using Component, it is the time to attach View while bodyContainer is ready\n    if (this.contentComponentRef) {\n      this.bodyContainer.insert(this.contentComponentRef.hostView);\n    }\n\n    if (this.autoFocusButtonOk) {\n      (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    // Close self before destructing\n    this.changeVisibleFromInside(false).then(() => {\n      this.modalControl.deregisterModal(this);\n\n      if (this.container instanceof OverlayRef) {\n        this.container.dispose();\n      }\n\n      this.unsubscribe$.next();\n      this.unsubscribe$.complete();\n    });\n    clearTimeout(this.timeoutId);\n  }\n\n  setOverlayRef(overlayRef: OverlayRef): void {\n    this.overlayRef = overlayRef;\n  }\n\n  keydownListener(event: KeyboardEvent): void {\n    if (event.keyCode === ESCAPE && this.nzKeyboard) {\n      this.onClickOkCancel('cancel');\n    }\n  }\n\n  open(): void {\n    this.changeVisibleFromInside(true);\n  }\n\n  close(result?: R): void {\n    this.changeVisibleFromInside(false, result);\n  }\n\n  destroy(result?: R): void {\n    // Destroy equals Close\n    this.close(result);\n  }\n\n  triggerOk(): void {\n    this.onClickOkCancel('ok');\n  }\n\n  triggerCancel(): void {\n    this.onClickOkCancel('cancel');\n  }\n\n  getInstance(): NzModalComponent {\n    return this;\n  }\n\n  getContentComponentRef(): ComponentRef<T> {\n    return this.contentComponentRef;\n  }\n\n  getContentComponent(): T {\n    return this.contentComponentRef && this.contentComponentRef.instance;\n  }\n\n  getElement(): HTMLElement {\n    return this.elementRef && this.elementRef.nativeElement;\n  }\n\n  onMaskDialogDown(): void {\n    this.dialogMouseDown = true;\n  }\n\n  onDialogUp(): void {\n    if (this.dialogMouseDown) {\n      this.timeoutId = setTimeout(() => {\n        this.dialogMouseDown = false;\n      }, 0);\n    }\n  }\n\n  onClickMask($event: MouseEvent): void {\n    if (\n      this.mask &&\n      this.maskClosable &&\n      ($event.target as HTMLElement).classList.contains(WRAP_CLASS_NAME) &&\n      this.nzVisible &&\n      !this.dialogMouseDown\n    ) {\n      this.onClickOkCancel('cancel');\n    }\n  }\n\n  isModalType(type: ModalType): boolean {\n    return this.nzModalType === type;\n  }\n\n  public onClickCloseBtn(): void {\n    if (this.nzVisible) {\n      this.onClickOkCancel('cancel');\n    }\n  }\n\n  public onClickOkCancel(type: 'ok' | 'cancel'): void {\n    const trigger = { ok: this.nzOnOk, cancel: this.nzOnCancel }[type];\n    const loadingKey = { ok: 'nzOkLoading', cancel: 'nzCancelLoading' }[type];\n    if (trigger instanceof EventEmitter) {\n      trigger.emit(this.getContentComponent());\n    } else if (typeof trigger === 'function') {\n      const result = trigger(this.getContentComponent());\n      const caseClose = (doClose: boolean | void | {}) => doClose !== false && this.close(doClose as R); // Users can return \"false\" to prevent closing by default\n      if (isPromise(result)) {\n        this[loadingKey] = true;\n        const handleThen = (doClose: boolean | void | {}) => {\n          this[loadingKey] = false;\n          caseClose(doClose);\n        };\n        (result as Promise<void>).then(handleThen).catch(handleThen);\n      } else {\n        caseClose(result);\n      }\n    }\n  }\n\n  public isNonEmptyString(value: {}): boolean {\n    return typeof value === 'string' && value !== '';\n  }\n\n  public isTemplateRef(value: {}): boolean {\n    return value instanceof TemplateRef;\n  }\n\n  public isComponent(value: {}): boolean {\n    return value instanceof Type;\n  }\n\n  public isModalButtons(value: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null): boolean {\n    return Array.isArray(value) && value.length > 0;\n  }\n\n  // Do rest things when visible state changed\n  private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<void> {\n    if (visible) {\n      // Hide scrollbar at the first time when shown up\n      this.scrollStrategy.enable();\n      this.savePreviouslyFocusedElement();\n      this.trapFocus();\n      if (this.container instanceof OverlayRef) {\n        this.overlayKeyboardDispatcher.add(this.overlayRef);\n      }\n    } else {\n      if (this.container instanceof OverlayRef) {\n        this.overlayKeyboardDispatcher.remove(this.overlayRef);\n      }\n    }\n\n    return Promise.resolve(animation ? this.animateTo(visible) : undefined).then(() => {\n      // Emit open/close event after animations over\n      if (visible) {\n        this.nzAfterOpen.emit();\n      } else {\n        this.nzAfterClose.emit(closeResult);\n        this.restoreFocus();\n        this.scrollStrategy.disable();\n        // Mark the for check so it can react if the view container is using OnPush change detection.\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n  public getButtonCallableProp(options: ModalButtonOptions<T>, prop: string): {} {\n    const value = options[prop];\n    const args: T[] = [];\n    if (this.contentComponentRef) {\n      args.push(this.contentComponentRef.instance);\n    }\n    return typeof value === 'function' ? value.apply(options, args) : value;\n  }\n\n  // On nzFooter's modal button click\n  public onButtonClick(button: ModalButtonOptions<T>): void {\n    const result = this.getButtonCallableProp(button, 'onClick'); // Call onClick directly\n    if (isPromise(result)) {\n      button.loading = true;\n      (result as Promise<{}>).then(() => (button.loading = false)).catch(() => (button.loading = false));\n    }\n  }\n\n  // Change nzVisible from inside\n  private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n    if (this.nzVisible !== visible) {\n      // Change nzVisible value immediately\n      this.nzVisible = visible;\n      this.nzVisibleChange.emit(visible);\n      return this.handleVisibleStateChange(visible, true, closeResult);\n    }\n    return Promise.resolve();\n  }\n\n  private changeAnimationState(state: AnimationState): void {\n    this.animationState = state;\n    if (state) {\n      this.maskAnimationClassMap = {\n        [`fade-${state}`]: true,\n        [`fade-${state}-active`]: true\n      };\n      this.modalAnimationClassMap = {\n        [`zoom-${state}`]: true,\n        [`zoom-${state}-active`]: true\n      };\n    } else {\n      this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n    }\n  }\n\n  private animateTo(isVisible: boolean): Promise<void> {\n    if (isVisible) {\n      // Figure out the lastest click position when shows up\n      setTimeout(() => this.updateTransformOrigin()); // [NOTE] Using timeout due to the document.click event is fired later than visible change, so if not postponed to next event-loop, we can't get the lastest click position\n    }\n\n    this.changeAnimationState(isVisible ? 'enter' : 'leave');\n    return new Promise(resolve =>\n      setTimeout(\n        () => {\n          // Return when animation is over\n          this.changeAnimationState(null);\n          resolve();\n        },\n        this.nzNoAnimation ? 0 : MODAL_ANIMATE_DURATION\n      )\n    );\n  }\n\n  private formatModalButtons(buttons: Array<ModalButtonOptions<T>>): Array<ModalButtonOptions<T>> {\n    return buttons.map(button => {\n      return {\n        ...{\n          type: 'default',\n          size: 'default',\n          autoLoading: true,\n          show: true,\n          loading: false,\n          disabled: false\n        },\n        ...button\n      };\n    });\n  }\n\n  /**\n   * Create a component dynamically but not attach to any View (this action will be executed when bodyContainer is ready)\n   * @param component Component class\n   */\n  private createDynamicComponent(component: Type<T>): void {\n    const factory = this.cfr.resolveComponentFactory(component);\n    const childInjector = Injector.create({\n      providers: [{ provide: NzModalRef, useValue: this }],\n      parent: this.viewContainer.parentInjector\n    });\n    this.contentComponentRef = factory.create(childInjector);\n    if (this.nzComponentParams) {\n      Object.assign(this.contentComponentRef.instance, this.nzComponentParams);\n    }\n    // Do the first change detection immediately (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n    this.contentComponentRef.changeDetectorRef.detectChanges();\n  }\n\n  // Update transform-origin to the last click position on document\n  private updateTransformOrigin(): void {\n    const modalElement = this.modalContainer.nativeElement as HTMLElement;\n    if (this.previouslyFocusedElement) {\n      const previouslyDOMRect = this.previouslyFocusedElement.getBoundingClientRect();\n      const lastPosition = getElementOffset(this.previouslyFocusedElement);\n      const x = lastPosition.left + previouslyDOMRect.width / 2;\n      const y = lastPosition.top + previouslyDOMRect.height / 2;\n      this.transformOrigin = `${x - modalElement.offsetLeft}px ${y - modalElement.offsetTop}px 0px`;\n    }\n  }\n\n  private savePreviouslyFocusedElement(): void {\n    if (this.document) {\n      this.previouslyFocusedElement = this.document.activeElement as HTMLElement;\n    }\n  }\n\n  private trapFocus(): void {\n    if (!this.focusTrap) {\n      this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\n    }\n    this.focusTrap.focusInitialElementWhenReady();\n  }\n\n  private restoreFocus(): void {\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.focus === 'function') {\n      this.previouslyFocusedElement.focus();\n    }\n    if (this.focusTrap) {\n      this.focusTrap.destroy();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n  transform(value: number | string, defaultUnit: string = 'px'): string {\n    const formatted = +value; // force convert\n    return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { IndexableObject, LoggerService } from 'ng-zorro-antd/core';\n\nimport { NzModalControlService } from './nz-modal-control.service';\nimport { NzModalRef } from './nz-modal-ref.class';\nimport { NzModalComponent } from './nz-modal.component';\nimport { ConfirmType, ModalOptions, ModalOptionsForService } from './nz-modal.type';\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n  private modalRef: ComponentRef<NzModalComponent> | null; // Modal ComponentRef, \"null\" means it has been destroyed\n  private overlayRef: OverlayRef;\n\n  constructor(private overlay: Overlay, options: ModalOptionsForService = {}) {\n    this.createModal();\n\n    if (!('nzGetContainer' in options)) {\n      // As we use CDK to create modal in service by force, there is no need to use nzGetContainer\n      options.nzGetContainer = undefined; // Override nzGetContainer's default value to prevent creating another overlay\n    }\n\n    this.changeProps(options);\n    this.modalRef!.instance.setOverlayRef(this.overlayRef);\n    this.modalRef!.instance.open();\n    this.modalRef!.instance.nzAfterClose.subscribe(() => this.destroyModal()); // [NOTE] By default, close equals destroy when using as Service\n  }\n\n  getInstance(): NzModalComponent | null {\n    return this.modalRef && this.modalRef.instance;\n  }\n\n  destroyModal(): void {\n    if (this.modalRef) {\n      this.overlayRef.dispose();\n      this.modalRef = null;\n    }\n  }\n\n  private changeProps(options: ModalOptions): void {\n    if (this.modalRef) {\n      Object.assign(this.modalRef.instance, options); // DANGER: here not limit user's inputs at runtime\n    }\n  }\n\n  // Create component to ApplicationRef\n  private createModal(): void {\n    this.overlayRef = this.overlay.create();\n    this.modalRef = this.overlayRef.attach(new ComponentPortal(NzModalComponent));\n  }\n}\n\n@Injectable()\nexport class NzModalService {\n  // Track of the current close modals (we assume invisible is close this time)\n  get openModals(): NzModalRef[] {\n    return this.modalControl.openModals;\n  }\n\n  get afterAllClose(): Observable<void> {\n    return this.modalControl.afterAllClose.asObservable();\n  }\n\n  constructor(private overlay: Overlay, private logger: LoggerService, private modalControl: NzModalControlService) {}\n\n  // Closes all of the currently-open dialogs\n  closeAll(): void {\n    this.modalControl.closeAll();\n  }\n\n  create<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    if (typeof options.nzOnCancel !== 'function') {\n      options.nzOnCancel = () => {}; // Leave a empty function to close this modal by default\n    }\n\n    // NOTE: use NzModalComponent as the NzModalRef by now, we may need archive the real NzModalRef object in the future\n    const modalRef = new ModalBuilderForService(this.overlay, options).getInstance()!;\n\n    return modalRef;\n  }\n\n  confirm<T>(options: ModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): NzModalRef<T> {\n    if ('nzFooter' in options) {\n      this.logger.warn(`The Confirm-Modal doesn't support \"nzFooter\", this property will be ignored.`);\n    }\n    if (!('nzWidth' in options)) {\n      options.nzWidth = 416;\n    }\n    if (typeof options.nzOnOk !== 'function') {\n      // NOTE: only support function currently by calling confirm()\n      options.nzOnOk = () => {}; // Leave a empty function to close this modal by default\n    }\n\n    options.nzModalType = 'confirm';\n    options.nzClassName = `ant-modal-confirm ant-modal-confirm-${confirmType} ${options.nzClassName || ''}`;\n    options.nzMaskClosable = false;\n    return this.create(options);\n  }\n\n  info<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    return this.simpleConfirm(options, 'info');\n  }\n\n  success<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    return this.simpleConfirm(options, 'success');\n  }\n\n  error<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    return this.simpleConfirm(options, 'error');\n  }\n\n  warning<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    return this.simpleConfirm(options, 'warning');\n  }\n\n  private simpleConfirm<T>(options: ModalOptionsForService<T> = {}, confirmType: ConfirmType): NzModalRef<T> {\n    const iconMap: IndexableObject = {\n      info: 'info-circle',\n      success: 'check-circle',\n      error: 'close-circle',\n      warning: 'exclamation-circle'\n    };\n    if (!('nzIconType' in options)) {\n      options.nzIconType = iconMap[confirmType];\n    }\n    if (!('nzCancelText' in options)) {\n      // Remove the Cancel button if the user not specify a Cancel button\n      options.nzCancelText = null;\n    }\n    return this.confirm(options, confirmType);\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { LoggerModule, NzNoAnimationModule } from 'ng-zorro-antd/core';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { NzModalControlService } from './nz-modal-control.service';\nimport { NzModalComponent } from './nz-modal.component';\nimport { NzModalService } from './nz-modal.service';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, NzI18nModule, NzButtonModule, LoggerModule, NzIconModule, NzNoAnimationModule],\n  exports: [NzModalComponent],\n  declarations: [NzModalComponent, CssUnitPipe],\n  entryComponents: [NzModalComponent],\n  providers: [NzModalControlService, NzModalService]\n})\nexport class NzModalModule {}\n"]}