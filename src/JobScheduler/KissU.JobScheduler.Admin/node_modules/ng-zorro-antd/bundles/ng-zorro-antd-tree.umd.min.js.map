{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ng-zorro-antd/tree/nz-tree-node.component.ts","ng://ng-zorro-antd/tree/nz-tree.service.ts","ng://ng-zorro-antd/tree/nz-tree.component.ts","ng://ng-zorro-antd/tree/nz-tree.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","NzTreeNodeComponent","_nzDraggable","value","handDragEvent","_nzExpandAll","nzTreeNode","isLeaf","isExpanded","_searchValue","highlightKeys","includes","index","title","indexOf","slice","icon","nzDraggable","isDisabled","nzShowLine","nzSearchValue","nzHideUnMatched","isMatched","setClassMap","prefixCls","nzSelectMode","nzNodeClass","_a","isSwitcherOpen","isSwitcherClose","isChecked","isHalfChecked","isSelected","isLoading","nzNodeSwitcherClass","_b","nzNodeCheckboxClass","_c","isDisableCheckbox","nzNodeContentClass","_d","nzNodeContentIconClass","_e","nzNodeContentLoadingClass","_f","onMousedown","event","preventDefault","nzClick","stopPropagation","isSelectable","eventNext","nzTreeService","formatEvent","next","nzDblClick","nzContextMenu","_clickExpand","nzAsyncData","children","_clickCheckBox","isCheckStrictly","conduct","clearDragClass","_this","forEach","e","renderer","removeClass","dragElement","nativeElement","handleDragStart","setData","error","setSelectedNode","handleDragEnter","dragPos","ngZone","run","node","getSelectedNode","handleDragOver","dropPosition","calcDropPosition","addClass","dragPosClass","handleDragLeave","handleDragDrop","dropEvent","dragEndEvent","nzBeforeDrop","dragNode","pos","subscribe","canDrop","dropAndApply","handleDragEnd","runOutsideAngular","destroy$","Subject","fromEvent","elRef","pipe","takeUntil","complete","isTemplateRef","TemplateRef","markForCheck","cdr","ngOnInit","setNodeActive","setExpandedNodeList","setCheckedNodeList","component","eventTriggerChanged","filter","data","ngOnChanges","ngOnDestroy","Component","args","selector","exportAs","template","changeDetection","ChangeDetectionStrategy","OnPush","preserveWhitespaces","animations","collapseMotion","NzTreeBaseService","NgZone","Renderer2","ElementRef","ChangeDetectorRef","NzNoAnimationDirective","type","Host","Optional","ViewChild","Input","HostListener","tslib_1.__decorate","InputBoolean","noAnimation","nzNoAnimation","nzShowIcon","0","1","-1","tslib_1.__extends","Injectable","NzTreeService","NzTreeServiceFactory","higherOrderService","treeService","_super","NzTreeComponent","NzTreeBase","_nzMultiple","toBoolean","isMultiple","initNzData","nzDefaultSubject","keys","searchExpand","isNotNil","nzSearchValueChange","emit","nzOnSearchNode","rootNodes","classMap","nzBlockNode","writeValue","registerOnChange","fn","onChange","registerOnTouched","onTouched","isArray","nzCheckStrictly","nzMultiple","initTree","coerceTreeNodes","calcExpandedKeys","nzNodes","nzExpandedKeysChange","calcSelectedKeys","nzSelectedKeysChange","calcCheckedKeys","nzCheckedKeysChange","eventName","nzExpandChange","nzCheckBoxChange","nzOnDragStart","nzOnDragEnter","nzOnDragOver","nzOnDragLeave","nzOnDrop","nzOnDragEnd","changes","currentValue","providers","provide","useFactory","deps","SkipSelf","NzTreeHigherOrderServiceToken","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ContentChild","Output","call","nzShowExpand","nzCheckable","nzExpandAll","nzDefaultExpandAll","EventEmitter","ReplaySubject","NgModule","imports","CommonModule","NzAddOnModule","NzIconModule","NzNoAnimationModule","declarations","exports","NzTreeModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Host,\n  HostListener,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport {\n  collapseMotion,\n  InputBoolean,\n  NzFormatBeforeDropEvent,\n  NzNoAnimationDirective,\n  NzTreeBaseService,\n  NzTreeNode\n} from 'ng-zorro-antd/core';\n\n@Component({\n  selector: 'nz-tree-node',\n  exportAs: 'nzTreeNode',\n  templateUrl: './nz-tree-node.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  animations: [collapseMotion]\n})\nexport class NzTreeNodeComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('dragElement') dragElement: ElementRef;\n\n  /**\n   * for global property\n   */\n  @Input() nzTreeNode: NzTreeNode;\n  @Input() @InputBoolean() nzShowLine: boolean;\n  @Input() @InputBoolean() nzShowExpand: boolean;\n  @Input() @InputBoolean() nzCheckable: boolean;\n  @Input() @InputBoolean() nzAsyncData: boolean;\n  @Input() @InputBoolean() nzHideUnMatched = false;\n  @Input() @InputBoolean() nzNoAnimation = false;\n  @Input() @InputBoolean() nzSelectMode = false;\n  @Input() @InputBoolean() nzShowIcon = false;\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\n  @Input() nzBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n\n  @Input()\n  set nzDraggable(value: boolean) {\n    this._nzDraggable = value;\n    this.handDragEvent();\n  }\n\n  get nzDraggable(): boolean {\n    return this._nzDraggable;\n  }\n\n  /**\n   * @deprecated use\n   * nzExpandAll instead\n   */\n  @Input()\n  set nzDefaultExpandAll(value: boolean) {\n    this._nzExpandAll = value;\n    if (value && this.nzTreeNode && !this.nzTreeNode.isLeaf) {\n      this.nzTreeNode.isExpanded = true;\n    }\n  }\n\n  get nzDefaultExpandAll(): boolean {\n    return this._nzExpandAll;\n  }\n\n  // default set\n  @Input()\n  set nzExpandAll(value: boolean) {\n    this._nzExpandAll = value;\n    if (value && this.nzTreeNode && !this.nzTreeNode.isLeaf) {\n      this.nzTreeNode.isExpanded = true;\n    }\n  }\n\n  get nzExpandAll(): boolean {\n    return this._nzExpandAll;\n  }\n\n  @Input()\n  set nzSearchValue(value: string) {\n    this.highlightKeys = [];\n    if (value && this.nzTreeNode.title!.includes(value)) {\n      // match the search value\n      const index = this.nzTreeNode.title.indexOf(value);\n      this.highlightKeys = [\n        this.nzTreeNode.title.slice(0, index),\n        this.nzTreeNode.title.slice(index + value.length, this.nzTreeNode.title.length)\n      ];\n    }\n    this._searchValue = value;\n  }\n\n  get nzSearchValue(): string {\n    return this._searchValue;\n  }\n\n  // default var\n  prefixCls = 'ant-tree';\n  highlightKeys: string[] = [];\n  nzNodeClass = {};\n  nzNodeSwitcherClass = {};\n  nzNodeContentClass = {};\n  nzNodeCheckboxClass = {};\n  nzNodeContentIconClass = {};\n  nzNodeContentLoadingClass = {};\n\n  /**\n   * drag var\n   */\n  destroy$ = new Subject();\n  dragPos = 2;\n  dragPosClass: { [key: string]: string } = {\n    '0': 'drag-over',\n    '1': 'drag-over-gap-bottom',\n    '-1': 'drag-over-gap-top'\n  };\n\n  /**\n   * default set\n   */\n  _searchValue = '';\n  _nzDraggable = false;\n  _nzExpandAll = false;\n\n  get nzIcon(): string {\n    return this.nzTreeNode.icon;\n  }\n\n  get canDraggable(): boolean | null {\n    return this.nzDraggable && !this.nzTreeNode.isDisabled ? true : null;\n  }\n\n  get isShowLineIcon(): boolean {\n    return !this.nzTreeNode.isLeaf && this.nzShowLine;\n  }\n\n  get isShowSwitchIcon(): boolean {\n    return !this.nzTreeNode.isLeaf && !this.nzShowLine;\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.nzTreeNode.isExpanded && !this.nzTreeNode.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.nzTreeNode.isExpanded && !this.nzTreeNode.isLeaf;\n  }\n\n  get displayStyle(): string {\n    // to hide unmatched nodes\n    return this.nzSearchValue && this.nzHideUnMatched && !this.nzTreeNode.isMatched && !this.nzTreeNode.isExpanded\n      ? 'none'\n      : '';\n  }\n\n  /**\n   * reset node class\n   */\n  setClassMap(): void {\n    this.prefixCls = this.nzSelectMode ? 'ant-select-tree' : 'ant-tree';\n    this.nzNodeClass = {\n      [`${this.prefixCls}-treenode-disabled`]: this.nzTreeNode.isDisabled,\n      [`${this.prefixCls}-treenode-switcher-open`]: this.isSwitcherOpen,\n      [`${this.prefixCls}-treenode-switcher-close`]: this.isSwitcherClose,\n      [`${this.prefixCls}-treenode-checkbox-checked`]: this.nzTreeNode.isChecked,\n      [`${this.prefixCls}-treenode-checkbox-indeterminate`]: this.nzTreeNode.isHalfChecked,\n      [`${this.prefixCls}-treenode-selected`]: this.nzTreeNode.isSelected,\n      [`${this.prefixCls}-treenode-loading`]: this.nzTreeNode.isLoading\n    };\n    this.nzNodeSwitcherClass = {\n      [`${this.prefixCls}-switcher`]: true,\n      [`${this.prefixCls}-switcher-noop`]: this.nzTreeNode.isLeaf,\n      [`${this.prefixCls}-switcher_open`]: this.isSwitcherOpen,\n      [`${this.prefixCls}-switcher_close`]: this.isSwitcherClose\n    };\n\n    this.nzNodeCheckboxClass = {\n      [`${this.prefixCls}-checkbox`]: true,\n      [`${this.prefixCls}-checkbox-checked`]: this.nzTreeNode.isChecked,\n      [`${this.prefixCls}-checkbox-indeterminate`]: this.nzTreeNode.isHalfChecked,\n      [`${this.prefixCls}-checkbox-disabled`]: this.nzTreeNode.isDisabled || this.nzTreeNode.isDisableCheckbox\n    };\n\n    this.nzNodeContentClass = {\n      [`${this.prefixCls}-node-content-wrapper`]: true,\n      [`${this.prefixCls}-node-content-wrapper-open`]: this.isSwitcherOpen,\n      [`${this.prefixCls}-node-content-wrapper-close`]: this.isSwitcherClose,\n      [`${this.prefixCls}-node-selected`]: this.nzTreeNode.isSelected\n    };\n    this.nzNodeContentIconClass = {\n      [`${this.prefixCls}-iconEle`]: true,\n      [`${this.prefixCls}-icon__customize`]: true\n    };\n    this.nzNodeContentLoadingClass = {\n      [`${this.prefixCls}-iconEle`]: true\n    };\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event: MouseEvent): void {\n    if (this.nzSelectMode) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * click node to select, 200ms to dbl click\n   */\n  @HostListener('click', ['$event'])\n  nzClick(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.nzTreeNode.isSelectable && !this.nzTreeNode.isDisabled) {\n      this.nzTreeNode.isSelected = !this.nzTreeNode.isSelected;\n    }\n    const eventNext = this.nzTreeService.formatEvent('click', this.nzTreeNode, event);\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\n  }\n\n  @HostListener('dblclick', ['$event'])\n  nzDblClick(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    const eventNext = this.nzTreeService.formatEvent('dblclick', this.nzTreeNode, event);\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\n  }\n\n  /**\n   * @param event\n   */\n  @HostListener('contextmenu', ['$event'])\n  nzContextMenu(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    const eventNext = this.nzTreeService.formatEvent('contextmenu', this.nzTreeNode, event);\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\n  }\n\n  /**\n   * collapse node\n   * @param event\n   */\n  _clickExpand(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!this.nzTreeNode.isLoading && !this.nzTreeNode.isLeaf) {\n      // set async state\n      if (this.nzAsyncData && this.nzTreeNode.children.length === 0 && !this.nzTreeNode.isExpanded) {\n        this.nzTreeNode.isLoading = true;\n      }\n      this.nzTreeNode.isExpanded = !this.nzTreeNode.isExpanded;\n      const eventNext = this.nzTreeService.formatEvent('expand', this.nzTreeNode, event);\n      this.nzTreeService!.triggerEventChange$!.next(eventNext);\n    }\n  }\n\n  /**\n   * check node\n   * @param event\n   */\n  _clickCheckBox(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    // return if node is disabled\n    if (this.nzTreeNode.isDisabled || this.nzTreeNode.isDisableCheckbox) {\n      return;\n    }\n    this.nzTreeNode.isChecked = !this.nzTreeNode.isChecked;\n    this.nzTreeNode.isHalfChecked = false;\n    if (!this.nzTreeService.isCheckStrictly) {\n      this.nzTreeService.conduct(this.nzTreeNode);\n    }\n    const eventNext = this.nzTreeService.formatEvent('check', this.nzTreeNode, event);\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\n  }\n\n  /**\n   * drag event\n   * @param e\n   */\n  clearDragClass(): void {\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over'];\n    dragClass.forEach(e => {\n      this.renderer.removeClass(this.dragElement.nativeElement, e);\n    });\n  }\n\n  handleDragStart(e: DragEvent): void {\n    e.stopPropagation();\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer!.setData('text/plain', this.nzTreeNode.key!);\n    } catch (error) {\n      // empty\n    }\n    this.nzTreeService.setSelectedNode(this.nzTreeNode);\n    this.nzTreeNode.isExpanded = false;\n    const eventNext = this.nzTreeService.formatEvent('dragstart', this.nzTreeNode, e);\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\n  }\n\n  handleDragEnter(e: DragEvent): void {\n    e.preventDefault();\n    e.stopPropagation();\n    // reset position\n    this.dragPos = 2;\n    this.ngZone.run(() => {\n      const node = this.nzTreeService.getSelectedNode();\n      if (node && node.key !== this.nzTreeNode.key && !this.nzTreeNode.isExpanded && !this.nzTreeNode.isLeaf) {\n        this.nzTreeNode.isExpanded = true;\n      }\n      const eventNext = this.nzTreeService.formatEvent('dragenter', this.nzTreeNode, e);\n      this.nzTreeService!.triggerEventChange$!.next(eventNext);\n    });\n  }\n\n  handleDragOver(e: DragEvent): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const dropPosition = this.nzTreeService.calcDropPosition(e);\n    if (this.dragPos !== dropPosition) {\n      this.clearDragClass();\n      this.dragPos = dropPosition;\n      // leaf node will pass\n      if (!(this.dragPos === 0 && this.nzTreeNode.isLeaf)) {\n        this.renderer.addClass(this.dragElement.nativeElement, this.dragPosClass[this.dragPos]);\n      }\n    }\n    const eventNext = this.nzTreeService.formatEvent('dragover', this.nzTreeNode, e);\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\n  }\n\n  handleDragLeave(e: DragEvent): void {\n    e.stopPropagation();\n    this.ngZone.run(() => {\n      this.clearDragClass();\n    });\n    const eventNext = this.nzTreeService.formatEvent('dragleave', this.nzTreeNode, e);\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\n  }\n\n  handleDragDrop(e: DragEvent): void {\n    e.preventDefault();\n    e.stopPropagation();\n    this.ngZone.run(() => {\n      this.clearDragClass();\n      const node = this.nzTreeService.getSelectedNode();\n      if (!node || (node && node.key === this.nzTreeNode.key) || (this.dragPos === 0 && this.nzTreeNode.isLeaf)) {\n        return;\n      }\n      // pass if node is leafNo\n      const dropEvent = this.nzTreeService.formatEvent('drop', this.nzTreeNode, e);\n      const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n      if (this.nzBeforeDrop) {\n        this.nzBeforeDrop({\n          dragNode: this.nzTreeService.getSelectedNode()!,\n          node: this.nzTreeNode,\n          pos: this.dragPos\n        }).subscribe((canDrop: boolean) => {\n          if (canDrop) {\n            this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n          }\n          this.nzTreeService!.triggerEventChange$!.next(dropEvent);\n          this.nzTreeService!.triggerEventChange$!.next(dragEndEvent);\n        });\n      } else if (this.nzTreeNode) {\n        this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n        this.nzTreeService!.triggerEventChange$!.next(dropEvent);\n      }\n    });\n  }\n\n  handleDragEnd(e: DragEvent): void {\n    e.stopPropagation();\n    this.ngZone.run(() => {\n      // if user do not custom beforeDrop\n      if (!this.nzBeforeDrop) {\n        const eventNext = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n        this.nzTreeService!.triggerEventChange$!.next(eventNext);\n      }\n    });\n  }\n\n  /**\n   * çå¬ææ½äºä»¶\n   */\n  handDragEvent(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.nzDraggable) {\n        this.destroy$ = new Subject();\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragstart')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragStart(e));\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragenter')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragEnter(e));\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragover')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragOver(e));\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragleave')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragLeave(e));\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'drop')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragDrop(e));\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragend')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragEnd(e));\n      } else {\n        this.destroy$.next();\n        this.destroy$.complete();\n      }\n    });\n  }\n\n  isTemplateRef(value: {}): boolean {\n    return value instanceof TemplateRef;\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n\n  constructor(\n    public nzTreeService: NzTreeBaseService,\n    private ngZone: NgZone,\n    private renderer: Renderer2,\n    private elRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngOnInit(): void {\n    // init expanded / selected / checked list\n    if (this.nzTreeNode.isSelected) {\n      this.nzTreeService.setNodeActive(this.nzTreeNode);\n    }\n    if (this.nzTreeNode.isExpanded) {\n      this.nzTreeService.setExpandedNodeList(this.nzTreeNode);\n    }\n    if (this.nzTreeNode.isChecked) {\n      this.nzTreeService.setCheckedNodeList(this.nzTreeNode);\n    }\n    // TODO\n    this.nzTreeNode.component = this;\n    this.nzTreeService\n      .eventTriggerChanged()\n      .pipe(\n        filter(data => data.node!.key === this.nzTreeNode.key),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(() => {\n        this.setClassMap();\n        this.markForCheck();\n      });\n    this.setClassMap();\n  }\n\n  ngOnChanges(): void {\n    this.setClassMap();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\nimport { NzTreeBaseService } from 'ng-zorro-antd/core';\n\n@Injectable()\nexport class NzTreeService extends NzTreeBaseService {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  forwardRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SkipSelf,\n  TemplateRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n  isNotNil,\n  toBoolean,\n  InputBoolean,\n  NzFormatBeforeDropEvent,\n  NzFormatEmitEvent,\n  NzNoAnimationDirective,\n  NzTreeBase,\n  NzTreeBaseService,\n  NzTreeHigherOrderServiceToken,\n  NzTreeNode\n} from 'ng-zorro-antd/core';\n\nimport { NzTreeService } from './nz-tree.service';\n\nexport function NzTreeServiceFactory(\n  higherOrderService: NzTreeBaseService,\n  treeService: NzTreeService\n): NzTreeBaseService {\n  return higherOrderService ? higherOrderService : treeService;\n}\n\n@Component({\n  selector: 'nz-tree',\n  exportAs: 'nzTree',\n  templateUrl: './nz-tree.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NzTreeService,\n    {\n      provide: NzTreeBaseService,\n      useFactory: NzTreeServiceFactory,\n      deps: [[new SkipSelf(), new Optional(), NzTreeHigherOrderServiceToken], NzTreeService]\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzTreeComponent),\n      multi: true\n    }\n  ]\n})\nexport class NzTreeComponent extends NzTreeBase implements OnInit, OnDestroy, ControlValueAccessor, OnChanges {\n  @Input() @InputBoolean() nzShowIcon = false;\n  @Input() @InputBoolean() nzShowExpand = true;\n  @Input() @InputBoolean() nzShowLine = false;\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\n  @Input() @InputBoolean() nzCheckable = false;\n  @Input() @InputBoolean() nzAsyncData = false;\n  @Input() @InputBoolean() nzDraggable = false;\n  @Input() @InputBoolean() nzExpandAll = false;\n  @Input() @InputBoolean() nzHideUnMatched = false;\n  @Input() @InputBoolean() nzSelectMode = false;\n  @Input() @InputBoolean() nzCheckStrictly = false;\n  @Input() @InputBoolean() nzBlockNode = false;\n\n  @Input() @ContentChild('nzTreeTemplate') nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\n\n  /**\n   * @deprecated use\n   * nzExpandAll instead\n   */\n  @Input() @InputBoolean() nzDefaultExpandAll = false;\n  @Input() nzBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n\n  @Input()\n  @InputBoolean()\n  set nzMultiple(value: boolean) {\n    this._nzMultiple = toBoolean(value);\n    this.nzTreeService.isMultiple = toBoolean(value);\n  }\n\n  get nzMultiple(): boolean {\n    return this._nzMultiple;\n  }\n\n  @Input()\n  // tslint:disable-next-line:no-any\n  set nzData(value: any[]) {\n    this.initNzData(value);\n  }\n\n  /**\n   * @deprecated use\n   * nzExpandedKeys instead\n   */\n  @Input()\n  set nzDefaultExpandedKeys(value: string[]) {\n    this.nzDefaultSubject.next({ type: 'nzExpandedKeys', keys: value });\n  }\n\n  /**\n   * @deprecated use\n   * nzSelectedKeys instead\n   */\n  @Input()\n  set nzDefaultSelectedKeys(value: string[]) {\n    this.nzDefaultSubject.next({ type: 'nzSelectedKeys', keys: value });\n  }\n\n  /**\n   * @deprecated use\n   * nzCheckedKeys instead\n   */\n  @Input()\n  set nzDefaultCheckedKeys(value: string[]) {\n    this.nzDefaultSubject.next({ type: 'nzCheckedKeys', keys: value });\n  }\n\n  @Input()\n  set nzExpandedKeys(value: string[]) {\n    this.nzDefaultSubject.next({ type: 'nzExpandedKeys', keys: value });\n  }\n\n  @Input()\n  set nzSelectedKeys(value: string[]) {\n    this.nzDefaultSubject.next({ type: 'nzSelectedKeys', keys: value });\n  }\n\n  @Input()\n  set nzCheckedKeys(value: string[]) {\n    this.nzDefaultSubject.next({ type: 'nzCheckedKeys', keys: value });\n  }\n\n  @Input()\n  set nzSearchValue(value: string) {\n    this._searchValue = value;\n    this.nzTreeService.searchExpand(value);\n    if (isNotNil(value)) {\n      this.nzSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\n      this.nzOnSearchNode.emit(this.nzTreeService.formatEvent('search', null, null));\n    }\n  }\n\n  get nzSearchValue(): string {\n    return this._searchValue;\n  }\n\n  /**\n   * To render nodes if root is changed\n   */\n  get nzNodes(): NzTreeNode[] {\n    return this.nzTreeService.rootNodes;\n  }\n\n  // model bind\n  @Output() readonly nzExpandedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzSelectedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzCheckedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n  @Output() readonly nzSearchValueChange: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n  /**\n   * @deprecated use\n   * nzSearchValueChange instead\n   */\n  @Output() readonly nzOnSearchNode: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n\n  @Output() readonly nzClick: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n  @Output() readonly nzDblClick: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n  @Output() readonly nzContextMenu: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n  @Output() readonly nzCheckBoxChange: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n  @Output() readonly nzExpandChange: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n\n  @Output() readonly nzOnDragStart: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n  @Output() readonly nzOnDragEnter: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n  @Output() readonly nzOnDragOver: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n  @Output() readonly nzOnDragLeave: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n  @Output() readonly nzOnDrop: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n  @Output() readonly nzOnDragEnd: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\n\n  _searchValue: string;\n  _nzMultiple: boolean = false;\n  nzDefaultSubject = new ReplaySubject<{ type: string; keys: string[] }>(6);\n  destroy$ = new Subject();\n  prefixCls = 'ant-tree';\n  classMap = {};\n\n  onChange: (value: NzTreeNode[]) => void = () => null;\n  onTouched: () => void = () => null;\n\n  setClassMap(): void {\n    this.classMap = {\n      [this.prefixCls]: true,\n      [this.prefixCls + '-show-line']: this.nzShowLine,\n      [`${this.prefixCls}-icon-hide`]: !this.nzShowIcon,\n      [`${this.prefixCls}-block-node`]: this.nzBlockNode,\n      ['draggable-tree']: this.nzDraggable,\n      ['ant-select-tree']: this.nzSelectMode\n    };\n  }\n\n  writeValue(value: NzTreeNode[]): void {\n    this.initNzData(value);\n  }\n\n  registerOnChange(fn: (_: NzTreeNode[]) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  // tslint:disable-next-line:no-any\n  initNzData(value: any[]): void {\n    if (Array.isArray(value)) {\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n      this.nzTreeService.isMultiple = this.nzMultiple;\n      this.nzTreeService.initTree(this.coerceTreeNodes(value));\n    }\n  }\n\n  constructor(\n    nzTreeService: NzTreeBaseService,\n    private cdr: ChangeDetectorRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    super(nzTreeService);\n  }\n\n  ngOnInit(): void {\n    this.setClassMap();\n    this.nzDefaultSubject.pipe(takeUntil(this.destroy$)).subscribe((data: { type: string; keys: string[] }) => {\n      if (!data || !data.keys) {\n        return;\n      }\n      switch (data.type) {\n        case 'nzExpandedKeys':\n          this.nzTreeService.calcExpandedKeys(data.keys, this.nzNodes);\n          this.nzExpandedKeysChange.emit(data.keys);\n          break;\n        case 'nzSelectedKeys':\n          this.nzTreeService.calcSelectedKeys(data.keys, this.nzNodes, this.nzMultiple);\n          this.nzSelectedKeysChange.emit(data.keys);\n          break;\n        case 'nzCheckedKeys':\n          this.nzTreeService.calcCheckedKeys(data.keys, this.nzNodes, this.nzCheckStrictly);\n          this.nzCheckedKeysChange.emit(data.keys);\n          break;\n      }\n      this.cdr.markForCheck();\n    });\n    this.nzTreeService\n      .eventTriggerChanged()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(data => {\n        switch (data.eventName) {\n          case 'expand':\n            this.nzExpandChange.emit(data);\n            break;\n          case 'click':\n            this.nzClick.emit(data);\n            break;\n          case 'check':\n            this.nzCheckBoxChange.emit(data);\n            break;\n          case 'dblclick':\n            this.nzDblClick.emit(data);\n            break;\n          case 'contextmenu':\n            this.nzContextMenu.emit(data);\n            break;\n          // drag drop\n          case 'dragstart':\n            this.nzOnDragStart.emit(data);\n            break;\n          case 'dragenter':\n            this.nzOnDragEnter.emit(data);\n            break;\n          case 'dragover':\n            this.nzOnDragOver.emit(data);\n            break;\n          case 'dragleave':\n            this.nzOnDragLeave.emit(data);\n            break;\n          case 'drop':\n            this.nzOnDrop.emit(data);\n            break;\n          case 'dragend':\n            this.nzOnDragEnd.emit(data);\n            break;\n        }\n      });\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n    if (changes.nzCheckStrictly) {\n      this.nzTreeService.isCheckStrictly = toBoolean(changes.nzCheckStrictly.currentValue);\n    }\n    if (changes.nzMultiple) {\n      this.nzTreeService.isMultiple = toBoolean(changes.nzMultiple.currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzAddOnModule, NzNoAnimationModule } from 'ng-zorro-antd/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzTreeNodeComponent } from './nz-tree-node.component';\nimport { NzTreeComponent } from './nz-tree.component';\n\n@NgModule({\n  imports: [CommonModule, NzAddOnModule, NzIconModule, NzNoAnimationModule],\n  declarations: [NzTreeComponent, NzTreeNodeComponent],\n  exports: [NzTreeComponent, NzTreeNodeComponent]\n})\nexport class NzTreeModule {}\n"]}