"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tooltip = void 0;

var _core = require("@angular/core");

var _Chart = require("../Chart");

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var __extends = void 0 && (void 0).__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __metadata = void 0 && (void 0).__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var Tooltip = function (_super) {
  __extends(Tooltip, _super);

  function Tooltip() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Tooltip.prototype, "x");

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Tooltip.prototype, "y");

  __decorate([(0, _core.Input)(), __metadata("design:type", Array)], Tooltip.prototype, "items");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Tooltip.prototype, "show");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Tooltip.prototype, "triggerOn");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Tooltip.prototype, "showTitle");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Tooltip.prototype, "title");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Tooltip.prototype, "crosshairs");

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Tooltip.prototype, "offset");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Tooltip.prototype, "inPlot");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Tooltip.prototype, "follow");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Tooltip.prototype, "shared");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Tooltip.prototype, "enterable");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Tooltip.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Tooltip.prototype, "hideMarkers");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Tooltip.prototype, "containerTpl");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Tooltip.prototype, "itemTpl");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Tooltip.prototype, "g2Tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Tooltip.prototype, "g2TooltipTitle");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Tooltip.prototype, "g2TooltipList");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Tooltip.prototype, "g2TooltipListItem");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Tooltip.prototype, "g2TooltipMarker");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Tooltip.prototype, "htmlContent");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Tooltip.prototype, "useHtml");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Tooltip.prototype, "type");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Tooltip.prototype, "onShow");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Tooltip.prototype, "onHide");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Tooltip.prototype, "onChange");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Tooltip.prototype, "defaultPoint");

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Tooltip.prototype, "timeStamp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Tooltip.prototype, "plotRange");

  Tooltip = __decorate([(0, _core.Component)({
    selector: 'v-tooltip',
    template: "<div #chartDom></div>"
  })], Tooltip);
  return Tooltip;
}(_Chart.Chart);

exports.Tooltip = Tooltip;