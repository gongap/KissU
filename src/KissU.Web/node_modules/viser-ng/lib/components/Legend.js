"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Legend = void 0;

var _core = require("@angular/core");

var _Chart = require("../Chart");

var IStyle = _interopRequireWildcard(require("./Style"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var __extends = void 0 && (void 0).__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __metadata = void 0 && (void 0).__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var Legend = function (_super) {
  __extends(Legend, _super);

  function Legend() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Legend.prototype, "dataKey");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "show");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Legend.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Legend.prototype, "title");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "custom");

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Legend.prototype, "offset");

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Legend.prototype, "offsetX");

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Legend.prototype, "offsetY");

  __decorate([(0, _core.Input)(), __metadata("design:type", Array)], Legend.prototype, "items");

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Legend.prototype, "itemGap");

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Legend.prototype, "titleGap");

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Legend.prototype, "itemMarginBottom");

  __decorate([(0, _core.Input)(), __metadata("design:type", Array)], Legend.prototype, "itemsGroup");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Legend.prototype, "layout");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "allowAllCanceled");

  __decorate([(0, _core.Input)(), __metadata("design:type", Array)], Legend.prototype, "backPadding");

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Legend.prototype, "itemWidth");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Legend.prototype, "unCheckColor");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Legend.prototype, "background");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "itemFormatter");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Legend.prototype, "marker");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Legend.prototype, "textStyle");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "checkable");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "clickable");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "hoverable");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "useHtml");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "autoWrap");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "autoPosition");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Legend.prototype, "container");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Legend.prototype, "containerTpl");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Legend.prototype, "itemTpl");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Legend.prototype, "selectedMode");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "reversed");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "slidable");

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Legend.prototype, "width");

  __decorate([(0, _core.Input)(), __metadata("design:type", Number)], Legend.prototype, "height");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Legend.prototype, "legendMarker");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Legend.prototype, "legendListItem");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Legend.prototype, "legendTitle");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Legend.prototype, "legendList");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "attachLast");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "flipPage");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "name");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "reactive");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Legend.prototype, "sizeType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Boolean)], Legend.prototype, "isSegment");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onHover");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTitleMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTitleMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTitleMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTitleMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTitleClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTitleDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTitleTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTitleTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTitleTouchEnd");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onItemMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onItemMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onItemMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onItemMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onItemClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onItemDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onItemTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onItemTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onItemTouchEnd");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onMarkerMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onMarkerMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onMarkerMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onMarkerMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onMarkerClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onMarkerDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onMarkerTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onMarkerTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onMarkerTouchEnd");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTextMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTextMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTextMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTextMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTextClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTextDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTextTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTextTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Legend.prototype, "onTextTouchEnd");

  Legend = __decorate([(0, _core.Component)({
    selector: 'v-legend',
    template: "<div #chartDom></div>"
  })], Legend);
  return Legend;
}(_Chart.Chart);

exports.Legend = Legend;