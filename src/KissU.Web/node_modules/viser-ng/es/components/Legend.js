var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input } from '@angular/core';
import { Chart } from '../Chart';
import * as IStyle from './Style';
var Legend = (function (_super) {
    __extends(Legend, _super);
    function Legend() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "dataKey");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "show");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "position");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "title");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "custom");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "offset");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "offsetX");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "offsetY");
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], Legend.prototype, "items");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "itemGap");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "titleGap");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "itemMarginBottom");
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], Legend.prototype, "itemsGroup");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "layout");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "allowAllCanceled");
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], Legend.prototype, "backPadding");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "itemWidth");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "unCheckColor");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "background");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "itemFormatter");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "marker");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "textStyle");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "checkable");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "clickable");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "hoverable");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "useHtml");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "autoWrap");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "autoPosition");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "container");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "containerTpl");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "itemTpl");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "selectedMode");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "reversed");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "slidable");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "width");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "height");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "legendMarker");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "legendListItem");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "legendTitle");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "legendList");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "attachLast");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "flipPage");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "name");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "reactive");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "sizeType");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "isSegment");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onHover");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleTouchEnd");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemTouchEnd");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerTouchEnd");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextTouchEnd");
    Legend = __decorate([
        Component({
            selector: 'v-legend',
            template: "<div #chartDom></div>",
        })
    ], Legend);
    return Legend;
}(Chart));
export { Legend };
//# sourceMappingURL=Legend.js.map