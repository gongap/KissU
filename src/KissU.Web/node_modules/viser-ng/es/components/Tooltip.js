var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input } from '@angular/core';
import { Chart } from '../Chart';
var Tooltip = (function (_super) {
    __extends(Tooltip, _super);
    function Tooltip() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Tooltip.prototype, "x");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Tooltip.prototype, "y");
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], Tooltip.prototype, "items");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Tooltip.prototype, "show");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Tooltip.prototype, "triggerOn");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Tooltip.prototype, "showTitle");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Tooltip.prototype, "title");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Tooltip.prototype, "crosshairs");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Tooltip.prototype, "offset");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Tooltip.prototype, "inPlot");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Tooltip.prototype, "follow");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Tooltip.prototype, "shared");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Tooltip.prototype, "enterable");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Tooltip.prototype, "position");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Tooltip.prototype, "hideMarkers");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Tooltip.prototype, "containerTpl");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Tooltip.prototype, "itemTpl");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Tooltip.prototype, "g2Tooltip");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Tooltip.prototype, "g2TooltipTitle");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Tooltip.prototype, "g2TooltipList");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Tooltip.prototype, "g2TooltipListItem");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Tooltip.prototype, "g2TooltipMarker");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Tooltip.prototype, "htmlContent");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Tooltip.prototype, "useHtml");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Tooltip.prototype, "type");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Tooltip.prototype, "onShow");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Tooltip.prototype, "onHide");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Tooltip.prototype, "onChange");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Tooltip.prototype, "defaultPoint");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Tooltip.prototype, "timeStamp");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Tooltip.prototype, "plotRange");
    Tooltip = __decorate([
        Component({
            selector: 'v-tooltip',
            template: "<div #chartDom></div>",
        })
    ], Tooltip);
    return Tooltip;
}(Chart));
export { Tooltip };
//# sourceMappingURL=Tooltip.js.map