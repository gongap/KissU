{"version":3,"sources":["ng://ng-zorro-antd/avatar/nz-avatar.component.ts","ng://ng-zorro-antd/avatar/nz-avatar.module.ts"],"names":["NzAvatarComponent","prototype","setClass","classMap","_a","prefixCls","sizeMap","nzSize","nzShape","nzIcon","hasSrc","updateHostClassService","updateHostClass","el","cd","detectChanges","imgError","this","hasIcon","hasText","nzText","notifyCalc","setSizeStyle","ngOnChanges","changes","hasOwnProperty","currentValue","oldAPIIcon","indexOf","nzSrc","calcStringSize","childrenWidth","textEl","nativeElement","offsetWidth","avatarWidth","getBoundingClientRect","width","scale","textStyles","transform","Object","assign","lineHeight","_this","platform","isBrowser","setTimeout","renderer","setStyle","Component","args","selector","exportAs","template","providers","NzUpdateHostClassService","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","ChangeDetectorRef","Renderer2","Platform","Input","ViewChild","elementRef","large","small","NgModule","declarations","exports","imports","CommonModule","NzIconModule","NzAvatarModule"],"mappings":"2mBAmEEA,EAAAC,UAAAC,SAAA,iBACQC,IAAQC,EAAA,IACX,KAAKC,YAAY,EAClBD,EAAI,KAAKC,UAAS,IAAI,KAAKC,QAAQ,KAAKC,SAAY,KAAKD,QAAQ,KAAKC,QACtEH,EAAI,KAAKC,UAAS,IAAI,KAAKG,SAAY,KAAKA,QAC5CJ,EAAI,KAAKC,UAAS,SAAU,KAAKI,OACjCL,EAAI,KAAKC,UAAS,UAAW,KAAKK,UAIpC,OAFA,KAAKC,uBAAuBC,gBAAgB,KAAKC,GAAIV,GACrD,KAAKW,GAAGC,gBACR,MAGFf,EAAAC,UAAAe,SAAA,WACEC,KAAKP,QAAS,EACdO,KAAKC,SAAU,EACfD,KAAKE,SAAU,EACXF,KAAKR,OACPQ,KAAKC,SAAU,EACND,KAAKG,SACdH,KAAKE,SAAU,GAEjBF,KAAKf,WAAWmB,aAChBJ,KAAKK,gBAGPtB,EAAAC,UAAAsB,YAAA,SAAYC,GACNA,EAAQC,eAAe,WAAaD,EAAQf,OAAOiB,eACrDT,KAAKU,YAA+D,EAAlDH,EAAQf,OAAOiB,aAAaE,QAAQ,YAExDX,KAAKE,SAAWF,KAAKY,SAAWZ,KAAKG,OACrCH,KAAKC,SAAWD,KAAKY,SAAWZ,KAAKR,OACrCQ,KAAKP,SAAWO,KAAKY,MAErBZ,KAAKf,WAAWmB,aAChBJ,KAAKK,gBAGCtB,EAAAC,UAAA6B,eAAR,WACE,GAAKb,KAAKE,QAAV,KAIMY,EAAgBd,KAAKe,OAAOC,cAAcC,YAC1CC,EAAclB,KAAKJ,GAAGuB,wBAAwBC,MAC9CC,EAAQH,EAAc,EAAIJ,GAAiBI,EAAc,GAAKJ,EAAgB,EACpFd,KAAKsB,WAAa,CAChBC,UAAW,SAASF,EAAK,sBAEA,iBAAhBrB,KAAKV,QACdkC,OAAOC,OAAOzB,KAAKsB,WAAY,CAC7BI,WAAe1B,KAAKV,OAAM,OAG9BU,KAAKH,GAAGC,kBAGFf,EAAAC,UAAAoB,WAAR,WAAA,IAAAuB,EAAA3B,KAOE,OALI,KAAK4B,SAASC,WAChBC,WAAU,WACR,EAAKjB,mBAGT,MAGM9B,EAAAC,UAAAqB,aAAR,WAC6B,iBAAhBL,KAAKV,SAGhBU,KAAK+B,SAASC,SAAShC,KAAKJ,GAAI,QAAYI,KAAKV,OAAM,MACvDU,KAAK+B,SAASC,SAAShC,KAAKJ,GAAI,SAAaI,KAAKV,OAAM,MACxDU,KAAK+B,SAASC,SAAShC,KAAKJ,GAAI,cAAkBI,KAAKV,OAAM,MACzDU,KAAKC,SACPD,KAAK+B,SAASC,SAAShC,KAAKJ,GAAI,YAAgBI,KAAKV,OAAS,EAAC,4BA/GpE2C,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,YACVC,SAAU,WACVC,SAAA,6RACAC,UAAW,CAACC,EAAAA,0BACZC,qBAAqB,EACrBC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,kDAzBjCC,EAAAA,kBAFAC,EAAAA,yBAWiCT,EAAAA,gCANjCU,EAAAA,iBAROC,EAAAA,6CAiCNC,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,sBAQAC,EAAAA,UAASlB,KAAA,CAAC,aA4FbnD,GAtFE,SAAAA,EACUsE,EACAxD,EACAH,EACAqC,EACAH,GAJA5B,KAAAqD,WAAAA,EACArD,KAAAH,GAAAA,EACAG,KAAAN,uBAAAA,EACAM,KAAA+B,SAAAA,EACA/B,KAAA4B,SAAAA,EAvBD5B,KAAAT,QAAyB,SACzBS,KAAAV,OAAuB,UAKhCU,KAAAU,YAAa,EACbV,KAAAE,SAAmB,EACnBF,KAAAP,QAAkB,EAClBO,KAAAC,SAAmB,EAKXD,KAAAJ,GAAkBI,KAAKqD,WAAWrC,cAClChB,KAAAZ,UAAY,aACZY,KAAAX,QAAqB,CAAEiE,MAAO,KAAMC,MAAO,iCC3CpDC,EAAAA,SAAQtB,KAAA,CAAC,CACRuB,aAAc,CAAC1E,GACf2E,QAAS,CAAC3E,GACV4E,QAAS,CAACC,EAAAA,aAAcC,EAAAA,kBAEGC,GAL7B,SAAAA","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzSizeLDSType, NzSizeMap, NzUpdateHostClassService } from 'ng-zorro-antd/core';\n\nexport type NzAvatarShape = 'square' | 'circle';\nexport type NzAvatarSize = NzSizeLDSType | number;\n\nexport interface NzAvatarSizeMap {\n  [size: string]: string;\n}\n\n@Component({\n  selector: 'nz-avatar',\n  exportAs: 'nzAvatar',\n  templateUrl: './nz-avatar.component.html',\n  providers: [NzUpdateHostClassService],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class NzAvatarComponent implements OnChanges {\n  @Input() nzShape: NzAvatarShape = 'circle';\n  @Input() nzSize: NzAvatarSize = 'default';\n  @Input() nzText: string;\n  @Input() nzSrc: string;\n  @Input() nzIcon: string;\n\n  oldAPIIcon = true; // Make the user defined icon compatible to old API. Should be removed in 2.0.\n  hasText: boolean = false;\n  hasSrc: boolean = true;\n  hasIcon: boolean = false;\n  textStyles: {};\n\n  @ViewChild('textEl') textEl: ElementRef;\n\n  private el: HTMLElement = this.elementRef.nativeElement;\n  private prefixCls = 'ant-avatar';\n  private sizeMap: NzSizeMap = { large: 'lg', small: 'sm' };\n\n  constructor(\n    private elementRef: ElementRef,\n    private cd: ChangeDetectorRef,\n    private updateHostClassService: NzUpdateHostClassService,\n    private renderer: Renderer2,\n    private platform: Platform\n  ) {}\n\n  setClass(): this {\n    const classMap = {\n      [this.prefixCls]: true,\n      [`${this.prefixCls}-${this.sizeMap[this.nzSize]}`]: this.sizeMap[this.nzSize],\n      [`${this.prefixCls}-${this.nzShape}`]: this.nzShape,\n      [`${this.prefixCls}-icon`]: this.nzIcon,\n      [`${this.prefixCls}-image`]: this.hasSrc // downgrade after image error\n    };\n    this.updateHostClassService.updateHostClass(this.el, classMap);\n    this.cd.detectChanges();\n    return this;\n  }\n\n  imgError(): void {\n    this.hasSrc = false;\n    this.hasIcon = false;\n    this.hasText = false;\n    if (this.nzIcon) {\n      this.hasIcon = true;\n    } else if (this.nzText) {\n      this.hasText = true;\n    }\n    this.setClass().notifyCalc();\n    this.setSizeStyle();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('nzIcon') && changes.nzIcon.currentValue) {\n      this.oldAPIIcon = changes.nzIcon.currentValue.indexOf('anticon') > -1;\n    }\n    this.hasText = !this.nzSrc && !!this.nzText;\n    this.hasIcon = !this.nzSrc && !!this.nzIcon;\n    this.hasSrc = !!this.nzSrc;\n\n    this.setClass().notifyCalc();\n    this.setSizeStyle();\n  }\n\n  private calcStringSize(): void {\n    if (!this.hasText) {\n      return;\n    }\n\n    const childrenWidth = this.textEl.nativeElement.offsetWidth;\n    const avatarWidth = this.el.getBoundingClientRect().width;\n    const scale = avatarWidth - 8 < childrenWidth ? (avatarWidth - 8) / childrenWidth : 1;\n    this.textStyles = {\n      transform: `scale(${scale}) translateX(-50%)`\n    };\n    if (typeof this.nzSize === 'number') {\n      Object.assign(this.textStyles, {\n        lineHeight: `${this.nzSize}px`\n      });\n    }\n    this.cd.detectChanges();\n  }\n\n  private notifyCalc(): this {\n    // If use ngAfterViewChecked, always demands more computations, so......\n    if (this.platform.isBrowser) {\n      setTimeout(() => {\n        this.calcStringSize();\n      });\n    }\n    return this;\n  }\n\n  private setSizeStyle(): void {\n    if (typeof this.nzSize === 'string') {\n      return;\n    }\n    this.renderer.setStyle(this.el, 'width', `${this.nzSize}px`);\n    this.renderer.setStyle(this.el, 'height', `${this.nzSize}px`);\n    this.renderer.setStyle(this.el, 'line-height', `${this.nzSize}px`);\n    if (this.hasIcon) {\n      this.renderer.setStyle(this.el, 'font-size', `${this.nzSize / 2}px`);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzAvatarComponent } from './nz-avatar.component';\n\n@NgModule({\n  declarations: [NzAvatarComponent],\n  exports: [NzAvatarComponent],\n  imports: [CommonModule, NzIconModule]\n})\nexport class NzAvatarModule {}\n"]}