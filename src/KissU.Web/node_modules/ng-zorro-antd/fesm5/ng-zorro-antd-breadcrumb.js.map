{"version":3,"file":"ng-zorro-antd-breadcrumb.js.map","sources":["ng://ng-zorro-antd/breadcrumb/nz-breadcrumb.component.ts","ng://ng-zorro-antd/breadcrumb/nz-breadcrumb-item.component.ts","ng://ng-zorro-antd/breadcrumb/nz-breadcrumb.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Params, PRIMARY_OUTLET, Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { startWith } from 'rxjs/internal/operators/startWith';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { InputBoolean } from 'ng-zorro-antd/core';\n\nexport const NZ_ROUTE_DATA_BREADCRUMB = 'breadcrumb';\n\nexport interface BreadcrumbOption {\n  label: string;\n  params: Params;\n  url: string;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-breadcrumb',\n  exportAs: 'nzBreadcrumb',\n  preserveWhitespaces: false,\n  templateUrl: './nz-breadcrumb.component.html',\n  styles: [\n    `\n      nz-breadcrumb {\n        display: block;\n      }\n    `\n  ]\n})\nexport class NzBreadCrumbComponent implements OnInit, OnDestroy {\n  @Input() @InputBoolean() nzAutoGenerate = false;\n  @Input() nzSeparator: string | TemplateRef<void> = '/';\n\n  breadcrumbs: BreadcrumbOption[] | undefined = [];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private injector: Injector,\n    private ngZone: NgZone,\n    private cdr: ChangeDetectorRef,\n    elementRef: ElementRef,\n    renderer: Renderer2\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-breadcrumb');\n  }\n\n  ngOnInit(): void {\n    if (this.nzAutoGenerate) {\n      this.registerRouterChange();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  navigate(url: string, e: MouseEvent): void {\n    e.preventDefault();\n\n    this.ngZone\n      .run(() =>\n        this.injector\n          .get(Router)\n          .navigateByUrl(url)\n          .then()\n      )\n      .then();\n  }\n\n  private registerRouterChange(): void {\n    try {\n      const router = this.injector.get(Router);\n      const activatedRoute = this.injector.get(ActivatedRoute);\n      router.events\n        .pipe(\n          filter(e => e instanceof NavigationEnd),\n          takeUntil(this.destroy$),\n          startWith(true) // Trigger initial render.\n        )\n        .subscribe(() => {\n          this.breadcrumbs = this.getBreadcrumbs(activatedRoute.root);\n          this.cdr.markForCheck();\n        });\n    } catch (e) {\n      throw new Error('[NG-ZORRO] You should import RouterModule if you want to use `NzAutoGenerate`');\n    }\n  }\n\n  private getBreadcrumbs(\n    route: ActivatedRoute,\n    url: string = '',\n    breadcrumbs: BreadcrumbOption[] = []\n  ): BreadcrumbOption[] | undefined {\n    const children: ActivatedRoute[] = route.children;\n    // If there's no sub root, then stop the recurse and returns the generated breadcrumbs.\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n    for (const child of children) {\n      if (child.outlet === PRIMARY_OUTLET) {\n        // Only parse components in primary router-outlet (in another word, router-outlet without a specific name).\n        // Parse this layer and generate a breadcrumb item.\n        const routeURL: string = child.snapshot.url.map(segment => segment.path).join('/');\n        const nextUrl = url + `/${routeURL}`;\n        const breadcrumbLabel = child.snapshot.data[NZ_ROUTE_DATA_BREADCRUMB];\n        // If have data, go to generate a breadcrumb for it.\n        if (routeURL && breadcrumbLabel) {\n          const breadcrumb: BreadcrumbOption = {\n            label: breadcrumbLabel,\n            params: child.snapshot.params,\n            url: nextUrl\n          };\n          breadcrumbs.push(breadcrumb);\n        }\n        return this.getBreadcrumbs(child, nextUrl, breadcrumbs);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { NzBreadCrumbComponent } from './nz-breadcrumb.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-breadcrumb-item',\n  exportAs: 'nzBreadcrumbItem',\n  preserveWhitespaces: false,\n  templateUrl: 'nz-breadcrumb-item.component.html',\n  styles: [\n    `\n      nz-breadcrumb-item:last-child {\n        color: rgba(0, 0, 0, 0.65);\n      }\n\n      nz-breadcrumb-item:last-child .ant-breadcrumb-separator {\n        display: none;\n      }\n    `\n  ]\n})\nexport class NzBreadCrumbItemComponent {\n  constructor(public nzBreadCrumbComponent: NzBreadCrumbComponent) {}\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzAddOnModule } from 'ng-zorro-antd/core';\n\nimport { NzBreadCrumbItemComponent } from './nz-breadcrumb-item.component';\nimport { NzBreadCrumbComponent } from './nz-breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, NzAddOnModule],\n  declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent],\n  exports: [NzBreadCrumbComponent, NzBreadCrumbItemComponent]\n})\nexport class NzBreadCrumbModule {}\n"],"names":["tslib_1.__values","tslib_1.__decorate"],"mappings":"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"}
