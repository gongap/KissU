{"version":3,"file":"ng-zorro-antd-tree-select.js.map","sources":["ng://ng-zorro-antd/tree-select/nz-tree-select.service.ts","ng://ng-zorro-antd/tree-select/nz-tree-select.component.ts","ng://ng-zorro-antd/tree-select/nz-tree-select.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { NzTreeBaseService } from 'ng-zorro-antd/core';\n\n@Injectable()\nexport class NzTreeSelectService extends NzTreeBaseService {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BACKSPACE } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';\nimport {\n  forwardRef,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  Self,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { merge, of as observableOf, Subscription } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\n\nimport {\n  isNotNil,\n  slideMotion,\n  zoomMotion,\n  InputBoolean,\n  NzFormatEmitEvent,\n  NzNoAnimationDirective,\n  NzSizeLDSType,\n  NzTreeBase,\n  NzTreeBaseService,\n  NzTreeHigherOrderServiceToken,\n  NzTreeNode,\n  NzTreeNodeOptions\n} from 'ng-zorro-antd/core';\nimport { NzTreeComponent } from 'ng-zorro-antd/tree';\n\nimport { NzTreeSelectService } from './nz-tree-select.service';\n\nexport function higherOrderServiceFactory(injector: Injector): NzTreeBaseService {\n  return injector.get(NzTreeSelectService);\n}\n\n@Component({\n  selector: 'nz-tree-select',\n  exportAs: 'nzTreeSelect',\n  animations: [slideMotion, zoomMotion],\n  templateUrl: './nz-tree-select.component.html',\n  providers: [\n    NzTreeSelectService,\n    {\n      provide: NzTreeHigherOrderServiceToken,\n      useFactory: higherOrderServiceFactory,\n      deps: [[new Self(), Injector]]\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzTreeSelectComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-select-lg]': 'nzSize===\"large\"',\n    '[class.ant-select-sm]': 'nzSize===\"small\"',\n    '[class.ant-select-enabled]': '!nzDisabled',\n    '[class.ant-select-disabled]': 'nzDisabled',\n    '[class.ant-select-allow-clear]': 'nzAllowClear',\n    '[class.ant-select-open]': 'nzOpen',\n    '(click)': 'trigger()'\n  },\n  styles: [\n    `\n      .ant-select-dropdown {\n        top: 100%;\n        left: 0;\n        position: relative;\n        width: 100%;\n        margin-top: 4px;\n        margin-bottom: 4px;\n        overflow: auto;\n      }\n    `\n  ]\n})\nexport class NzTreeSelectComponent extends NzTreeBase implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n  @Input() @InputBoolean() nzAllowClear = true;\n  @Input() @InputBoolean() nzShowExpand = true;\n  @Input() @InputBoolean() nzShowLine = false;\n  @Input() @InputBoolean() nzDropdownMatchSelectWidth = true;\n  @Input() @InputBoolean() nzCheckable = false;\n  @Input() @InputBoolean() nzShowIcon = false;\n  @Input() @InputBoolean() nzShowSearch = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzAsyncData = false;\n  @Input() @InputBoolean() nzMultiple = false;\n  @Input() @InputBoolean() nzDefaultExpandAll = false;\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\n  @Input() nzNotFoundContent: string;\n  @Input() nzNodes: Array<NzTreeNode | NzTreeNodeOptions> = [];\n  @Input() nzOpen = false;\n  @Input() nzSize: NzSizeLDSType = 'default';\n  @Input() nzPlaceHolder = '';\n  @Input() nzDropdownStyle: { [key: string]: string };\n  @Input() nzDefaultExpandedKeys: string[] = [];\n  @Input() nzDisplayWith: (node: NzTreeNode) => string | undefined = (node: NzTreeNode) => node.title;\n  @Input() nzMaxTagCount: number;\n  @Input() nzMaxTagPlaceholder: TemplateRef<{ $implicit: NzTreeNode[] }>;\n  @Output() readonly nzOpenChange = new EventEmitter<boolean>();\n  @Output() readonly nzCleared = new EventEmitter<void>();\n  @Output() readonly nzRemoved = new EventEmitter<NzTreeNode>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzTreeClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzTreeCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n\n  @ViewChild('inputElement') inputElement: ElementRef;\n  @ViewChild('treeRef') treeRef: NzTreeComponent;\n  @ViewChild(CdkOverlayOrigin) cdkOverlayOrigin: CdkOverlayOrigin;\n  @ViewChild(CdkConnectedOverlay) cdkConnectedOverlay: CdkConnectedOverlay;\n\n  @Input() @ContentChild('nzTreeTemplate') nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\n\n  triggerWidth: number;\n  isComposing = false;\n  isDestroy = true;\n  isNotFound = false;\n  inputValue = '';\n  dropDownPosition: 'top' | 'center' | 'bottom' = 'bottom';\n  selectionChangeSubscription: Subscription;\n  selectedNodes: NzTreeNode[] = [];\n  value: string[] = [];\n\n  onChange: (value: string[] | string | null) => void;\n  onTouched: () => void = () => null;\n\n  get placeHolderDisplay(): string {\n    return this.inputValue || this.isComposing || this.selectedNodes.length ? 'none' : 'block';\n  }\n\n  get searchDisplay(): string {\n    return this.nzOpen ? 'block' : 'none';\n  }\n\n  get isMultiple(): boolean {\n    return this.nzMultiple || this.nzCheckable;\n  }\n\n  get selectedValueDisplay(): { [key: string]: string } {\n    let showSelectedValue = false;\n    let opacity = 1;\n    if (!this.nzShowSearch) {\n      showSelectedValue = true;\n    } else {\n      if (this.nzOpen) {\n        showSelectedValue = !(this.inputValue || this.isComposing);\n        if (showSelectedValue) {\n          opacity = 0.4;\n        }\n      } else {\n        showSelectedValue = true;\n      }\n    }\n    return {\n      display: showSelectedValue ? 'block' : 'none',\n      opacity: `${opacity}`\n    };\n  }\n\n  constructor(\n    nzTreeService: NzTreeSelectService,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    super(nzTreeService);\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-select');\n  }\n\n  ngOnInit(): void {\n    this.isDestroy = false;\n    this.selectionChangeSubscription = this.subscribeSelectionChange();\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroy = true;\n    this.closeDropDown();\n    this.selectionChangeSubscription.unsubscribe();\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.nzDisabled = isDisabled;\n    this.closeDropDown();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('nzNodes')) {\n      this.updateSelectedNodes(true);\n    }\n  }\n\n  writeValue(value: string[] | string): void {\n    if (isNotNil(value)) {\n      if (this.isMultiple && Array.isArray(value)) {\n        this.value = value;\n      } else {\n        this.value = [value as string];\n      }\n      this.updateSelectedNodes(true);\n    } else {\n      this.value = [];\n      this.selectedNodes.forEach(node => {\n        this.removeSelected(node, false);\n      });\n      this.selectedNodes = [];\n    }\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (_: string[] | string | null) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  trigger(): void {\n    if (this.nzDisabled || (!this.nzDisabled && this.nzOpen)) {\n      this.closeDropDown();\n    } else {\n      this.openDropdown();\n      if (this.nzShowSearch || this.isMultiple) {\n        this.focusOnInput();\n      }\n    }\n  }\n\n  openDropdown(): void {\n    if (!this.nzDisabled) {\n      this.nzOpen = true;\n      this.nzOpenChange.emit(this.nzOpen);\n      this.updateCdkConnectedOverlayStatus();\n      this.updatePosition();\n    }\n  }\n\n  closeDropDown(): void {\n    this.onTouched();\n    this.nzOpen = false;\n    this.nzOpenChange.emit(this.nzOpen);\n    this.cdr.markForCheck();\n  }\n\n  onKeyDownInput(e: KeyboardEvent): void {\n    const keyCode = e.keyCode;\n    const eventTarget = e.target as HTMLInputElement;\n    if (this.isMultiple && !eventTarget.value && keyCode === BACKSPACE) {\n      e.preventDefault();\n      if (this.selectedNodes.length) {\n        const removeNode = this.selectedNodes[this.selectedNodes.length - 1];\n        this.removeSelected(removeNode);\n        this.nzTreeService!.triggerEventChange$!.next({\n          eventName: 'removeSelect',\n          node: removeNode\n        });\n      }\n    }\n  }\n\n  onExpandedKeysChange(value: NzFormatEmitEvent): void {\n    this.nzExpandChange.emit(value);\n    this.nzDefaultExpandedKeys = [...value.keys!];\n  }\n\n  setInputValue(value: string): void {\n    this.inputValue = value;\n    this.updateInputWidth();\n    this.updatePosition();\n  }\n\n  removeSelected(node: NzTreeNode, emit: boolean = true, event?: MouseEvent): void {\n    node.isSelected = false;\n    node.isChecked = false;\n    if (this.nzCheckable) {\n      this.nzTreeService.conduct(node);\n    } else {\n      this.nzTreeService.setSelectedNodeList(node, this.nzMultiple);\n    }\n\n    if (emit) {\n      this.nzRemoved.emit(node);\n    }\n\n    // Do not trigger the popup\n    if (event && event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n\n  focusOnInput(): void {\n    setTimeout(() => {\n      if (this.inputElement) {\n        this.inputElement.nativeElement.focus();\n      }\n    });\n  }\n\n  subscribeSelectionChange(): Subscription {\n    return merge(\n      this.nzTreeClick.pipe(\n        tap((event: NzFormatEmitEvent) => {\n          const node = event.node!;\n          if (this.nzCheckable && !node.isDisabled && !node.isDisableCheckbox) {\n            node.isChecked = !node.isChecked;\n            this.nzTreeService.conduct(node);\n          }\n          if (this.nzCheckable) {\n            node.isSelected = false;\n          }\n        }),\n        filter((event: NzFormatEmitEvent) => {\n          const node = event.node!;\n          return this.nzCheckable ? !node.isDisabled && !node.isDisableCheckbox : !node.isDisabled;\n        })\n      ),\n      this.nzCheckable ? this.nzTreeCheckBoxChange : observableOf(),\n      this.nzCleared,\n      this.nzRemoved\n    ).subscribe(() => {\n      this.updateSelectedNodes();\n      const value = this.selectedNodes.map(node => node.key!);\n      this.value = [...value];\n      if (this.nzShowSearch || this.isMultiple) {\n        this.inputValue = '';\n        this.isNotFound = false;\n      }\n      if (this.isMultiple) {\n        this.onChange(value);\n        this.focusOnInput();\n        this.updatePosition();\n      } else {\n        this.closeDropDown();\n        this.onChange(value.length ? value[0] : null);\n      }\n    });\n  }\n\n  updateSelectedNodes(init: boolean = false): void {\n    if (init) {\n      const nodes = this.coerceTreeNodes(this.nzNodes);\n      this.nzTreeService.isMultiple = this.isMultiple;\n      this.nzTreeService.initTree(nodes);\n      if (this.nzCheckable) {\n        this.nzTreeService.calcCheckedKeys(this.value, nodes);\n      } else {\n        this.nzTreeService.calcSelectedKeys(this.value, nodes, this.isMultiple);\n      }\n    }\n    this.selectedNodes = [...(this.nzCheckable ? this.getCheckedNodeList() : this.getSelectedNodeList())];\n  }\n\n  updatePosition(): void {\n    setTimeout(() => {\n      if (this.cdkConnectedOverlay && this.cdkConnectedOverlay.overlayRef) {\n        this.cdkConnectedOverlay.overlayRef.updatePosition();\n      }\n    });\n  }\n\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    this.dropDownPosition = position.connectionPair.originY;\n  }\n\n  updateInputWidth(): void {\n    if (this.isMultiple && this.inputElement) {\n      if (this.inputValue || this.isComposing) {\n        this.renderer.setStyle(\n          this.inputElement.nativeElement,\n          'width',\n          `${this.inputElement.nativeElement.scrollWidth}px`\n        );\n      } else {\n        this.renderer.removeStyle(this.inputElement.nativeElement, 'width');\n      }\n    }\n  }\n\n  onClearSelection($event: MouseEvent): void {\n    $event.stopPropagation();\n    $event.preventDefault();\n    this.selectedNodes.forEach(node => {\n      this.removeSelected(node, false);\n    });\n    this.nzCleared.emit();\n  }\n\n  setSearchValues($event: NzFormatEmitEvent): void {\n    Promise.resolve().then(() => {\n      this.isNotFound = (this.nzShowSearch || this.isMultiple) && !!this.inputValue && $event.matchedKeys!.length === 0;\n    });\n  }\n\n  updateCdkConnectedOverlayStatus(): void {\n    this.triggerWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n  }\n\n  trackValue(_index: number, option: NzTreeNode): string {\n    return option.key!;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzNoAnimationModule, NzOverlayModule } from 'ng-zorro-antd/core';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\n\nimport { NzTreeSelectComponent } from './nz-tree-select.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    FormsModule,\n    NzTreeModule,\n    NzIconModule,\n    NzEmptyModule,\n    NzOverlayModule,\n    NzNoAnimationModule\n  ],\n  declarations: [NzTreeSelectComponent],\n  exports: [NzTreeSelectComponent]\n})\nexport class NzTreeSelectModule {}\n"],"names":["tslib_1.__extends","observableOf","tslib_1.__decorate"],"mappings":"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"}
