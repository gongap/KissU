{"version":3,"sources":["webpack:///./Typings/app/systems/application/application-detail.component.ts","webpack:///./Typings/app/systems/application/application-edit.component.ts","webpack:///./Typings/app/systems/application/application-list.component.ts","webpack:///./Typings/app/systems/application/application-select.component.ts","webpack:///./Typings/app/systems/application/model/application-view-model.ts","webpack:///./Typings/app/systems/module/model/module-query.ts","webpack:///./Typings/app/systems/module/model/module-view-model.ts","webpack:///./Typings/app/systems/module/module-detail.component.ts","webpack:///./Typings/app/systems/module/module-edit.component.ts","webpack:///./Typings/app/systems/module/module-list.component.ts","webpack:///./Typings/app/systems/module/module-select.component.ts","webpack:///./Typings/app/systems/role/model/permission-view-model.ts","webpack:///./Typings/app/systems/role/model/role-view-model.ts","webpack:///./Typings/app/systems/role/permission.component.ts","webpack:///./Typings/app/systems/role/role-detail.component.ts","webpack:///./Typings/app/systems/role/role-edit.component.ts","webpack:///./Typings/app/systems/role/role-list.component.ts","webpack:///./Typings/app/systems/role/role-user-list.component.ts","webpack:///./Typings/app/systems/role/select-user-list.component.ts","webpack:///./Typings/app/systems/system-routing.module.ts","webpack:///./Typings/app/systems/system.module.ts","webpack:///./Typings/app/systems/user/model/user-query.ts","webpack:///./Typings/app/systems/user/user-create.component.ts","webpack:///./Typings/app/systems/user/user-detail.component.ts","webpack:///./Typings/app/systems/user/user-list.component.ts"],"names":[],"mappings":"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","file":"0.chunk.js","sourcesContent":["import { Component, Injector } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { DialogEditComponentBase } from '../../../util';\r\nimport { ApplicationViewModel } from './model/application-view-model';\r\n\r\n/**\r\n * 应用程序详情页\r\n */\r\n@Component({\r\n    selector: 'application-detail',\r\n    templateUrl: !env.dev() ? './html/detail.component.html' : '/view/systems/application/detail'\r\n})\r\nexport class ApplicationDetailComponent extends DialogEditComponentBase<ApplicationViewModel> {\r\n    /**\r\n     * 初始化应用程序详情页\r\n     * @param injector 注入器\r\n     */\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * 获取基地址\r\n     */\r\n    protected getBaseUrl() {\r\n        return \"application\";\r\n    }\r\n\r\n    /**\r\n     * 是否远程加载\r\n     */\r\n    isRequestLoad() {\r\n        return false;\r\n    }\r\n}","import { Component, Injector } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { DialogEditComponentBase } from '../../../util';\r\nimport { ApplicationViewModel } from './model/application-view-model';\r\n\r\n/**\r\n * 应用程序编辑页\r\n */\r\n@Component({\r\n    selector: 'application-edit',\r\n    templateUrl: !env.dev() ? './html/edit.component.html' : '/view/systems/application/edit'\r\n})\r\nexport class ApplicationEditComponent extends DialogEditComponentBase<ApplicationViewModel> {\r\n    /**\r\n     * 初始化应用程序编辑页\r\n     * @param injector 注入器\r\n     */\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * 创建模型\r\n     */\r\n    protected createModel() {\r\n        let result = new ApplicationViewModel();\r\n        result.enabled = true;\r\n        result.registerEnabled = true;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 获取基地址\r\n     */\r\n    protected getBaseUrl() {\r\n        return \"application\";\r\n    }\r\n\r\n    /**\r\n     * 是否远程加载\r\n     */\r\n    isRequestLoad() {\r\n        return false;\r\n    }\r\n}","import { Component, Injector } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { TableQueryComponentBase } from '../../../util';\r\nimport { ApplicationQuery } from './model/application-query';\r\nimport { ApplicationViewModel } from './model/application-view-model';\r\nimport { ApplicationEditComponent } from './application-edit.component';\r\nimport { ApplicationDetailComponent } from './application-detail.component';\r\n\r\n/**\r\n * 应用程序列表页\r\n */\r\n@Component( {\r\n    selector: 'application-list',\r\n    templateUrl: !env.dev() ? './html/index.component.html' : '/view/systems/application'\r\n} )\r\nexport class ApplicationListComponent extends TableQueryComponentBase<ApplicationViewModel, ApplicationQuery>  {\r\n    /**\r\n     * 初始化应用程序列表页\r\n     * @param injector 注入器\r\n     */\r\n    constructor( injector: Injector ) {\r\n        super( injector );\r\n    }\r\n\r\n    /**\r\n     * 获取创建弹出框组件\r\n     */\r\n    getCreateDialogComponent() {\r\n        return ApplicationEditComponent;\r\n    }\r\n\r\n    /**\r\n     * 获取详情弹出框组件\r\n     */\r\n    getDetailDialogComponent() {\r\n        return ApplicationDetailComponent;\r\n    }\r\n}","import { Component, Injector, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { ComponentBase } from '../../../util';\r\nimport { ApplicationViewModel } from './model/application-view-model';\r\n\r\n/**\r\n * 公共组件 - 选择应用程序\r\n */\r\n@Component({\r\n    selector: 'application-select',\r\n    templateUrl: !env.dev() ? './html/select.component.html' : '/view/systems/application/select'\r\n})\r\nexport class ApplicationSelectComponent extends ComponentBase implements OnInit {\r\n    /**\r\n     * 应用程序列表\r\n     */\r\n    list: ApplicationViewModel[];\r\n    /**\r\n     * 当前应用程序\r\n     */\r\n    selected: ApplicationViewModel;\r\n    /**\r\n     * 加载状态\r\n     */\r\n    loading;\r\n    /**\r\n     * 单击事件\r\n     */\r\n    @Output() onClick = new EventEmitter<ApplicationViewModel>();\r\n\r\n    /**\r\n     * 初始化选择应用程序\r\n     * @param injector 注入器\r\n     */\r\n    constructor(injector: Injector) {\r\n        super( injector );\r\n        this.list = new Array<ApplicationViewModel>();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    ngOnInit() {\r\n        this.loadApplications();\r\n    }\r\n\r\n    /**\r\n     * 加载应用程序列表\r\n     */\r\n    loadApplications() {\r\n        this.util.webapi.get<ApplicationViewModel[]>( \"/api/application/all\" ).handle( {\r\n            before: () => this.loading = true,\r\n            ok: result => {\r\n                this.list = result;\r\n                this.selectApplication();\r\n            },\r\n            complete: () => this.loading = false\r\n        } );\r\n    }\r\n\r\n    /**\r\n     * 选择当前应用程序\r\n     */\r\n    private selectApplication() {\r\n        if ( !this.list || this.list.length === 0 )\r\n            return;\r\n        this.click( this.list[0] );\r\n    }\r\n\r\n    /**\r\n     * 单击\r\n     */\r\n    click( item ) {\r\n        this.selected = item;\r\n        this.onClick.emit( item );\r\n    }\r\n}","import { ViewModel } from '../../../../util';\r\n\r\n/**\r\n * 应用程序参数\r\n */\r\nexport class ApplicationViewModel extends ViewModel {\r\n    /**\r\n     * 应用程序编码\r\n     */\r\n    code;\r\n    /**\r\n     * 应用程序名称\r\n     */\r\n    name;\r\n    /**\r\n     * 启用\r\n     */\r\n    enabled;\r\n    /**\r\n     * 启用注册\r\n     */\r\n    registerEnabled;\r\n    /**\r\n     * 备注\r\n     */\r\n    remark;\r\n    /**\r\n     * 创建时间\r\n     */\r\n    creationTime;\r\n    /**\r\n     * 创建人编号\r\n     */\r\n    creatorId;\r\n    /**\r\n     * 最后修改时间\r\n     */\r\n    lastModificationTime;\r\n    /**\r\n     * 最后修改人编号\r\n     */\r\n    lastModifierId;\r\n    /**\r\n     * 版本号\r\n     */\r\n    version;\r\n}","import { TreeQueryParameter } from '../../../../util';\r\n\r\n/**\r\n * 模块查询参数\r\n */\r\nexport class ModuleQuery extends TreeQueryParameter {\r\n    /**\r\n     * 标识\r\n     */\r\n    resourceId;\r\n    /**\r\n     * 应用程序标识\r\n     */\r\n    applicationId;\r\n    /**\r\n     * 角色标识\r\n     */\r\n    roleId;\r\n    /**\r\n     * 资源标识\r\n     */\r\n    uri;\r\n    /**\r\n     * 资源名称\r\n     */\r\n    name;\r\n    /**\r\n     * 备注\r\n     */\r\n    remark;\r\n    /**\r\n     * 起始创建时间\r\n     */\r\n    beginCreationTime;\r\n    /**\r\n     * 结束创建时间\r\n     */\r\n    endCreationTime;\r\n}","import { TreeViewModel } from '../../../../util';\r\n\r\n/**\r\n * 模块参数\r\n */\r\nexport class ModuleViewModel extends TreeViewModel {\r\n    /**\r\n     * 应用程序标识\r\n     */\r\n    applicationId;\r\n    /**\r\n     * 应用程序名称\r\n     */\r\n    applicationName;\r\n    /**\r\n     * 模块名称\r\n     */\r\n    name;\r\n    /**\r\n     * 模块地址\r\n     */\r\n    url;\r\n    /**\r\n     * 图标\r\n     */\r\n    icon;\r\n    /**\r\n     * 备注\r\n     */\r\n    remark;\r\n    /**\r\n     * 创建时间\r\n     */\r\n    creationTime;\r\n    /**\r\n     * 版本号\r\n     */\r\n    version;\r\n}","import { Component, Injector } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { EditComponentBase } from '../../../util';\r\nimport { ModuleViewModel } from './model/module-view-model';\r\n\r\n/**\r\n * 模块详情页\r\n */\r\n@Component({\r\n    selector: 'module-detail',\r\n    templateUrl: !env.dev() ? './html/detail.component.html' : '/view/systems/module/detail'\r\n})\r\nexport class ModuleDetailComponent extends EditComponentBase<ModuleViewModel> {\r\n    /**\r\n     * 初始化模块详情页\r\n     * @param injector 注入器\r\n     */\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * 获取基地址\r\n     */\r\n    protected getBaseUrl() {\r\n        return \"module\";\r\n    }\r\n\r\n    /**\r\n     * 是否远程加载\r\n     */\r\n    isRequestLoad() {\r\n        return false;\r\n    }\r\n}","import { Component, Injector, Input } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { DialogTreeEditComponentBase } from '../../../util';\r\nimport { ModuleViewModel } from './model/module-view-model';\r\nimport { ModuleSelectComponent } from './module-select.component';\r\n\r\n/**\r\n * 模块编辑页\r\n */\r\n@Component( {\r\n    selector: 'module-edit',\r\n    templateUrl: !env.dev() ? './html/edit.component.html' : '/view/systems/module/edit'\r\n} )\r\nexport class ModuleEditComponent extends DialogTreeEditComponentBase<ModuleViewModel> {\r\n    /**\r\n     * 应用程序标识\r\n     */\r\n    @Input() applicationId;\r\n    /**\r\n     * 应用程序名称\r\n     */\r\n    @Input() applicationName;\r\n\r\n    /**\r\n     * 初始化模块编辑页\r\n     * @param injector 注入器\r\n     */\r\n    constructor( injector: Injector ) {\r\n        super( injector );\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.model.applicationId = this.applicationId;\r\n    }\r\n\r\n    /**\r\n     * 创建模型\r\n     */\r\n    createModel() {\r\n        let result = new ModuleViewModel();\r\n        result.enabled = true;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 获取基地址\r\n     */\r\n    protected getBaseUrl() {\r\n        return \"module\";\r\n    }\r\n\r\n    /**\r\n     * 获取选择框组件\r\n     */\r\n    getSelectDialogComponent() {\r\n        return ModuleSelectComponent;\r\n    }\r\n\r\n    /**\r\n     * 获取选择框数据\r\n     */\r\n    protected getSelectDialogData() {\r\n        return { applicationId: this.applicationId, data: this.parent };\r\n    }\r\n\r\n    /**\r\n     * 是否请求加载\r\n     */\r\n    isRequestLoad() {\r\n        return false;\r\n    }\r\n}","import { Component, Injector } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { TreeTableQueryComponentBase } from '../../../util';\r\nimport { ModuleQuery } from './model/module-query';\r\nimport { ModuleViewModel } from './model/module-view-model';\r\nimport { ApplicationViewModel } from \"../application/model/application-view-model\";\r\nimport { ModuleEditComponent } from './module-edit.component';\r\nimport { ModuleDetailComponent } from './module-detail.component';\r\n\r\n/**\r\n * 模块列表页\r\n */\r\n@Component( {\r\n    selector: 'module-list',\r\n    templateUrl: !env.dev() ? './html/index.component.html' : '/view/systems/module'\r\n} )\r\nexport class ModuleListComponent extends TreeTableQueryComponentBase<ModuleViewModel, ModuleQuery>  {\r\n    /**\r\n     * 当前应用程序\r\n     */\r\n    selectedApplication: ApplicationViewModel;\r\n\r\n    /**\r\n     * 初始化模块列表页\r\n     * @param injector 注入器\r\n     */\r\n    constructor( injector: Injector ) {\r\n        super( injector );\r\n        this.selectedApplication = new ApplicationViewModel();\r\n    }\r\n\r\n    /**\r\n     * 创建查询参数\r\n     */\r\n    protected createQuery() {\r\n        let result = new ModuleQuery();\r\n        if ( this.selectedApplication )\r\n            result.applicationId = this.selectedApplication.id;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 选择应用程序\r\n     * @param application 应用程序\r\n     */\r\n    selectApplication( application: ApplicationViewModel ) {\r\n        this.selectedApplication = application;\r\n        this.queryParam.applicationId = application.id;\r\n        this.query();\r\n    }\r\n\r\n    /**\r\n     * 获取创建弹出层组件\r\n     */\r\n    getCreateDialogComponent() {\r\n        return ModuleEditComponent;\r\n    }\r\n\r\n    /**\r\n     * 获取创建弹出层数据\r\n     */\r\n    protected getCreateDialogData( data?) {\r\n        return {\r\n            parent: data,\r\n            applicationId: this.selectedApplication.id,\r\n            applicationName: this.selectedApplication.name\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建弹出框打开前回调函数\r\n     */\r\n    onCreateBeforeOpen() {\r\n        if ( this.selectedApplication.id )\r\n            return true;\r\n        this.util.message.warn( \"请选择应用程序\" );\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取更新弹出框数据\r\n     */\r\n    protected getEditDialogData( data ) {\r\n        if ( !data )\r\n            return null;\r\n        return {\r\n            id: data.id,\r\n            data: data,\r\n            applicationId: this.selectedApplication.id,\r\n            applicationName: this.selectedApplication.name\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 获取详情弹出框组件\r\n     */\r\n    getDetailDialogComponent() {\r\n        return ModuleDetailComponent;\r\n    }\r\n}","import { Component, Input, Injector } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { TreeTableQueryComponentBase } from '../../../util';\r\nimport { ModuleQuery } from './model/module-query';\r\nimport { ModuleViewModel } from './model/module-view-model';\r\n\r\n/**\r\n * 模块选择页\r\n */\r\n@Component( {\r\n    selector: 'module-select',\r\n    templateUrl: !env.dev() ? './html/select.component.html' : '/view/systems/module/select'\r\n} )\r\nexport class ModuleSelectComponent extends TreeTableQueryComponentBase<ModuleViewModel, ModuleQuery>  {\r\n    /**\r\n     * 应用程序标识\r\n     */\r\n    @Input() applicationId;\r\n\r\n    /**\r\n     * 初始化模块列表页\r\n     * @param injector 注入器\r\n     */\r\n    constructor( injector: Injector ) {\r\n        super( injector );\r\n    }\r\n\r\n    /**\r\n     * 创建查询参数\r\n     */\r\n    protected createQuery() {\r\n        let result = new ModuleQuery();\r\n        result.applicationId = this.applicationId;\r\n        return result;\r\n    }\r\n}","import { ViewModel } from '../../../../util';\r\n\r\n/**\r\n * 权限参数\r\n */\r\nexport class PermissionViewModel extends ViewModel {\r\n    /**\r\n     * 应用程序标识\r\n     */\r\n    applicationId;\r\n    /**\r\n     * 应用程序名称\r\n     */\r\n    applicationName;\r\n    /**\r\n     * 角色标识\r\n     */\r\n    roleId;\r\n    /**\r\n     * 角色名称\r\n     */\r\n    roleName;\r\n    /**\r\n     * 资源标识列表\r\n     */\r\n    resourceIds;\r\n    /**\r\n     * 拒绝\r\n     */\r\n    isDeny;\r\n}","import { TreeViewModel } from '../../../../util';\r\n\r\n/**\r\n * 角色参数\r\n */\r\nexport class RoleViewModel extends TreeViewModel {\r\n    /**\r\n     * 角色编码\r\n     */\r\n    code;\r\n    /**\r\n     * 角色名称\r\n     */\r\n    name;\r\n    /**\r\n     * 角色类型\r\n     */\r\n    type;\r\n    /**\r\n     * 管理员\r\n     */\r\n    isAdmin;\r\n    /**\r\n     * 备注\r\n     */\r\n    remark;\r\n    /**\r\n     * 拼音简码\r\n     */\r\n    pinYin;\r\n    /**\r\n     * 创建时间\r\n     */\r\n    creationTime;\r\n    /**\r\n     * 版本号\r\n     */\r\n    version;\r\n}","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { TreeTableQueryComponentBase } from '../../../util';\r\nimport { ModuleQuery } from '../module/model/module-query';\r\nimport { ModuleViewModel } from '../module/model/module-view-model';\r\nimport { PermissionViewModel } from './model/permission-view-model';\r\nimport { ApplicationViewModel } from \"../application/model/application-view-model\";\r\nimport { RoleViewModel } from \"../role/model/role-view-model\";\r\n\r\n/**\r\n * 权限设置\r\n */\r\n@Component( {\r\n    selector: 'permission',\r\n    templateUrl: !env.dev() ? './html/permission.component.html' : '/view/systems/role/permission'\r\n} )\r\nexport class PermissionComponent extends TreeTableQueryComponentBase<ModuleViewModel, ModuleQuery> implements OnInit {\r\n    /**\r\n     * 角色参数\r\n     */\r\n    @Input() role: RoleViewModel;\r\n    /**\r\n     * 权限参数\r\n     */\r\n    model: PermissionViewModel;\r\n\r\n    /**\r\n     * 初始化权限设置\r\n     * @param injector 注入器\r\n     */\r\n    constructor( injector: Injector ) {\r\n        super( injector );\r\n        this.model = new PermissionViewModel();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    ngOnInit() {\r\n        if ( !this.role )\r\n            return;\r\n        this.model.roleId = this.role.id;\r\n        this.model.roleName = this.role.name;\r\n        this.queryParam.roleId = this.role.id;\r\n    }\r\n\r\n    /**\r\n     * 创建查询参数\r\n     */\r\n    protected createQuery() {\r\n        let result = new ModuleQuery();\r\n        if ( this.model ) {\r\n            result.applicationId = this.model.applicationId;\r\n            result.roleId = this.model.roleId;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 选择应用程序\r\n     * @param application 应用程序\r\n     */\r\n    selectApplication( application: ApplicationViewModel ) {\r\n        this.model.applicationId = application.id;\r\n        this.model.applicationName = application.name;\r\n        this.queryParam.applicationId = application.id;\r\n        this.util.helper.clear( this.checkedIds );\r\n        this.query( null, () => this.loadPermissions() );\r\n    }\r\n\r\n    /**\r\n     * 加载权限\r\n     */\r\n    private loadPermissions() {\r\n        this.util.webapi.get<string[]>( `/api/permission/resourceIds` ).param( this.queryParam ).handle( {\r\n            ok: result => {\r\n                this.checkIds( result );\r\n            }\r\n        } );\r\n    }\r\n\r\n    /**\r\n     * 刷新完成后操作\r\n     */\r\n    protected refreshAfter = () => {\r\n        this.loadPermissions();\r\n    }\r\n\r\n    /**\r\n     * 保存\r\n     */\r\n    save() {\r\n        this.model.resourceIds = this.getCheckedIds();\r\n        this.util.form.submit( {\r\n            url: `/api/permission`,\r\n            data: this.model,\r\n            confirm: `确定保存吗?`\r\n        } );\r\n    }\r\n}","import { Component, Injector } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { DialogEditComponentBase } from '../../../util';\r\nimport { RoleViewModel } from './model/role-view-model';\r\n\r\n/**\r\n * 角色详情页\r\n */\r\n@Component({\r\n    selector: 'role-detail',\r\n    templateUrl: !env.dev() ? './html/detail.component.html' : '/view/systems/role/detail'\r\n})\r\nexport class RoleDetailComponent extends DialogEditComponentBase<RoleViewModel> {\r\n    /**\r\n     * 初始化角色详情页\r\n     * @param injector 注入器\r\n     */\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * 获取基地址\r\n     */\r\n    protected getBaseUrl() {\r\n        return \"role\";\r\n    }\r\n\r\n    /**\r\n     * 是否远程加载\r\n     */\r\n    isRequestLoad() {\r\n        return false;\r\n    }\r\n}","import { Component, Injector } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { DialogEditComponentBase } from '../../../util';\r\nimport { RoleViewModel } from './model/role-view-model';\r\n\r\n/**\r\n * 角色编辑页\r\n */\r\n@Component({\r\n    selector: 'role-edit',\r\n    templateUrl: !env.dev() ? './html/edit.component.html' : '/view/systems/role/edit'\r\n})\r\nexport class RoleEditComponent extends DialogEditComponentBase<RoleViewModel> {\r\n    /**\r\n     * 初始化角色编辑页\r\n     * @param injector 注入器\r\n     */\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * 获取基地址\r\n     */\r\n    protected getBaseUrl() {\r\n        return \"role\";\r\n    }\r\n\r\n    /**\r\n     * 创建模型\r\n     */\r\n    createModel() {\r\n        let result = new RoleViewModel();\r\n        result.enabled = true;\r\n        return result;\r\n    }\r\n}","import { Component, Injector } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { TableQueryComponentBase } from '../../../util';\r\nimport { RoleQuery } from './model/role-query';\r\nimport { RoleViewModel } from './model/role-view-model';\r\nimport { RoleEditComponent } from './role-edit.component';\r\nimport { RoleDetailComponent } from './role-detail.component';\r\nimport { RoleUserListComponent } from './role-user-list.component';\r\nimport { PermissionComponent } from './permission.component';\r\n\r\n/**\r\n * 角色列表页\r\n */\r\n@Component({\r\n    selector: 'role-list',\r\n    templateUrl: !env.dev() ? './html/index.component.html' : '/view/systems/role'\r\n})\r\nexport class RoleListComponent extends TableQueryComponentBase<RoleViewModel, RoleQuery>  {\r\n    /**\r\n     * 初始化角色列表页\r\n     * @param injector 注入器\r\n     */\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * 获取创建弹出框组件\r\n     */\r\n    getCreateDialogComponent() {\r\n        return RoleEditComponent;\r\n    }\r\n\r\n    /**\r\n     * 获取详情弹出框组件\r\n     */\r\n    getDetailDialogComponent() {\r\n        return RoleDetailComponent;\r\n    }\r\n\r\n    /**\r\n     * 打开用户设置弹出框\r\n     */\r\n    openUserDialog( role ) {\r\n        this.util.dialog.open( {\r\n            component: RoleUserListComponent,\r\n            data: { data: role },\r\n            showOk:false,\r\n            disableClose: true,\r\n            width: \"60%\"\r\n        } );\r\n    }\r\n\r\n    /**\r\n     * 打开权限设置弹出框\r\n     */\r\n    openPermissionDialog( role ) {\r\n        this.util.dialog.open( {\r\n            component: PermissionComponent,\r\n            data: { role: role },\r\n            disableClose: true,\r\n            width: \"80%\",\r\n            onOk: instance => {\r\n                instance.save();\r\n                return false;\r\n            },\r\n        } );\r\n    }\r\n}","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { TableQueryComponentBase } from '../../../util';\r\nimport { UserQuery } from '../user/model/user-query';\r\nimport { UserViewModel } from '../user/model/user-view-model';\r\nimport { SelectUserListComponent } from './select-user-list.component';\r\n\r\n/**\r\n * 已选用户列表页\r\n */\r\n@Component( {\r\n    selector: 'role-user-list',\r\n    templateUrl: !env.dev() ? './html/role-user-list.component.html' : '/view/systems/role/RoleUserList'\r\n} )\r\nexport class RoleUserListComponent extends TableQueryComponentBase<UserViewModel, UserQuery> implements OnInit {\r\n    /**\r\n     * 初始化已选用户列表页\r\n     * @param injector 注入器\r\n     */\r\n    constructor( injector: Injector ) {\r\n        super( injector );\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    ngOnInit() {\r\n        this.queryParam.roleId = this.getRoleId();\r\n    }\r\n\r\n    /**\r\n     * 获取角色标识\r\n     */\r\n    getRoleId() {\r\n        return this.data.id;\r\n    }\r\n\r\n    /**\r\n     * 创建查询参数\r\n     */\r\n    createQuery() {\r\n        let result = new UserQuery();\r\n        if ( this.data )\r\n            result.roleId = this.getRoleId();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 打开选择用户列表弹出框\r\n     */\r\n    openSelectDialog() {\r\n        this.util.dialog.open( {\r\n            component: SelectUserListComponent,\r\n            data: { data: this.data },\r\n            width: \"60%\",\r\n            disableClose: true,\r\n            onOk: instance => {\r\n                let userIds = instance.getCheckedIds();\r\n                this.select( userIds );\r\n                return false;\r\n            },\r\n            onClose: result => {\r\n                if ( result )\r\n                    this.query();\r\n            }\r\n        } );\r\n    }\r\n\r\n    /**\r\n     * 选中用户\r\n     */\r\n    select( userIds ) {\r\n        if ( !userIds ) {\r\n            this.util.message.warn( \"请选择用户\" );\r\n            return;\r\n        }\r\n        this.util.form.submit( {\r\n            url: \"/api/role/AddUsersToRole\",\r\n            data: { roleId: this.getRoleId(), userIds: userIds },\r\n            confirm: `确定将选中的用户添加到角色?`,\r\n            closeDialog: true\r\n        } );\r\n    }\r\n\r\n    /**\r\n     * 从角色移除用户\r\n     */\r\n    removeUsersFromRole( btn? ) {\r\n        let userIds = this.getCheckedIds();\r\n        if ( !userIds ) {\r\n            this.util.message.warn( \"请选择待移除的用户\" );\r\n            return;\r\n        }\r\n        this.util.form.submit( {\r\n            url: \"/api/role/RemoveUsersFromRole\",\r\n            data: { roleId: this.getRoleId(), userIds: userIds },\r\n            button: btn,\r\n            confirm: `确定从角色移除用户?`,\r\n            ok: () => {\r\n                this.query();\r\n            }\r\n        } );\r\n    }\r\n}","import { Component, Injector,OnInit } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { TableQueryComponentBase } from '../../../util';\r\nimport { UserQuery } from '../user/model/user-query';\r\nimport { UserViewModel } from '../user/model/user-view-model';\r\n\r\n/**\r\n * 选择用户列表页\r\n */\r\n@Component({\r\n    selector: 'select-user-list',\r\n    templateUrl: !env.dev() ? './html/select-user-list.component.html' : '/view/systems/role/SelectUserList'\r\n} )\r\nexport class SelectUserListComponent extends TableQueryComponentBase<UserViewModel, UserQuery> implements OnInit {\r\n    /**\r\n     * 初始化选择用户列表页\r\n     * @param injector 注入器\r\n     */\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    ngOnInit() {\r\n        this.queryParam.exceptRoleId = this.getRoleId();\r\n    }\r\n\r\n    /**\r\n     * 获取角色标识\r\n     */\r\n    getRoleId() {\r\n        return this.data.id;\r\n    }\r\n\r\n    /**\r\n     * 创建查询参数\r\n     */\r\n    createQuery() {\r\n        let result = new UserQuery();\r\n        if ( this.data )\r\n            result.exceptRoleId = this.getRoleId();\r\n        return result;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ApplicationListComponent } from './application/application-list.component';\r\nimport { UserListComponent } from './user/user-list.component';\r\nimport { RoleListComponent } from './role/role-list.component';\r\nimport { ModuleListComponent } from './module/module-list.component';\r\n\r\n//路由配置\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            { path: 'application', component: ApplicationListComponent },\r\n            { path: 'user', component: UserListComponent },\r\n            { path: 'role', component: RoleListComponent },\r\n            { path: 'module', component: ModuleListComponent }\r\n        ]\r\n    }\r\n];\r\n\r\n/**\r\n * 系统路由模块\r\n */\r\n@NgModule( {\r\n    imports: [RouterModule.forChild( routes )]\r\n} )\r\nexport class SystemRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { FrameworkModule } from '../framework.module';\r\nimport { SystemRoutingModule } from './system-routing.module';\r\nimport { ApplicationListComponent } from './application/application-list.component';\r\nimport { ApplicationEditComponent } from './application/application-edit.component';\r\nimport { ApplicationDetailComponent } from './application/application-detail.component';\r\nimport { ApplicationSelectComponent } from './application/application-select.component';\r\nimport { UserListComponent } from './user/user-list.component';\r\nimport { UserCreateComponent } from './user/user-create.component';\r\nimport { UserDetailComponent } from './user/user-detail.component';\r\nimport { RoleListComponent } from './role/role-list.component';\r\nimport { RoleEditComponent } from './role/role-edit.component';\r\nimport { RoleDetailComponent } from './role/role-detail.component';\r\nimport { RoleUserListComponent } from './role/role-user-list.component';\r\nimport { SelectUserListComponent } from './role/select-user-list.component';\r\nimport { PermissionComponent } from './role/permission.component';\r\nimport { ModuleListComponent } from './module/module-list.component';\r\nimport { ModuleEditComponent } from './module/module-edit.component';\r\nimport { ModuleDetailComponent } from './module/module-detail.component';\r\nimport { ModuleSelectComponent } from './module/module-select.component';\r\n\r\n/**\r\n * 系统模块\r\n */\r\n@NgModule( {\r\n    declarations: [\r\n        ApplicationListComponent, ApplicationEditComponent, ApplicationDetailComponent, ApplicationSelectComponent,\r\n        UserListComponent, UserCreateComponent, UserDetailComponent,\r\n        RoleListComponent, RoleEditComponent, RoleDetailComponent, RoleUserListComponent,\r\n        SelectUserListComponent, PermissionComponent,\r\n        ModuleListComponent, ModuleEditComponent, ModuleDetailComponent, ModuleSelectComponent\r\n    ],\r\n    imports: [\r\n        FrameworkModule, SystemRoutingModule\r\n    ],\r\n    entryComponents: [\r\n        ApplicationEditComponent, ApplicationDetailComponent,\r\n        UserCreateComponent, UserDetailComponent,\r\n        RoleEditComponent, RoleDetailComponent, RoleUserListComponent,\r\n        SelectUserListComponent, PermissionComponent,\r\n        ModuleEditComponent, ModuleDetailComponent, ModuleSelectComponent\r\n    ]\r\n} )\r\nexport class SystemModule {\r\n}","import { QueryParameter } from '../../../../util';\r\n\r\n/**\r\n * 用户查询参数\r\n */\r\nexport class UserQuery extends QueryParameter {\r\n    /**\r\n     * 用户标识\r\n     */\r\n    userId;\r\n    /**\r\n    * 角色编号\r\n    */\r\n    roleId;\r\n    /**\r\n     * 排除的角色标识\r\n     */\r\n    exceptRoleId;\r\n    /**\r\n     * 用户名\r\n     */\r\n    userName;\r\n    /**\r\n     * 安全邮箱\r\n     */\r\n    email;\r\n    /**\r\n     * 邮箱已确认\r\n     */\r\n    emailConfirmed;\r\n    /**\r\n     * 安全手机\r\n     */\r\n    phoneNumber;\r\n    /**\r\n     * 手机已确认\r\n     */\r\n    phoneNumberConfirmed;\r\n    /**\r\n     * 启用\r\n     */\r\n    enabled;\r\n    /**\r\n     * 起始冻结时间\r\n     */\r\n    beginDisabledTime;\r\n    /**\r\n     * 结束冻结时间\r\n     */\r\n    endDisabledTime;\r\n    /**\r\n     * 备注\r\n     */\r\n    remark;\r\n    /**\r\n     * 起始创建时间\r\n     */\r\n    beginCreationTime;\r\n    /**\r\n     * 结束创建时间\r\n     */\r\n    endCreationTime;\r\n}","import { Component, Injector } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { DialogEditComponentBase } from '../../../util';\r\nimport { CreateUserViewModel } from './model/create-user-view-model';\r\n\r\n/**\r\n * 用户创建页\r\n */\r\n@Component({\r\n    selector: 'user-edit',\r\n    templateUrl: !env.dev() ? './html/create.component.html' : '/view/systems/user/create'\r\n})\r\nexport class UserCreateComponent extends DialogEditComponentBase<CreateUserViewModel> {\r\n    /**\r\n     * 初始化用户创建页\r\n     * @param injector 注入器\r\n     */\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * 获取基地址\r\n     */\r\n    protected getBaseUrl() {\r\n        return \"user\";\r\n    }\r\n}","import { Component, Injector } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { DialogEditComponentBase } from '../../../util';\r\nimport { UserViewModel } from './model/user-view-model';\r\n\r\n/**\r\n * 用户详情页\r\n */\r\n@Component({\r\n    selector: 'user-detail',\r\n    templateUrl: !env.dev() ? './html/detail.component.html' : '/view/systems/user/detail'\r\n})\r\nexport class UserDetailComponent extends DialogEditComponentBase<UserViewModel> {\r\n    /**\r\n     * 初始化用户详情页\r\n     * @param injector 注入器\r\n     */\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * 获取基地址\r\n     */\r\n    protected getBaseUrl() {\r\n        return \"user\";\r\n    }\r\n\r\n    /**\r\n     * 是否远程加载\r\n     */\r\n    isRequestLoad() {\r\n        return false;\r\n    }\r\n}","import { Component, Injector } from '@angular/core';\r\nimport { env } from '../../env';\r\nimport { TableQueryComponentBase } from '../../../util';\r\nimport { UserQuery } from './model/user-query';\r\nimport { UserViewModel } from './model/user-view-model';\r\nimport { UserCreateComponent } from './user-create.component';\r\nimport { UserDetailComponent } from './user-detail.component';\r\n\r\n/**\r\n * 用户列表页\r\n */\r\n@Component({\r\n    selector: 'user-list',\r\n    templateUrl: !env.dev() ? './html/index.component.html' : '/view/systems/user'\r\n})\r\nexport class UserListComponent extends TableQueryComponentBase<UserViewModel, UserQuery>  {\r\n    /**\r\n     * 初始化用户列表页\r\n     * @param injector 注入器\r\n     */\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * 获取创建弹出框组件\r\n     */\r\n    getCreateDialogComponent() {\r\n        return UserCreateComponent;\r\n    }\r\n\r\n    /**\r\n     * 获取详情弹出框组件\r\n     */\r\n    getDetailDialogComponent() {\r\n        return UserDetailComponent;\r\n    }\r\n\r\n    /**\r\n     * 获取创建弹出层宽度\r\n     */\r\n    getCreateDialogWidth() {\r\n        return \"30%\";\r\n    }\r\n}"],"sourceRoot":""}