"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Venn = exports.Path = exports.JitterPoint = exports.ErrorBar = exports.Sankey = exports.Edge = exports.Heatmap = exports.Contour = exports.Polygon = exports.Candle = exports.Box = exports.Schema = exports.Pyramid = exports.Funnel = exports.Point = exports.DodgeInterval = exports.StackInterval = exports.Interval = exports.DodgeBar = exports.StackBar = exports.Bar = exports.SmoothArea = exports.StackArea = exports.Area = exports.DashLine = exports.SmoothLine = exports.Line = exports.Sector = exports.Pie = exports.Series = void 0;

var _core = require("@angular/core");

var _Chart = require("../Chart");

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var __extends = void 0 && (void 0).__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __metadata = void 0 && (void 0).__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var Series = function (_super) {
  __extends(Series, _super);

  function Series() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Series.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Series.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Series.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Series.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Series.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Series.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Series.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Series.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Series.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Series.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Series.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Series.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Series.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Series.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onTouchEnd");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onLabelMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onLabelMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onLabelMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onLabelMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onLabelClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onLabelDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onLabelTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onLabelTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Series.prototype, "onLabelTouchEnd");

  Series = __decorate([(0, _core.Component)({
    selector: 'v-series',
    template: "<div #chartDom></div>"
  })], Series);
  return Series;
}(_Chart.Chart);

exports.Series = Series;

var Pie = function (_super) {
  __extends(Pie, _super);

  function Pie() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Pie.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pie.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Pie.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pie.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pie.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pie.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pie.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pie.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pie.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pie.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pie.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pie.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pie.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pie.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pie.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pie.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pie.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pie.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pie.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pie.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pie.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pie.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pie.prototype, "onTouchEnd");

  Pie = __decorate([(0, _core.Component)({
    selector: 'v-pie',
    template: "<div #chartDom></div>"
  })], Pie);
  return Pie;
}(_Chart.Chart);

exports.Pie = Pie;

var Sector = function (_super) {
  __extends(Sector, _super);

  function Sector() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Sector.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sector.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Sector.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sector.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sector.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sector.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sector.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sector.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sector.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sector.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sector.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sector.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sector.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sector.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sector.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sector.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sector.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sector.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sector.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sector.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sector.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sector.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sector.prototype, "onTouchEnd");

  Sector = __decorate([(0, _core.Component)({
    selector: 'v-sector',
    template: "<div #chartDom></div>"
  })], Sector);
  return Sector;
}(_Chart.Chart);

exports.Sector = Sector;

var Line = function (_super) {
  __extends(Line, _super);

  function Line() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Line.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Line.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Line.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Line.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Line.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Line.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Line.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Line.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Line.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Line.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Line.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Line.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Line.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Line.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Line.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Line.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Line.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Line.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Line.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Line.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Line.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Line.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Line.prototype, "onTouchEnd");

  Line = __decorate([(0, _core.Component)({
    selector: 'v-line',
    template: "<div #chartDom></div>"
  })], Line);
  return Line;
}(_Chart.Chart);

exports.Line = Line;

var SmoothLine = function (_super) {
  __extends(SmoothLine, _super);

  function SmoothLine() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], SmoothLine.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothLine.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], SmoothLine.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothLine.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothLine.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothLine.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothLine.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothLine.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothLine.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothLine.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothLine.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothLine.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothLine.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothLine.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothLine.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothLine.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothLine.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothLine.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothLine.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothLine.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothLine.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothLine.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothLine.prototype, "onTouchEnd");

  SmoothLine = __decorate([(0, _core.Component)({
    selector: 'v-smooth-line',
    template: "<div #chartDom></div>"
  })], SmoothLine);
  return SmoothLine;
}(_Chart.Chart);

exports.SmoothLine = SmoothLine;

var DashLine = function (_super) {
  __extends(DashLine, _super);

  function DashLine() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], DashLine.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DashLine.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], DashLine.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DashLine.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DashLine.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DashLine.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DashLine.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DashLine.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DashLine.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DashLine.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DashLine.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DashLine.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DashLine.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DashLine.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DashLine.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DashLine.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DashLine.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DashLine.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DashLine.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DashLine.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DashLine.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DashLine.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DashLine.prototype, "onTouchEnd");

  DashLine = __decorate([(0, _core.Component)({
    selector: 'v-dash-line',
    template: "<div #chartDom></div>"
  })], DashLine);
  return DashLine;
}(_Chart.Chart);

exports.DashLine = DashLine;

var Area = function (_super) {
  __extends(Area, _super);

  function Area() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Area.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Area.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Area.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Area.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Area.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Area.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Area.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Area.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Area.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Area.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Area.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Area.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Area.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Area.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Area.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Area.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Area.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Area.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Area.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Area.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Area.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Area.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Area.prototype, "onTouchEnd");

  Area = __decorate([(0, _core.Component)({
    selector: 'v-area',
    template: "<div #chartDom></div>"
  })], Area);
  return Area;
}(_Chart.Chart);

exports.Area = Area;

var StackArea = function (_super) {
  __extends(StackArea, _super);

  function StackArea() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], StackArea.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackArea.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], StackArea.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackArea.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackArea.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackArea.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackArea.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackArea.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackArea.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackArea.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackArea.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackArea.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackArea.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackArea.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackArea.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackArea.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackArea.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackArea.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackArea.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackArea.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackArea.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackArea.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackArea.prototype, "onTouchEnd");

  StackArea = __decorate([(0, _core.Component)({
    selector: 'v-stack-area',
    template: "<div #chartDom></div>"
  })], StackArea);
  return StackArea;
}(_Chart.Chart);

exports.StackArea = StackArea;

var SmoothArea = function (_super) {
  __extends(SmoothArea, _super);

  function SmoothArea() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], SmoothArea.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothArea.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], SmoothArea.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothArea.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothArea.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothArea.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothArea.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothArea.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothArea.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothArea.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothArea.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothArea.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothArea.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], SmoothArea.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothArea.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothArea.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothArea.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothArea.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothArea.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothArea.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothArea.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothArea.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], SmoothArea.prototype, "onTouchEnd");

  SmoothArea = __decorate([(0, _core.Component)({
    selector: 'v-smooth-area',
    template: "<div #chartDom></div>"
  })], SmoothArea);
  return SmoothArea;
}(_Chart.Chart);

exports.SmoothArea = SmoothArea;

var Bar = function (_super) {
  __extends(Bar, _super);

  function Bar() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Bar.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Bar.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Bar.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Bar.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Bar.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Bar.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Bar.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Bar.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Bar.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Bar.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Bar.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Bar.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Bar.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Bar.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Bar.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Bar.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Bar.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Bar.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Bar.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Bar.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Bar.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Bar.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Bar.prototype, "onTouchEnd");

  Bar = __decorate([(0, _core.Component)({
    selector: 'v-bar',
    template: "<div #chartDom></div>"
  })], Bar);
  return Bar;
}(_Chart.Chart);

exports.Bar = Bar;

var StackBar = function (_super) {
  __extends(StackBar, _super);

  function StackBar() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], StackBar.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackBar.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], StackBar.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackBar.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackBar.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackBar.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackBar.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackBar.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackBar.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackBar.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackBar.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackBar.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackBar.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackBar.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackBar.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackBar.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackBar.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackBar.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackBar.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackBar.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackBar.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackBar.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackBar.prototype, "onTouchEnd");

  StackBar = __decorate([(0, _core.Component)({
    selector: 'v-stack-bar',
    template: "<div #chartDom></div>"
  })], StackBar);
  return StackBar;
}(_Chart.Chart);

exports.StackBar = StackBar;

var DodgeBar = function (_super) {
  __extends(DodgeBar, _super);

  function DodgeBar() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], DodgeBar.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeBar.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], DodgeBar.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeBar.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeBar.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeBar.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeBar.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeBar.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeBar.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeBar.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeBar.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeBar.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeBar.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeBar.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeBar.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeBar.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeBar.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeBar.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeBar.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeBar.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeBar.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeBar.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeBar.prototype, "onTouchEnd");

  DodgeBar = __decorate([(0, _core.Component)({
    selector: 'v-dodge-bar',
    template: "<div #chartDom></div>"
  })], DodgeBar);
  return DodgeBar;
}(_Chart.Chart);

exports.DodgeBar = DodgeBar;

var Interval = function (_super) {
  __extends(Interval, _super);

  function Interval() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Interval.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Interval.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Interval.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Interval.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Interval.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Interval.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Interval.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Interval.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Interval.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Interval.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Interval.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Interval.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Interval.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Interval.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Interval.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Interval.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Interval.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Interval.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Interval.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Interval.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Interval.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Interval.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Interval.prototype, "onTouchEnd");

  Interval = __decorate([(0, _core.Component)({
    selector: 'v-interval',
    template: "<div #chartDom></div>"
  })], Interval);
  return Interval;
}(_Chart.Chart);

exports.Interval = Interval;

var StackInterval = function (_super) {
  __extends(StackInterval, _super);

  function StackInterval() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], StackInterval.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackInterval.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], StackInterval.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackInterval.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackInterval.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackInterval.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackInterval.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackInterval.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackInterval.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackInterval.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackInterval.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackInterval.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackInterval.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], StackInterval.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackInterval.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackInterval.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackInterval.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackInterval.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackInterval.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackInterval.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackInterval.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackInterval.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], StackInterval.prototype, "onTouchEnd");

  StackInterval = __decorate([(0, _core.Component)({
    selector: 'v-stack-interval',
    template: "<div #chartDom></div>"
  })], StackInterval);
  return StackInterval;
}(_Chart.Chart);

exports.StackInterval = StackInterval;

var DodgeInterval = function (_super) {
  __extends(DodgeInterval, _super);

  function DodgeInterval() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], DodgeInterval.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeInterval.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], DodgeInterval.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeInterval.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeInterval.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeInterval.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeInterval.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeInterval.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeInterval.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeInterval.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeInterval.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeInterval.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeInterval.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], DodgeInterval.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeInterval.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeInterval.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeInterval.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeInterval.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeInterval.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeInterval.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeInterval.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeInterval.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], DodgeInterval.prototype, "onTouchEnd");

  DodgeInterval = __decorate([(0, _core.Component)({
    selector: 'v-dodge-interval',
    template: "<div #chartDom></div>"
  })], DodgeInterval);
  return DodgeInterval;
}(_Chart.Chart);

exports.DodgeInterval = DodgeInterval;

var Point = function (_super) {
  __extends(Point, _super);

  function Point() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Point.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Point.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Point.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Point.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Point.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Point.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Point.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Point.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Point.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Point.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Point.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Point.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Point.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Point.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Point.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Point.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Point.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Point.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Point.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Point.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Point.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Point.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Point.prototype, "onTouchEnd");

  Point = __decorate([(0, _core.Component)({
    selector: 'v-point',
    template: "<div #chartDom></div>"
  })], Point);
  return Point;
}(_Chart.Chart);

exports.Point = Point;

var Funnel = function (_super) {
  __extends(Funnel, _super);

  function Funnel() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Funnel.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Funnel.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Funnel.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Funnel.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Funnel.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Funnel.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Funnel.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Funnel.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Funnel.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Funnel.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Funnel.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Funnel.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Funnel.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Funnel.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Funnel.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Funnel.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Funnel.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Funnel.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Funnel.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Funnel.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Funnel.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Funnel.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Funnel.prototype, "onTouchEnd");

  Funnel = __decorate([(0, _core.Component)({
    selector: 'v-funnel',
    template: "<div #chartDom></div>"
  })], Funnel);
  return Funnel;
}(_Chart.Chart);

exports.Funnel = Funnel;

var Pyramid = function (_super) {
  __extends(Pyramid, _super);

  function Pyramid() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Pyramid.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pyramid.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Pyramid.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pyramid.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pyramid.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pyramid.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pyramid.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pyramid.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pyramid.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pyramid.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pyramid.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pyramid.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pyramid.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Pyramid.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pyramid.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pyramid.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pyramid.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pyramid.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pyramid.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pyramid.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pyramid.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pyramid.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Pyramid.prototype, "onTouchEnd");

  Pyramid = __decorate([(0, _core.Component)({
    selector: 'v-pyramid',
    template: "<div #chartDom></div>"
  })], Pyramid);
  return Pyramid;
}(_Chart.Chart);

exports.Pyramid = Pyramid;

var Schema = function (_super) {
  __extends(Schema, _super);

  function Schema() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Schema.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Schema.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Schema.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Schema.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Schema.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Schema.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Schema.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Schema.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Schema.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Schema.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Schema.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Schema.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Schema.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Schema.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Schema.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Schema.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Schema.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Schema.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Schema.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Schema.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Schema.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Schema.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Schema.prototype, "onTouchEnd");

  Schema = __decorate([(0, _core.Component)({
    selector: 'v-schema',
    template: "<div #chartDom></div>"
  })], Schema);
  return Schema;
}(_Chart.Chart);

exports.Schema = Schema;

var Box = function (_super) {
  __extends(Box, _super);

  function Box() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Box.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Box.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Box.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Box.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Box.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Box.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Box.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Box.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Box.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Box.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Box.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Box.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Box.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Box.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Box.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Box.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Box.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Box.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Box.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Box.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Box.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Box.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Box.prototype, "onTouchEnd");

  Box = __decorate([(0, _core.Component)({
    selector: 'v-box',
    template: "<div #chartDom></div>"
  })], Box);
  return Box;
}(_Chart.Chart);

exports.Box = Box;

var Candle = function (_super) {
  __extends(Candle, _super);

  function Candle() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Candle.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Candle.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Candle.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Candle.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Candle.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Candle.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Candle.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Candle.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Candle.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Candle.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Candle.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Candle.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Candle.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Candle.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Candle.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Candle.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Candle.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Candle.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Candle.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Candle.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Candle.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Candle.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Candle.prototype, "onTouchEnd");

  Candle = __decorate([(0, _core.Component)({
    selector: 'v-candle',
    template: "<div #chartDom></div>"
  })], Candle);
  return Candle;
}(_Chart.Chart);

exports.Candle = Candle;

var Polygon = function (_super) {
  __extends(Polygon, _super);

  function Polygon() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Polygon.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Polygon.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Polygon.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Polygon.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Polygon.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Polygon.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Polygon.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Polygon.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Polygon.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Polygon.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Polygon.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Polygon.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Polygon.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Polygon.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Polygon.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Polygon.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Polygon.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Polygon.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Polygon.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Polygon.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Polygon.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Polygon.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Polygon.prototype, "onTouchEnd");

  Polygon = __decorate([(0, _core.Component)({
    selector: 'v-polygon',
    template: "<div #chartDom></div>"
  })], Polygon);
  return Polygon;
}(_Chart.Chart);

exports.Polygon = Polygon;

var Contour = function (_super) {
  __extends(Contour, _super);

  function Contour() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Contour.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Contour.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Contour.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Contour.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Contour.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Contour.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Contour.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Contour.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Contour.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Contour.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Contour.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Contour.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Contour.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Contour.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Contour.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Contour.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Contour.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Contour.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Contour.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Contour.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Contour.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Contour.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Contour.prototype, "onTouchEnd");

  Contour = __decorate([(0, _core.Component)({
    selector: 'v-contour',
    template: "<div #chartDom></div>"
  })], Contour);
  return Contour;
}(_Chart.Chart);

exports.Contour = Contour;

var Heatmap = function (_super) {
  __extends(Heatmap, _super);

  function Heatmap() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Heatmap.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Heatmap.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Heatmap.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Heatmap.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Heatmap.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Heatmap.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Heatmap.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Heatmap.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Heatmap.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Heatmap.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Heatmap.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Heatmap.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Heatmap.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Heatmap.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Heatmap.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Heatmap.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Heatmap.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Heatmap.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Heatmap.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Heatmap.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Heatmap.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Heatmap.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Heatmap.prototype, "onTouchEnd");

  Heatmap = __decorate([(0, _core.Component)({
    selector: 'v-heatmap',
    template: "<div #chartDom></div>"
  })], Heatmap);
  return Heatmap;
}(_Chart.Chart);

exports.Heatmap = Heatmap;

var Edge = function (_super) {
  __extends(Edge, _super);

  function Edge() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Edge.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Edge.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Edge.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Edge.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Edge.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Edge.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Edge.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Edge.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Edge.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Edge.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Edge.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Edge.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Edge.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Edge.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Edge.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Edge.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Edge.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Edge.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Edge.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Edge.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Edge.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Edge.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Edge.prototype, "onTouchEnd");

  Edge = __decorate([(0, _core.Component)({
    selector: 'v-edge',
    template: "<div #chartDom></div>"
  })], Edge);
  return Edge;
}(_Chart.Chart);

exports.Edge = Edge;

var Sankey = function (_super) {
  __extends(Sankey, _super);

  function Sankey() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Sankey.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sankey.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Sankey.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sankey.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sankey.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sankey.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sankey.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sankey.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sankey.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sankey.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sankey.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sankey.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sankey.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Sankey.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sankey.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sankey.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sankey.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sankey.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sankey.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sankey.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sankey.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sankey.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Sankey.prototype, "onTouchEnd");

  Sankey = __decorate([(0, _core.Component)({
    selector: 'v-sankey',
    template: "<div #chartDom></div>"
  })], Sankey);
  return Sankey;
}(_Chart.Chart);

exports.Sankey = Sankey;

var ErrorBar = function (_super) {
  __extends(ErrorBar, _super);

  function ErrorBar() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], ErrorBar.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], ErrorBar.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], ErrorBar.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], ErrorBar.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], ErrorBar.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], ErrorBar.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], ErrorBar.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], ErrorBar.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], ErrorBar.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], ErrorBar.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], ErrorBar.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], ErrorBar.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], ErrorBar.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], ErrorBar.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], ErrorBar.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], ErrorBar.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], ErrorBar.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], ErrorBar.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], ErrorBar.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], ErrorBar.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], ErrorBar.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], ErrorBar.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], ErrorBar.prototype, "onTouchEnd");

  ErrorBar = __decorate([(0, _core.Component)({
    selector: 'v-error-bar',
    template: "<div #chartDom></div>"
  })], ErrorBar);
  return ErrorBar;
}(_Chart.Chart);

exports.ErrorBar = ErrorBar;

var JitterPoint = function (_super) {
  __extends(JitterPoint, _super);

  function JitterPoint() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], JitterPoint.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], JitterPoint.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], JitterPoint.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], JitterPoint.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], JitterPoint.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], JitterPoint.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], JitterPoint.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], JitterPoint.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], JitterPoint.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], JitterPoint.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], JitterPoint.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], JitterPoint.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], JitterPoint.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], JitterPoint.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], JitterPoint.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], JitterPoint.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], JitterPoint.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], JitterPoint.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], JitterPoint.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], JitterPoint.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], JitterPoint.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], JitterPoint.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], JitterPoint.prototype, "onTouchEnd");

  JitterPoint = __decorate([(0, _core.Component)({
    selector: 'v-jitter-point',
    template: "<div #chartDom></div>"
  })], JitterPoint);
  return JitterPoint;
}(_Chart.Chart);

exports.JitterPoint = JitterPoint;

var Path = function (_super) {
  __extends(Path, _super);

  function Path() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Path.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Path.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Path.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Path.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Path.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Path.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Path.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Path.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Path.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Path.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Path.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Path.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Path.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Path.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Path.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Path.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Path.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Path.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Path.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Path.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Path.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Path.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Path.prototype, "onTouchEnd");

  Path = __decorate([(0, _core.Component)({
    selector: 'v-path',
    template: "<div #chartDom></div>"
  })], Path);
  return Path;
}(_Chart.Chart);

exports.Path = Path;

var Venn = function (_super) {
  __extends(Venn, _super);

  function Venn() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Venn.prototype, "quickType");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Venn.prototype, "position");

  __decorate([(0, _core.Input)(), __metadata("design:type", String)], Venn.prototype, "gemo");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Venn.prototype, "adjust");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Venn.prototype, "color");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Venn.prototype, "shape");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Venn.prototype, "size");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Venn.prototype, "opacity");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Venn.prototype, "label");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Venn.prototype, "tooltip");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Venn.prototype, "style");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Venn.prototype, "select");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Venn.prototype, "active");

  __decorate([(0, _core.Input)(), __metadata("design:type", Object)], Venn.prototype, "animate");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Venn.prototype, "onMouseDown");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Venn.prototype, "onMouseMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Venn.prototype, "onMouseLeave");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Venn.prototype, "onMouseUp");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Venn.prototype, "onClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Venn.prototype, "onDblClick");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Venn.prototype, "onTouchStart");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Venn.prototype, "onTouchMove");

  __decorate([(0, _core.Input)(), __metadata("design:type", Function)], Venn.prototype, "onTouchEnd");

  Venn = __decorate([(0, _core.Component)({
    selector: 'v-venn',
    template: "<div #chartDom></div>"
  })], Venn);
  return Venn;
}(_Chart.Chart);

exports.Venn = Venn;