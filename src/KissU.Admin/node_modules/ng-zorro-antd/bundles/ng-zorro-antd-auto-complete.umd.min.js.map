{"version":3,"sources":["ng://ng-zorro-antd/auto-complete/nz-autocomplete-optgroup.component.ts","node_modules/tslib/tslib.es6.js","ng://ng-zorro-antd/auto-complete/nz-autocomplete-option.component.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete-trigger.directive.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete.component.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete.module.ts"],"names":["Component","args","selector","exportAs","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","template","host","role","class","Input","NzAutocompleteOptgroupComponent","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","NzOptionSelectionChange","source","isUserInput","this","NzAutocompleteOptionComponent","prototype","select","selected","changeDetectorRef","markForCheck","emitSelectionChangeEvent","deselect","getLabel","nzLabel","nzValue","toString","setActiveStyles","active","setInactiveStyles","scrollIntoViewIfNeeded","scrollIntoView","element","nativeElement","selectViaInteraction","nzDisabled","selectionChange","emit","[class.ant-select-dropdown-menu-item-selected]","[class.ant-select-dropdown-menu-item-active]","[class.ant-select-dropdown-menu-item-disabled]","[attr.aria-selected]","[attr.aria-disabled]","(click)","(mousedown)","ChangeDetectorRef","ElementRef","Output","tslib_1.__decorate","InputBoolean","EventEmitter","NZ_AUTOCOMPLETE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NzAutocompleteTriggerDirective","multi","getNzAutocompleteMissingPanelError","Error","nzAutocomplete","options","activeItem","ngOnDestroy","destroyPanel","writeValue","setTriggerValue","registerOnChange","fn","_onChange","registerOnTouched","_onTouched","setDisabledState","isDisabled","elementRef","disabled","closePanel","openPanel","previousValue","attachOverlay","panelOpen","isOpen","overlayRef","hasAttached","selectionChangeSubscription","unsubscribe","overlayBackdropClickSubscription","overlayPositionChangeSubscription","optionsChangeSubscription","detach","portal","handleKeydown","event","keyCode","isArrowKey","UP_ARROW","DOWN_ARROW","ESCAPE","preventDefault","TAB","ENTER","showPanel","activeOption","stopPropagation","setPreviousItemActive","setNextItemActive","doBackfill","handleInput","canOpen","document","activeElement","type","parseFloat","handleFocus","handleBlur","subscribeOptionsChange","_this","changes","pipe","delay","subscribe","resetActiveItem","subscribeSelectionChange","option","setValueAndClose","subscribeOverlayBackdropClick","merge","fromEvent","clickTarget","overlayElement","contains","subscribeOverlayPositionChange","positionStrategy","positionChanges","map","position","connectionPair","originY","distinct","dropDownPosition","TemplatePortal","viewContainerRef","_overlay","create","getOverlayConfig","attach","setVisibility","updateSize","width","nzWidth","getHostWidth","setTimeout","updatePosition","OverlayConfig","getOverlayPosition","scrollStrategy","scrollStrategies","reposition","getConnectedElement","getBoundingClientRect","positions","ConnectionPositionPair","originX","overlayX","overlayY","flexibleConnectedTo","withPositions","withFlexibleDimensions","withPush","index","getOptionIndex","setActiveItem","nzDefaultActiveFirstOption","focus","nzBackfill","readOnly","Directive","providers","autocomplete","aria-autocomplete","(focusin)","(blur)","(input)","(keydown)","Overlay","ViewContainerRef","Optional","Inject","DOCUMENT","NzAutocompleteComponent","nzDataSource","fromDataSourceOptions","fromContentOptions","ngAfterViewInit","optionsInit","dataSourceChangeSubscription","toArray","activeItemIndex","clearSelectedOptions","nextIndex","previousIndex","reduce","result","current","subscribeOptionChanges","dirty","skip","forEach","optionSelectionChanges","filter","animations","slideMotion","NgZone","NzNoAnimationDirective","Host","ContentChildren","descendants","ViewChildren","ViewChild","TemplateRef","ngZone","noAnimation","nzOverlayClassName","nzOverlayStyle","Subscription","EMPTY","defer","apply","__spread","concat","onStable","asObservable","take","switchMap","NgModule","declarations","exports","imports","CommonModule","OverlayModule","FormsModule","NzAddOnModule","NzNoAnimationModule","NzAutocompleteModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-auto-optgroup',\n  exportAs: 'nzAutoOptgroup',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './nz-autocomplete-optgroup.component.html',\n  host: {\n    role: 'group',\n    class: 'ant-select-dropdown-menu-item-group'\n  }\n})\nexport class NzAutocompleteOptgroupComponent {\n  @Input() nzLabel: string | TemplateRef<void>;\n\n  constructor() {}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { scrollIntoView, InputBoolean } from 'ng-zorro-antd/core';\n\nexport class NzOptionSelectionChange {\n  constructor(public source: NzAutocompleteOptionComponent, public isUserInput: boolean = false) {}\n}\n\n@Component({\n  selector: 'nz-auto-option',\n  exportAs: 'nzAutoOption',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './nz-autocomplete-option.component.html',\n  host: {\n    role: 'menuitem',\n    class: 'ant-select-dropdown-menu-item',\n    '[class.ant-select-dropdown-menu-item-selected]': 'selected',\n    '[class.ant-select-dropdown-menu-item-active]': 'active',\n    '[class.ant-select-dropdown-menu-item-disabled]': 'nzDisabled',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'nzDisabled.toString()',\n    '(click)': 'selectViaInteraction()',\n    '(mousedown)': '$event.preventDefault()'\n  }\n})\nexport class NzAutocompleteOptionComponent {\n  /* tslint:disable-next-line:no-any */\n  @Input() nzValue: any;\n  @Input() nzLabel: string;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Output() readonly selectionChange = new EventEmitter<NzOptionSelectionChange>();\n\n  active = false;\n  selected = false;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef, private element: ElementRef) {}\n\n  select(): void {\n    this.selected = true;\n    this.changeDetectorRef.markForCheck();\n    this.emitSelectionChangeEvent();\n  }\n\n  deselect(): void {\n    this.selected = false;\n    this.changeDetectorRef.markForCheck();\n    this.emitSelectionChangeEvent();\n  }\n\n  /** Git display label */\n  getLabel(): string {\n    return this.nzLabel || this.nzValue.toString();\n  }\n\n  /** Set active (only styles) */\n  setActiveStyles(): void {\n    if (!this.active) {\n      this.active = true;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Unset active (only styles) */\n  setInactiveStyles(): void {\n    if (this.active) {\n      this.active = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  scrollIntoViewIfNeeded(): void {\n    scrollIntoView(this.element.nativeElement);\n  }\n\n  selectViaInteraction(): void {\n    if (!this.nzDisabled) {\n      this.selected = !this.selected;\n      if (this.selected) {\n        this.setActiveStyles();\n      } else {\n        this.setInactiveStyles();\n      }\n      this.emitSelectionChangeEvent(true);\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  private emitSelectionChangeEvent(isUserInput: boolean = false): void {\n    this.selectionChange.emit(new NzOptionSelectionChange(this, isUserInput));\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n  ConnectedOverlayPositionChange,\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  VerticalConnectionPos\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  forwardRef,\n  Directive,\n  ElementRef,\n  ExistingProvider,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  ViewContainerRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { fromEvent, merge, Subscription } from 'rxjs';\nimport { delay, distinct, map } from 'rxjs/operators';\n\nimport { NzAutocompleteOptionComponent } from './nz-autocomplete-option.component';\nimport { NzAutocompleteComponent } from './nz-autocomplete.component';\n\nexport const NZ_AUTOCOMPLETE_VALUE_ACCESSOR: ExistingProvider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NzAutocompleteTriggerDirective),\n  multi: true\n};\n\nexport function getNzAutocompleteMissingPanelError(): Error {\n  return Error(\n    'Attempting to open an undefined instance of `nz-autocomplete`. ' +\n      'Make sure that the id passed to the `nzAutocomplete` is correct and that ' +\n      \"you're attempting to open it after the ngAfterContentInit hook.\"\n  );\n}\n\n@Directive({\n  selector: `input[nzAutocomplete], textarea[nzAutocomplete]`,\n  exportAs: 'nzAutocompleteTrigger',\n  providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR],\n  host: {\n    autocomplete: 'off',\n    'aria-autocomplete': 'list',\n    '(focusin)': 'handleFocus()',\n    '(blur)': 'handleBlur()',\n    '(input)': 'handleInput($event)',\n    '(keydown)': 'handleKeydown($event)'\n  }\n})\nexport class NzAutocompleteTriggerDirective implements ControlValueAccessor, OnDestroy {\n  /** Bind nzAutocomplete component */\n  @Input() nzAutocomplete: NzAutocompleteComponent;\n\n  // tslint:disable-next-line:no-any\n  _onChange: (value: any) => void = () => {};\n  _onTouched = () => {};\n  panelOpen: boolean = false;\n\n  /** Current active option */\n  get activeOption(): NzAutocompleteOptionComponent | undefined {\n    if (this.nzAutocomplete && this.nzAutocomplete.options.length) {\n      return this.nzAutocomplete.activeItem;\n    }\n  }\n\n  private overlayRef: OverlayRef | null;\n  private portal: TemplatePortal<{}> | null;\n  private positionStrategy: FlexibleConnectedPositionStrategy;\n  private previousValue: string | number | null;\n  private selectionChangeSubscription: Subscription;\n  private optionsChangeSubscription: Subscription;\n  private overlayBackdropClickSubscription: Subscription;\n  private overlayPositionChangeSubscription: Subscription;\n\n  constructor(\n    private elementRef: ElementRef,\n    private _overlay: Overlay,\n    private viewContainerRef: ViewContainerRef,\n    // tslint:disable-next-line:no-any\n    @Optional() @Inject(DOCUMENT) private document: any\n  ) {}\n\n  ngOnDestroy(): void {\n    this.destroyPanel();\n  }\n\n  // tslint:disable-next-line:no-any\n  writeValue(value: any): void {\n    this.setTriggerValue(value);\n  }\n\n  registerOnChange(fn: (value: {}) => {}): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    const element: HTMLInputElement = this.elementRef.nativeElement;\n    element.disabled = isDisabled;\n    this.closePanel();\n  }\n\n  openPanel(): void {\n    this.previousValue = this.elementRef.nativeElement.value;\n    this.attachOverlay();\n  }\n\n  closePanel(): void {\n    if (this.panelOpen) {\n      this.nzAutocomplete.isOpen = this.panelOpen = false;\n\n      if (this.overlayRef && this.overlayRef.hasAttached()) {\n        this.selectionChangeSubscription.unsubscribe();\n        this.overlayBackdropClickSubscription.unsubscribe();\n        this.overlayPositionChangeSubscription.unsubscribe();\n        this.optionsChangeSubscription.unsubscribe();\n        this.overlayRef.detach();\n        this.overlayRef = null;\n        this.portal = null;\n      }\n    }\n  }\n\n  handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n\n    if (keyCode === ESCAPE) {\n      event.preventDefault();\n    }\n\n    if (this.panelOpen && (keyCode === ESCAPE || keyCode === TAB)) {\n      // Reset value when tab / ESC close\n      if (this.activeOption && this.activeOption.getLabel() !== this.previousValue) {\n        this.setTriggerValue(this.previousValue);\n      }\n      this.closePanel();\n    } else if (this.panelOpen && keyCode === ENTER) {\n      if (this.nzAutocomplete.showPanel && this.activeOption) {\n        event.preventDefault();\n        this.activeOption.selectViaInteraction();\n      }\n    } else if (this.panelOpen && isArrowKey && this.nzAutocomplete.showPanel) {\n      event.stopPropagation();\n      event.preventDefault();\n      if (keyCode === UP_ARROW) {\n        this.nzAutocomplete.setPreviousItemActive();\n      } else {\n        this.nzAutocomplete.setNextItemActive();\n      }\n      if (this.activeOption) {\n        this.activeOption.scrollIntoViewIfNeeded();\n      }\n      this.doBackfill();\n    }\n  }\n\n  handleInput(event: KeyboardEvent): void {\n    const target = event.target as HTMLInputElement;\n    let value: number | string | null = target.value;\n\n    if (this.canOpen() && document.activeElement === target && this.previousValue !== value) {\n      if (target.type === 'number') {\n        value = value === '' ? null : parseFloat(value);\n      }\n\n      this._onChange(value);\n      this.openPanel();\n    }\n  }\n\n  handleFocus(): void {\n    if (this.canOpen()) {\n      this.openPanel();\n    }\n  }\n\n  handleBlur(): void {\n    this.closePanel();\n    this._onTouched();\n  }\n\n  /**\n   * Subscription data source changes event\n   */\n  private subscribeOptionsChange(): Subscription {\n    return this.nzAutocomplete.options.changes.pipe(delay(0)).subscribe(() => {\n      this.resetActiveItem();\n    });\n  }\n\n  /**\n   * Subscription option changes event and set the value\n   */\n  private subscribeSelectionChange(): Subscription {\n    return this.nzAutocomplete.selectionChange.subscribe((option: NzAutocompleteOptionComponent) => {\n      this.setValueAndClose(option);\n    });\n  }\n\n  /**\n   * Subscription external click and close panel\n   */\n  private subscribeOverlayBackdropClick(): Subscription {\n    return merge<MouseEvent | TouchEvent>(\n      fromEvent<MouseEvent>(this.document, 'click'),\n      fromEvent<TouchEvent>(this.document, 'touchend')\n    ).subscribe((event: MouseEvent | TouchEvent) => {\n      const clickTarget = event.target as HTMLElement;\n\n      // Make sure is not self\n      if (\n        clickTarget !== this.elementRef.nativeElement &&\n        !this.overlayRef!.overlayElement.contains(clickTarget) &&\n        this.panelOpen\n      ) {\n        this.closePanel();\n      }\n    });\n  }\n\n  /**\n   * Subscription overlay position changes and reset dropdown position\n   */\n  private subscribeOverlayPositionChange(): Subscription {\n    return this.positionStrategy.positionChanges\n      .pipe(\n        map((position: ConnectedOverlayPositionChange) => position.connectionPair.originY),\n        distinct()\n      )\n      .subscribe((position: VerticalConnectionPos) => {\n        this.nzAutocomplete.dropDownPosition = position;\n      });\n  }\n\n  private attachOverlay(): void {\n    if (!this.nzAutocomplete) {\n      throw getNzAutocompleteMissingPanelError();\n    }\n\n    if (!this.portal) {\n      this.portal = new TemplatePortal(this.nzAutocomplete.template, this.viewContainerRef);\n    }\n\n    if (!this.overlayRef) {\n      this.overlayRef = this._overlay.create(this.getOverlayConfig());\n    }\n\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\n      this.overlayRef.attach(this.portal);\n      this.overlayPositionChangeSubscription = this.subscribeOverlayPositionChange();\n      this.selectionChangeSubscription = this.subscribeSelectionChange();\n      this.overlayBackdropClickSubscription = this.subscribeOverlayBackdropClick();\n      this.optionsChangeSubscription = this.subscribeOptionsChange();\n    }\n\n    this.nzAutocomplete.isOpen = this.panelOpen = true;\n    this.nzAutocomplete.setVisibility();\n    this.overlayRef.updateSize({ width: this.nzAutocomplete.nzWidth || this.getHostWidth() });\n    setTimeout(() => {\n      if (this.overlayRef) {\n        this.overlayRef.updatePosition();\n      }\n    }, 150);\n    this.resetActiveItem();\n    if (this.activeOption) {\n      this.activeOption.scrollIntoViewIfNeeded();\n    }\n  }\n\n  private destroyPanel(): void {\n    if (this.overlayRef) {\n      this.closePanel();\n    }\n  }\n\n  private getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this.getOverlayPosition(),\n      scrollStrategy: this._overlay.scrollStrategies.reposition(),\n      // default host element width\n      width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n    });\n  }\n\n  private getConnectedElement(): ElementRef {\n    return this.elementRef;\n  }\n\n  private getHostWidth(): number {\n    return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n\n  private getOverlayPosition(): PositionStrategy {\n    const positions = [\n      new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n      new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\n    ];\n    this.positionStrategy = this._overlay\n      .position()\n      .flexibleConnectedTo(this.getConnectedElement())\n      .withPositions(positions)\n      .withFlexibleDimensions(false)\n      .withPush(false);\n    return this.positionStrategy;\n  }\n\n  private resetActiveItem(): void {\n    const index = this.nzAutocomplete.getOptionIndex(this.nzAutocomplete.activeItem);\n    if (this.nzAutocomplete.activeItem && index !== -1) {\n      this.nzAutocomplete.setActiveItem(index);\n    } else {\n      this.nzAutocomplete.setActiveItem(this.nzAutocomplete.nzDefaultActiveFirstOption ? 0 : -1);\n    }\n  }\n\n  private setValueAndClose(option: NzAutocompleteOptionComponent): void {\n    const value = option.nzValue;\n    this.setTriggerValue(option.getLabel());\n    this._onChange(value);\n    this.elementRef.nativeElement.focus();\n    this.closePanel();\n  }\n\n  private setTriggerValue(value: string | number | null): void {\n    this.elementRef.nativeElement.value = value || '';\n  }\n\n  private doBackfill(): void {\n    if (this.nzAutocomplete.nzBackfill && this.nzAutocomplete.activeItem) {\n      this.setTriggerValue(this.nzAutocomplete.activeItem.getLabel());\n    }\n  }\n\n  private canOpen(): boolean {\n    const element: HTMLInputElement = this.elementRef.nativeElement;\n    return !element.readOnly && !element.disabled;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { defer, merge, Observable, Subscription } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { slideMotion, InputBoolean, NzDropDownPosition, NzNoAnimationDirective } from 'ng-zorro-antd/core';\n\nimport { NzAutocompleteOptionComponent, NzOptionSelectionChange } from './nz-autocomplete-option.component';\n\nexport interface AutocompleteDataSourceItem {\n  value: string;\n  label: string;\n}\n\nexport type AutocompleteDataSource = AutocompleteDataSourceItem[] | string[] | number[];\n\n@Component({\n  selector: 'nz-autocomplete',\n  exportAs: 'nzAutocomplete',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './nz-autocomplete.component.html',\n  animations: [slideMotion],\n  styles: [\n    `\n      .ant-select-dropdown {\n        top: 100%;\n        left: 0;\n        position: relative;\n        width: 100%;\n        margin-top: 4px;\n        margin-bottom: 4px;\n      }\n    `\n  ]\n})\nexport class NzAutocompleteComponent implements AfterViewInit, OnDestroy {\n  @Input() nzWidth: number;\n  @Input() nzOverlayClassName = '';\n  @Input() nzOverlayStyle: { [key: string]: string } = {};\n  @Input() @InputBoolean() nzDefaultActiveFirstOption = true;\n  @Input() @InputBoolean() nzBackfill = false;\n  @Input() nzDataSource: AutocompleteDataSource;\n  @Output() readonly selectionChange: EventEmitter<NzAutocompleteOptionComponent> = new EventEmitter<\n    NzAutocompleteOptionComponent\n  >();\n\n  showPanel: boolean = false;\n  isOpen: boolean = false;\n  activeItem: NzAutocompleteOptionComponent;\n  dropDownPosition: NzDropDownPosition = 'bottom';\n\n  /**\n   * Options accessor, its source may be content or dataSource\n   */\n  get options(): QueryList<NzAutocompleteOptionComponent> {\n    // first dataSource\n    if (this.nzDataSource) {\n      return this.fromDataSourceOptions;\n    } else {\n      return this.fromContentOptions;\n    }\n  }\n\n  /** Provided by content */\n  @ContentChildren(NzAutocompleteOptionComponent, { descendants: true }) fromContentOptions: QueryList<\n    NzAutocompleteOptionComponent\n  >;\n  /** Provided by dataSource */\n  @ViewChildren(NzAutocompleteOptionComponent) fromDataSourceOptions: QueryList<NzAutocompleteOptionComponent>;\n\n  /** cdk-overlay */\n  @ViewChild(TemplateRef) template: TemplateRef<{}>;\n  @ViewChild('panel') panel: ElementRef;\n  @ViewChild('content') content: ElementRef;\n\n  private activeItemIndex: number = -1;\n  private selectionChangeSubscription = Subscription.EMPTY;\n  private dataSourceChangeSubscription = Subscription.EMPTY;\n  /** Options changes listener */\n  readonly optionSelectionChanges: Observable<NzOptionSelectionChange> = defer(() => {\n    if (this.options) {\n      return merge(...this.options.map(option => option.selectionChange));\n    }\n    return this.ngZone.onStable.asObservable().pipe(\n      take(1),\n      switchMap(() => this.optionSelectionChanges)\n    );\n  });\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.optionsInit();\n  }\n\n  ngOnDestroy(): void {\n    this.dataSourceChangeSubscription.unsubscribe();\n    this.selectionChangeSubscription.unsubscribe();\n  }\n\n  setVisibility(): void {\n    this.showPanel = !!this.options.length;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  setActiveItem(index: number): void {\n    const activeItem = this.options.toArray()[index];\n    if (activeItem && !activeItem.active) {\n      this.activeItem = activeItem;\n      this.activeItemIndex = index;\n      this.clearSelectedOptions(this.activeItem);\n      this.activeItem.setActiveStyles();\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  setNextItemActive(): void {\n    const nextIndex = this.activeItemIndex + 1 <= this.options.length - 1 ? this.activeItemIndex + 1 : 0;\n    this.setActiveItem(nextIndex);\n  }\n\n  setPreviousItemActive(): void {\n    const previousIndex = this.activeItemIndex - 1 < 0 ? this.options.length - 1 : this.activeItemIndex - 1;\n    this.setActiveItem(previousIndex);\n  }\n\n  getOptionIndex(option?: NzAutocompleteOptionComponent): number {\n    return this.options.reduce((result: number, current: NzAutocompleteOptionComponent, index: number) => {\n      return result === -1 ? (option === current ? index : -1) : result;\n    }, -1)!;\n  }\n\n  private optionsInit(): void {\n    this.setVisibility();\n    this.subscribeOptionChanges();\n    const changes = this.nzDataSource ? this.fromDataSourceOptions.changes : this.fromContentOptions.changes;\n\n    // async\n    this.dataSourceChangeSubscription = changes.subscribe(e => {\n      if (!e.dirty && this.isOpen) {\n        setTimeout(() => this.setVisibility());\n      }\n      this.subscribeOptionChanges();\n    });\n  }\n\n  /**\n   * Clear the status of options\n   */\n  private clearSelectedOptions(skip?: NzAutocompleteOptionComponent, deselect: boolean = false): void {\n    this.options.forEach(option => {\n      if (option !== skip) {\n        if (deselect) {\n          option.deselect();\n        }\n        option.setInactiveStyles();\n      }\n    });\n  }\n\n  private subscribeOptionChanges(): void {\n    this.selectionChangeSubscription.unsubscribe();\n    this.selectionChangeSubscription = this.optionSelectionChanges\n      .pipe(filter((event: NzOptionSelectionChange) => event.isUserInput))\n      .subscribe((event: NzOptionSelectionChange) => {\n        event.source.select();\n        event.source.setActiveStyles();\n        this.activeItem = event.source;\n        this.activeItemIndex = this.getOptionIndex(this.activeItem);\n        this.clearSelectedOptions(event.source, true);\n        this.selectionChange.emit(event.source);\n      });\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzAddOnModule, NzNoAnimationModule } from 'ng-zorro-antd/core';\n\nimport { NzAutocompleteOptgroupComponent } from './nz-autocomplete-optgroup.component';\nimport { NzAutocompleteOptionComponent } from './nz-autocomplete-option.component';\nimport { NzAutocompleteTriggerDirective } from './nz-autocomplete-trigger.directive';\nimport { NzAutocompleteComponent } from './nz-autocomplete.component';\n\n@NgModule({\n  declarations: [\n    NzAutocompleteComponent,\n    NzAutocompleteOptionComponent,\n    NzAutocompleteTriggerDirective,\n    NzAutocompleteOptgroupComponent\n  ],\n  exports: [\n    NzAutocompleteComponent,\n    NzAutocompleteOptionComponent,\n    NzAutocompleteTriggerDirective,\n    NzAutocompleteOptgroupComponent\n  ],\n  imports: [CommonModule, OverlayModule, FormsModule, NzAddOnModule, NzNoAnimationModule]\n})\nexport class NzAutocompleteModule {}\n"]}