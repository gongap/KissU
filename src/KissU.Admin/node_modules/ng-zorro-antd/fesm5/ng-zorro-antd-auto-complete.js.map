{"version":3,"file":"ng-zorro-antd-auto-complete.js.map","sources":["ng://ng-zorro-antd/auto-complete/nz-autocomplete-optgroup.component.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete-option.component.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete.component.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete-trigger.directive.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-auto-optgroup',\n  exportAs: 'nzAutoOptgroup',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './nz-autocomplete-optgroup.component.html',\n  host: {\n    role: 'group',\n    class: 'ant-select-dropdown-menu-item-group'\n  }\n})\nexport class NzAutocompleteOptgroupComponent {\n  @Input() nzLabel: string | TemplateRef<void>;\n\n  constructor() {}\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { scrollIntoView, InputBoolean } from 'ng-zorro-antd/core';\n\nexport class NzOptionSelectionChange {\n  constructor(public source: NzAutocompleteOptionComponent, public isUserInput: boolean = false) {}\n}\n\n@Component({\n  selector: 'nz-auto-option',\n  exportAs: 'nzAutoOption',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './nz-autocomplete-option.component.html',\n  host: {\n    role: 'menuitem',\n    class: 'ant-select-dropdown-menu-item',\n    '[class.ant-select-dropdown-menu-item-selected]': 'selected',\n    '[class.ant-select-dropdown-menu-item-active]': 'active',\n    '[class.ant-select-dropdown-menu-item-disabled]': 'nzDisabled',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'nzDisabled.toString()',\n    '(click)': 'selectViaInteraction()',\n    '(mousedown)': '$event.preventDefault()'\n  }\n})\nexport class NzAutocompleteOptionComponent {\n  /* tslint:disable-next-line:no-any */\n  @Input() nzValue: any;\n  @Input() nzLabel: string;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Output() readonly selectionChange = new EventEmitter<NzOptionSelectionChange>();\n\n  active = false;\n  selected = false;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef, private element: ElementRef) {}\n\n  select(): void {\n    this.selected = true;\n    this.changeDetectorRef.markForCheck();\n    this.emitSelectionChangeEvent();\n  }\n\n  deselect(): void {\n    this.selected = false;\n    this.changeDetectorRef.markForCheck();\n    this.emitSelectionChangeEvent();\n  }\n\n  /** Git display label */\n  getLabel(): string {\n    return this.nzLabel || this.nzValue.toString();\n  }\n\n  /** Set active (only styles) */\n  setActiveStyles(): void {\n    if (!this.active) {\n      this.active = true;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Unset active (only styles) */\n  setInactiveStyles(): void {\n    if (this.active) {\n      this.active = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  scrollIntoViewIfNeeded(): void {\n    scrollIntoView(this.element.nativeElement);\n  }\n\n  selectViaInteraction(): void {\n    if (!this.nzDisabled) {\n      this.selected = !this.selected;\n      if (this.selected) {\n        this.setActiveStyles();\n      } else {\n        this.setInactiveStyles();\n      }\n      this.emitSelectionChangeEvent(true);\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  private emitSelectionChangeEvent(isUserInput: boolean = false): void {\n    this.selectionChange.emit(new NzOptionSelectionChange(this, isUserInput));\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { defer, merge, Observable, Subscription } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { slideMotion, InputBoolean, NzDropDownPosition, NzNoAnimationDirective } from 'ng-zorro-antd/core';\n\nimport { NzAutocompleteOptionComponent, NzOptionSelectionChange } from './nz-autocomplete-option.component';\n\nexport interface AutocompleteDataSourceItem {\n  value: string;\n  label: string;\n}\n\nexport type AutocompleteDataSource = AutocompleteDataSourceItem[] | string[] | number[];\n\n@Component({\n  selector: 'nz-autocomplete',\n  exportAs: 'nzAutocomplete',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './nz-autocomplete.component.html',\n  animations: [slideMotion],\n  styles: [\n    `\n      .ant-select-dropdown {\n        top: 100%;\n        left: 0;\n        position: relative;\n        width: 100%;\n        margin-top: 4px;\n        margin-bottom: 4px;\n      }\n    `\n  ]\n})\nexport class NzAutocompleteComponent implements AfterViewInit, OnDestroy {\n  @Input() nzWidth: number;\n  @Input() nzOverlayClassName = '';\n  @Input() nzOverlayStyle: { [key: string]: string } = {};\n  @Input() @InputBoolean() nzDefaultActiveFirstOption = true;\n  @Input() @InputBoolean() nzBackfill = false;\n  @Input() nzDataSource: AutocompleteDataSource;\n  @Output() readonly selectionChange: EventEmitter<NzAutocompleteOptionComponent> = new EventEmitter<\n    NzAutocompleteOptionComponent\n  >();\n\n  showPanel: boolean = false;\n  isOpen: boolean = false;\n  activeItem: NzAutocompleteOptionComponent;\n  dropDownPosition: NzDropDownPosition = 'bottom';\n\n  /**\n   * Options accessor, its source may be content or dataSource\n   */\n  get options(): QueryList<NzAutocompleteOptionComponent> {\n    // first dataSource\n    if (this.nzDataSource) {\n      return this.fromDataSourceOptions;\n    } else {\n      return this.fromContentOptions;\n    }\n  }\n\n  /** Provided by content */\n  @ContentChildren(NzAutocompleteOptionComponent, { descendants: true }) fromContentOptions: QueryList<\n    NzAutocompleteOptionComponent\n  >;\n  /** Provided by dataSource */\n  @ViewChildren(NzAutocompleteOptionComponent) fromDataSourceOptions: QueryList<NzAutocompleteOptionComponent>;\n\n  /** cdk-overlay */\n  @ViewChild(TemplateRef) template: TemplateRef<{}>;\n  @ViewChild('panel') panel: ElementRef;\n  @ViewChild('content') content: ElementRef;\n\n  private activeItemIndex: number = -1;\n  private selectionChangeSubscription = Subscription.EMPTY;\n  private dataSourceChangeSubscription = Subscription.EMPTY;\n  /** Options changes listener */\n  readonly optionSelectionChanges: Observable<NzOptionSelectionChange> = defer(() => {\n    if (this.options) {\n      return merge(...this.options.map(option => option.selectionChange));\n    }\n    return this.ngZone.onStable.asObservable().pipe(\n      take(1),\n      switchMap(() => this.optionSelectionChanges)\n    );\n  });\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.optionsInit();\n  }\n\n  ngOnDestroy(): void {\n    this.dataSourceChangeSubscription.unsubscribe();\n    this.selectionChangeSubscription.unsubscribe();\n  }\n\n  setVisibility(): void {\n    this.showPanel = !!this.options.length;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  setActiveItem(index: number): void {\n    const activeItem = this.options.toArray()[index];\n    if (activeItem && !activeItem.active) {\n      this.activeItem = activeItem;\n      this.activeItemIndex = index;\n      this.clearSelectedOptions(this.activeItem);\n      this.activeItem.setActiveStyles();\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  setNextItemActive(): void {\n    const nextIndex = this.activeItemIndex + 1 <= this.options.length - 1 ? this.activeItemIndex + 1 : 0;\n    this.setActiveItem(nextIndex);\n  }\n\n  setPreviousItemActive(): void {\n    const previousIndex = this.activeItemIndex - 1 < 0 ? this.options.length - 1 : this.activeItemIndex - 1;\n    this.setActiveItem(previousIndex);\n  }\n\n  getOptionIndex(option?: NzAutocompleteOptionComponent): number {\n    return this.options.reduce((result: number, current: NzAutocompleteOptionComponent, index: number) => {\n      return result === -1 ? (option === current ? index : -1) : result;\n    }, -1)!;\n  }\n\n  private optionsInit(): void {\n    this.setVisibility();\n    this.subscribeOptionChanges();\n    const changes = this.nzDataSource ? this.fromDataSourceOptions.changes : this.fromContentOptions.changes;\n\n    // async\n    this.dataSourceChangeSubscription = changes.subscribe(e => {\n      if (!e.dirty && this.isOpen) {\n        setTimeout(() => this.setVisibility());\n      }\n      this.subscribeOptionChanges();\n    });\n  }\n\n  /**\n   * Clear the status of options\n   */\n  private clearSelectedOptions(skip?: NzAutocompleteOptionComponent, deselect: boolean = false): void {\n    this.options.forEach(option => {\n      if (option !== skip) {\n        if (deselect) {\n          option.deselect();\n        }\n        option.setInactiveStyles();\n      }\n    });\n  }\n\n  private subscribeOptionChanges(): void {\n    this.selectionChangeSubscription.unsubscribe();\n    this.selectionChangeSubscription = this.optionSelectionChanges\n      .pipe(filter((event: NzOptionSelectionChange) => event.isUserInput))\n      .subscribe((event: NzOptionSelectionChange) => {\n        event.source.select();\n        event.source.setActiveStyles();\n        this.activeItem = event.source;\n        this.activeItemIndex = this.getOptionIndex(this.activeItem);\n        this.clearSelectedOptions(event.source, true);\n        this.selectionChange.emit(event.source);\n      });\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n  ConnectedOverlayPositionChange,\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  VerticalConnectionPos\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  forwardRef,\n  Directive,\n  ElementRef,\n  ExistingProvider,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  ViewContainerRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { fromEvent, merge, Subscription } from 'rxjs';\nimport { delay, distinct, map } from 'rxjs/operators';\n\nimport { NzAutocompleteOptionComponent } from './nz-autocomplete-option.component';\nimport { NzAutocompleteComponent } from './nz-autocomplete.component';\n\nexport const NZ_AUTOCOMPLETE_VALUE_ACCESSOR: ExistingProvider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NzAutocompleteTriggerDirective),\n  multi: true\n};\n\nexport function getNzAutocompleteMissingPanelError(): Error {\n  return Error(\n    'Attempting to open an undefined instance of `nz-autocomplete`. ' +\n      'Make sure that the id passed to the `nzAutocomplete` is correct and that ' +\n      \"you're attempting to open it after the ngAfterContentInit hook.\"\n  );\n}\n\n@Directive({\n  selector: `input[nzAutocomplete], textarea[nzAutocomplete]`,\n  exportAs: 'nzAutocompleteTrigger',\n  providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR],\n  host: {\n    autocomplete: 'off',\n    'aria-autocomplete': 'list',\n    '(focusin)': 'handleFocus()',\n    '(blur)': 'handleBlur()',\n    '(input)': 'handleInput($event)',\n    '(keydown)': 'handleKeydown($event)'\n  }\n})\nexport class NzAutocompleteTriggerDirective implements ControlValueAccessor, OnDestroy {\n  /** Bind nzAutocomplete component */\n  @Input() nzAutocomplete: NzAutocompleteComponent;\n\n  // tslint:disable-next-line:no-any\n  _onChange: (value: any) => void = () => {};\n  _onTouched = () => {};\n  panelOpen: boolean = false;\n\n  /** Current active option */\n  get activeOption(): NzAutocompleteOptionComponent | undefined {\n    if (this.nzAutocomplete && this.nzAutocomplete.options.length) {\n      return this.nzAutocomplete.activeItem;\n    }\n  }\n\n  private overlayRef: OverlayRef | null;\n  private portal: TemplatePortal<{}> | null;\n  private positionStrategy: FlexibleConnectedPositionStrategy;\n  private previousValue: string | number | null;\n  private selectionChangeSubscription: Subscription;\n  private optionsChangeSubscription: Subscription;\n  private overlayBackdropClickSubscription: Subscription;\n  private overlayPositionChangeSubscription: Subscription;\n\n  constructor(\n    private elementRef: ElementRef,\n    private _overlay: Overlay,\n    private viewContainerRef: ViewContainerRef,\n    // tslint:disable-next-line:no-any\n    @Optional() @Inject(DOCUMENT) private document: any\n  ) {}\n\n  ngOnDestroy(): void {\n    this.destroyPanel();\n  }\n\n  // tslint:disable-next-line:no-any\n  writeValue(value: any): void {\n    this.setTriggerValue(value);\n  }\n\n  registerOnChange(fn: (value: {}) => {}): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    const element: HTMLInputElement = this.elementRef.nativeElement;\n    element.disabled = isDisabled;\n    this.closePanel();\n  }\n\n  openPanel(): void {\n    this.previousValue = this.elementRef.nativeElement.value;\n    this.attachOverlay();\n  }\n\n  closePanel(): void {\n    if (this.panelOpen) {\n      this.nzAutocomplete.isOpen = this.panelOpen = false;\n\n      if (this.overlayRef && this.overlayRef.hasAttached()) {\n        this.selectionChangeSubscription.unsubscribe();\n        this.overlayBackdropClickSubscription.unsubscribe();\n        this.overlayPositionChangeSubscription.unsubscribe();\n        this.optionsChangeSubscription.unsubscribe();\n        this.overlayRef.detach();\n        this.overlayRef = null;\n        this.portal = null;\n      }\n    }\n  }\n\n  handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n\n    if (keyCode === ESCAPE) {\n      event.preventDefault();\n    }\n\n    if (this.panelOpen && (keyCode === ESCAPE || keyCode === TAB)) {\n      // Reset value when tab / ESC close\n      if (this.activeOption && this.activeOption.getLabel() !== this.previousValue) {\n        this.setTriggerValue(this.previousValue);\n      }\n      this.closePanel();\n    } else if (this.panelOpen && keyCode === ENTER) {\n      if (this.nzAutocomplete.showPanel && this.activeOption) {\n        event.preventDefault();\n        this.activeOption.selectViaInteraction();\n      }\n    } else if (this.panelOpen && isArrowKey && this.nzAutocomplete.showPanel) {\n      event.stopPropagation();\n      event.preventDefault();\n      if (keyCode === UP_ARROW) {\n        this.nzAutocomplete.setPreviousItemActive();\n      } else {\n        this.nzAutocomplete.setNextItemActive();\n      }\n      if (this.activeOption) {\n        this.activeOption.scrollIntoViewIfNeeded();\n      }\n      this.doBackfill();\n    }\n  }\n\n  handleInput(event: KeyboardEvent): void {\n    const target = event.target as HTMLInputElement;\n    let value: number | string | null = target.value;\n\n    if (this.canOpen() && document.activeElement === target && this.previousValue !== value) {\n      if (target.type === 'number') {\n        value = value === '' ? null : parseFloat(value);\n      }\n\n      this._onChange(value);\n      this.openPanel();\n    }\n  }\n\n  handleFocus(): void {\n    if (this.canOpen()) {\n      this.openPanel();\n    }\n  }\n\n  handleBlur(): void {\n    this.closePanel();\n    this._onTouched();\n  }\n\n  /**\n   * Subscription data source changes event\n   */\n  private subscribeOptionsChange(): Subscription {\n    return this.nzAutocomplete.options.changes.pipe(delay(0)).subscribe(() => {\n      this.resetActiveItem();\n    });\n  }\n\n  /**\n   * Subscription option changes event and set the value\n   */\n  private subscribeSelectionChange(): Subscription {\n    return this.nzAutocomplete.selectionChange.subscribe((option: NzAutocompleteOptionComponent) => {\n      this.setValueAndClose(option);\n    });\n  }\n\n  /**\n   * Subscription external click and close panel\n   */\n  private subscribeOverlayBackdropClick(): Subscription {\n    return merge<MouseEvent | TouchEvent>(\n      fromEvent<MouseEvent>(this.document, 'click'),\n      fromEvent<TouchEvent>(this.document, 'touchend')\n    ).subscribe((event: MouseEvent | TouchEvent) => {\n      const clickTarget = event.target as HTMLElement;\n\n      // Make sure is not self\n      if (\n        clickTarget !== this.elementRef.nativeElement &&\n        !this.overlayRef!.overlayElement.contains(clickTarget) &&\n        this.panelOpen\n      ) {\n        this.closePanel();\n      }\n    });\n  }\n\n  /**\n   * Subscription overlay position changes and reset dropdown position\n   */\n  private subscribeOverlayPositionChange(): Subscription {\n    return this.positionStrategy.positionChanges\n      .pipe(\n        map((position: ConnectedOverlayPositionChange) => position.connectionPair.originY),\n        distinct()\n      )\n      .subscribe((position: VerticalConnectionPos) => {\n        this.nzAutocomplete.dropDownPosition = position;\n      });\n  }\n\n  private attachOverlay(): void {\n    if (!this.nzAutocomplete) {\n      throw getNzAutocompleteMissingPanelError();\n    }\n\n    if (!this.portal) {\n      this.portal = new TemplatePortal(this.nzAutocomplete.template, this.viewContainerRef);\n    }\n\n    if (!this.overlayRef) {\n      this.overlayRef = this._overlay.create(this.getOverlayConfig());\n    }\n\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\n      this.overlayRef.attach(this.portal);\n      this.overlayPositionChangeSubscription = this.subscribeOverlayPositionChange();\n      this.selectionChangeSubscription = this.subscribeSelectionChange();\n      this.overlayBackdropClickSubscription = this.subscribeOverlayBackdropClick();\n      this.optionsChangeSubscription = this.subscribeOptionsChange();\n    }\n\n    this.nzAutocomplete.isOpen = this.panelOpen = true;\n    this.nzAutocomplete.setVisibility();\n    this.overlayRef.updateSize({ width: this.nzAutocomplete.nzWidth || this.getHostWidth() });\n    setTimeout(() => {\n      if (this.overlayRef) {\n        this.overlayRef.updatePosition();\n      }\n    }, 150);\n    this.resetActiveItem();\n    if (this.activeOption) {\n      this.activeOption.scrollIntoViewIfNeeded();\n    }\n  }\n\n  private destroyPanel(): void {\n    if (this.overlayRef) {\n      this.closePanel();\n    }\n  }\n\n  private getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this.getOverlayPosition(),\n      scrollStrategy: this._overlay.scrollStrategies.reposition(),\n      // default host element width\n      width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n    });\n  }\n\n  private getConnectedElement(): ElementRef {\n    return this.elementRef;\n  }\n\n  private getHostWidth(): number {\n    return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n\n  private getOverlayPosition(): PositionStrategy {\n    const positions = [\n      new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n      new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\n    ];\n    this.positionStrategy = this._overlay\n      .position()\n      .flexibleConnectedTo(this.getConnectedElement())\n      .withPositions(positions)\n      .withFlexibleDimensions(false)\n      .withPush(false);\n    return this.positionStrategy;\n  }\n\n  private resetActiveItem(): void {\n    const index = this.nzAutocomplete.getOptionIndex(this.nzAutocomplete.activeItem);\n    if (this.nzAutocomplete.activeItem && index !== -1) {\n      this.nzAutocomplete.setActiveItem(index);\n    } else {\n      this.nzAutocomplete.setActiveItem(this.nzAutocomplete.nzDefaultActiveFirstOption ? 0 : -1);\n    }\n  }\n\n  private setValueAndClose(option: NzAutocompleteOptionComponent): void {\n    const value = option.nzValue;\n    this.setTriggerValue(option.getLabel());\n    this._onChange(value);\n    this.elementRef.nativeElement.focus();\n    this.closePanel();\n  }\n\n  private setTriggerValue(value: string | number | null): void {\n    this.elementRef.nativeElement.value = value || '';\n  }\n\n  private doBackfill(): void {\n    if (this.nzAutocomplete.nzBackfill && this.nzAutocomplete.activeItem) {\n      this.setTriggerValue(this.nzAutocomplete.activeItem.getLabel());\n    }\n  }\n\n  private canOpen(): boolean {\n    const element: HTMLInputElement = this.elementRef.nativeElement;\n    return !element.readOnly && !element.disabled;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzAddOnModule, NzNoAnimationModule } from 'ng-zorro-antd/core';\n\nimport { NzAutocompleteOptgroupComponent } from './nz-autocomplete-optgroup.component';\nimport { NzAutocompleteOptionComponent } from './nz-autocomplete-option.component';\nimport { NzAutocompleteTriggerDirective } from './nz-autocomplete-trigger.directive';\nimport { NzAutocompleteComponent } from './nz-autocomplete.component';\n\n@NgModule({\n  declarations: [\n    NzAutocompleteComponent,\n    NzAutocompleteOptionComponent,\n    NzAutocompleteTriggerDirective,\n    NzAutocompleteOptgroupComponent\n  ],\n  exports: [\n    NzAutocompleteComponent,\n    NzAutocompleteOptionComponent,\n    NzAutocompleteTriggerDirective,\n    NzAutocompleteOptgroupComponent\n  ],\n  imports: [CommonModule, OverlayModule, FormsModule, NzAddOnModule, NzNoAnimationModule]\n})\nexport class NzAutocompleteModule {}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}
