<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GreatWall.Data</name>
    </assembly>
    <members>
        <member name="T:GreatWall.Data.IGreatWallUnitOfWork">
            <summary>
            GreatWall工作单元
            </summary>
        </member>
        <member name="T:GreatWall.Data.Mappings.SqlServer.ApplicationMap">
            <summary>
            应用程序映射配置
            </summary>
        </member>
        <member name="M:GreatWall.Data.Mappings.SqlServer.ApplicationMap.MapTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{GreatWall.Domain.Models.Application})">
            <summary>
            映射表
            </summary>
        </member>
        <member name="M:GreatWall.Data.Mappings.SqlServer.ApplicationMap.MapProperties(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{GreatWall.Domain.Models.Application})">
            <summary>
            映射属性
            </summary>
        </member>
        <member name="T:GreatWall.Data.Mappings.SqlServer.PermissionMap">
            <summary>
            权限映射配置
            </summary>
        </member>
        <member name="M:GreatWall.Data.Mappings.SqlServer.PermissionMap.MapTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{GreatWall.Domain.Models.Permission})">
            <summary>
            映射表
            </summary>
        </member>
        <member name="M:GreatWall.Data.Mappings.SqlServer.PermissionMap.MapProperties(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{GreatWall.Domain.Models.Permission})">
            <summary>
            映射属性
            </summary>
        </member>
        <member name="T:GreatWall.Data.Mappings.SqlServer.ResourceMap">
            <summary>
            资源映射配置
            </summary>
        </member>
        <member name="M:GreatWall.Data.Mappings.SqlServer.ResourceMap.MapTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{GreatWall.Data.Pos.ResourcePo})">
            <summary>
            映射表
            </summary>
        </member>
        <member name="M:GreatWall.Data.Mappings.SqlServer.ResourceMap.MapProperties(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{GreatWall.Data.Pos.ResourcePo})">
            <summary>
            映射属性
            </summary>
        </member>
        <member name="T:GreatWall.Data.Mappings.SqlServer.RoleMap">
            <summary>
            角色映射配置
            </summary>
        </member>
        <member name="M:GreatWall.Data.Mappings.SqlServer.RoleMap.MapTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{GreatWall.Domain.Models.Role})">
            <summary>
            映射表
            </summary>
        </member>
        <member name="M:GreatWall.Data.Mappings.SqlServer.RoleMap.MapProperties(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{GreatWall.Domain.Models.Role})">
            <summary>
            映射属性
            </summary>
        </member>
        <member name="T:GreatWall.Data.Mappings.SqlServer.UserMap">
            <summary>
            用户映射配置
            </summary>
        </member>
        <member name="M:GreatWall.Data.Mappings.SqlServer.UserMap.MapTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{GreatWall.Domain.Models.User})">
            <summary>
            映射表
            </summary>
        </member>
        <member name="M:GreatWall.Data.Mappings.SqlServer.UserMap.MapProperties(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{GreatWall.Domain.Models.User})">
            <summary>
            映射属性
            </summary>
        </member>
        <member name="T:GreatWall.Data.Mappings.SqlServer.UserRoleMap">
            <summary>
            用户角色映射配置
            </summary>
        </member>
        <member name="M:GreatWall.Data.Mappings.SqlServer.UserRoleMap.MapTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{GreatWall.Domain.Models.UserRole})">
            <summary>
            映射表
            </summary>
        </member>
        <member name="M:GreatWall.Data.Mappings.SqlServer.UserRoleMap.MapProperties(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{GreatWall.Domain.Models.UserRole})">
            <summary>
            映射属性
            </summary>
        </member>
        <member name="T:GreatWall.Data.Pos.Extensions.Extension">
            <summary>
            资源持久化对象扩展
            </summary>
        </member>
        <member name="M:GreatWall.Data.Pos.Extensions.Extension.ToModule(GreatWall.Data.Pos.ResourcePo)">
            <summary>
            转换为模块
            </summary>
            <param name="po">资源持久化对象</param>
        </member>
        <member name="M:GreatWall.Data.Pos.Extensions.Extension.ToPo(GreatWall.Domain.Models.Module)">
            <summary>
            转换为资源持久化对象
            </summary>
            <param name="entity">模块</param>
        </member>
        <member name="M:GreatWall.Data.Pos.Extensions.Extension.CreateExtend(GreatWall.Domain.Models.Module)">
            <summary>
            创建扩展
            </summary>
            <param name="entity">模块</param>
        </member>
        <member name="T:GreatWall.Data.Pos.Models.ModuleExtend">
            <summary>
            模块扩展信息
            </summary>
        </member>
        <member name="P:GreatWall.Data.Pos.Models.ModuleExtend.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:GreatWall.Data.Pos.Models.ModuleExtend.Expanded">
            <summary>
            是否展开
            </summary>
        </member>
        <member name="T:GreatWall.Data.Pos.ResourcePo">
            <summary>
            资源持久化对象
            </summary>
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.ApplicationId">
            <summary>
            应用程序标识
            </summary>  
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.Uri">
            <summary>
            资源标识
            </summary>  
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.Name">
            <summary>
            资源名称
            </summary>  
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.Type">
            <summary>
            资源类型
            </summary>  
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.Remark">
            <summary>
            备注
            </summary>  
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.PinYin">
            <summary>
            拼音简码
            </summary>  
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.Extend">
            <summary>
            扩展
            </summary>  
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.CreationTime">
            <summary>
            创建时间
            </summary>  
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.CreatorId">
            <summary>
            创建人编号
            </summary>  
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.LastModificationTime">
            <summary>
            最后修改时间
            </summary>  
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.LastModifierId">
            <summary>
            最后修改人编号
            </summary>  
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.IsDeleted">
            <summary>
            是否删除
            </summary>  
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.Application">
            <summary>
            应用程序
            </summary>
        </member>
        <member name="P:GreatWall.Data.Pos.ResourcePo.Parent">
            <summary>
            父资源
            </summary>
        </member>
        <member name="T:GreatWall.Data.Repositories.ApplicationRepository">
            <summary>
            应用程序仓储
            </summary>
        </member>
        <member name="M:GreatWall.Data.Repositories.ApplicationRepository.#ctor(GreatWall.Data.IGreatWallUnitOfWork)">
            <summary>
            初始化应用程序仓储
            </summary>
            <param name="unitOfWork">工作单元</param>
        </member>
        <member name="T:GreatWall.Data.Repositories.ModuleRepository">
            <summary>
            模块仓储
            </summary>
        </member>
        <member name="F:GreatWall.Data.Repositories.ModuleRepository._store">
            <summary>
            资源存储器
            </summary>
        </member>
        <member name="M:GreatWall.Data.Repositories.ModuleRepository.#ctor(GreatWall.Data.Stores.Abstractions.IResourcePoStore)">
            <summary>
            初始化模块仓储
            </summary>
            <param name="store">资源存储器</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.ModuleRepository.ToEntity(GreatWall.Data.Pos.ResourcePo)">
            <summary>
            转成实体
            </summary>
            <param name="po">持久化对象</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.ModuleRepository.ToPo(GreatWall.Domain.Models.Module)">
            <summary>
            转成持久化对象
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.ModuleRepository.GenerateSortIdAsync(System.Guid,System.Nullable{System.Guid})">
            <summary>
            生成排序号
            </summary>
            <param name="applicationId">应用程序标识</param>
            <param name="parentId">父标识</param>
        </member>
        <member name="T:GreatWall.Data.Repositories.PermissionRepository">
            <summary>
            权限仓储
            </summary>
        </member>
        <member name="M:GreatWall.Data.Repositories.PermissionRepository.#ctor(GreatWall.Data.IGreatWallUnitOfWork)">
            <summary>
            初始化权限仓储
            </summary>
            <param name="unitOfWork">工作单元</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.PermissionRepository.GetResourceIdsAsync(System.Guid,System.Guid,System.Boolean)">
            <summary>
            获取资源标识列表
            </summary>
            <param name="applicationId">应用程序标识</param>
            <param name="roleId">角色标识</param>
            <param name="isDeny">是否拒绝</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.PermissionRepository.GetPermissionIdsAsync(System.Guid,System.Collections.Generic.List{System.Guid})">
             <summary>
            获取权限标识列表
             </summary>
             <param name="roleId">角色标识</param>
             <param name="resourceIds">资源标识列表</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.PermissionRepository.RemoveAsync(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            移除权限
            </summary>
            <param name="roleId">角色标识</param>
            <param name="resourceIds">资源标识列表</param>
        </member>
        <member name="T:GreatWall.Data.Repositories.RoleRepository">
            <summary>
            角色仓储
            </summary>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.#ctor(GreatWall.Data.IGreatWallUnitOfWork)">
            <summary>
            初始化角色仓储
            </summary>
            <param name="unitOfWork">工作单元</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.Dispose">
            <summary>
            清理
            </summary>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.CreateAsync(GreatWall.Domain.Models.Role,System.Threading.CancellationToken)">
            <summary>
            创建角色
            </summary>
            <param name="role">角色</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.ValidateRole(GreatWall.Domain.Models.Role,System.Threading.CancellationToken)">
            <summary>
            验证用户
            </summary>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.UpdateAsync(GreatWall.Domain.Models.Role,System.Threading.CancellationToken)">
            <summary>
            更新角色
            </summary>
            <param name="role">角色</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.DeleteAsync(GreatWall.Domain.Models.Role,System.Threading.CancellationToken)">
            <summary>
            删除角色
            </summary>
            <param name="role">角色</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.GetRoleIdAsync(GreatWall.Domain.Models.Role,System.Threading.CancellationToken)">
            <summary>
            获取角色编号
            </summary>
            <param name="role">角色</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.GetRoleNameAsync(GreatWall.Domain.Models.Role,System.Threading.CancellationToken)">
            <summary>
            获取角色名称
            </summary>
            <param name="role">角色</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.SetRoleNameAsync(GreatWall.Domain.Models.Role,System.String,System.Threading.CancellationToken)">
            <summary>
            设置角色名称
            </summary>
            <param name="role">角色</param>
            <param name="roleName">角色名</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.GetNormalizedRoleNameAsync(GreatWall.Domain.Models.Role,System.Threading.CancellationToken)">
            <summary>
            获取标准化角色名称
            </summary>
            <param name="role">角色</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.SetNormalizedRoleNameAsync(GreatWall.Domain.Models.Role,System.String,System.Threading.CancellationToken)">
            <summary>
            设置标准化角色名称
            </summary>
            <param name="role">角色</param>
            <param name="normalizedName">标准化角色名称</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            通过编号获取角色
            </summary>
            <param name="roleId">角色编号</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.FindByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            通过名称获取角色
            </summary>
            <param name="normalizedRoleName">标准化角色名称</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.GetExistsUserIdsAsync(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            获取已添加的用户标识列表
            </summary>
            <param name="roleId">角色标识</param>
            <param name="userIds">用户标识列表</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.AddUserRolesAsync(System.Collections.Generic.IEnumerable{GreatWall.Domain.Models.UserRole})">
            <summary>
            添加用户角色列表
            </summary>
            <param name="userRoles">用户角色列表</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.RoleRepository.RemoveUserRoles(System.Collections.Generic.IEnumerable{GreatWall.Domain.Models.UserRole})">
            <summary>
            从角色移除用户
            </summary>
            <param name="userRoles">用户角色列表</param>
        </member>
        <member name="T:GreatWall.Data.Repositories.UserRepository">
            <summary>
            用户仓储
            </summary>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.#ctor(GreatWall.Data.IGreatWallUnitOfWork)">
            <summary>
            初始化用户仓储
            </summary>
            <param name="unitOfWork">工作单元</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.Dispose">
            <summary>
            清理
            </summary>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetUserIdAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取用户编号
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.ValidateUser(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            验证用户
            </summary>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetUserNameAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取用户名
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.SetUserNameAsync(GreatWall.Domain.Models.User,System.String,System.Threading.CancellationToken)">
            <summary>
            设置用户名
            </summary>
            <param name="user">用户</param>
            <param name="userName">用户名</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetNormalizedUserNameAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取标准化用户名
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.SetNormalizedUserNameAsync(GreatWall.Domain.Models.User,System.String,System.Threading.CancellationToken)">
            <summary>
            设置标准化用户名
            </summary>
            <param name="user">用户</param>
            <param name="normalizedName">标准化用户名</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.CreateAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            创建用户
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.UpdateAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            更新用户
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.DeleteAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            删除用户
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            根据标识查找
            </summary>
            <param name="userId">用户编号</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.FindByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            通过用户名查找
            </summary>
            <param name="normalizedUserName">标准化用户名</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.SetPasswordHashAsync(GreatWall.Domain.Models.User,System.String,System.Threading.CancellationToken)">
            <summary>
            设置密码散列
            </summary>
            <param name="user">用户</param>
            <param name="passwordHash">密码散列</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetPasswordHashAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取密码散列
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.HasPasswordAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            是否设置密码
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.SetSecurityStampAsync(GreatWall.Domain.Models.User,System.String,System.Threading.CancellationToken)">
            <summary>
            设置安全戳
            </summary>
            <param name="user">用户</param>
            <param name="stamp">安全戳</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetSecurityStampAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取安全戳
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetLockoutEndDateAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取锁定结束日期
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.SetLockoutEndDateAsync(GreatWall.Domain.Models.User,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            设置锁定结束日期
            </summary>
            <param name="user">用户</param>
            <param name="lockoutEnd">锁定结束日期</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.IncrementAccessFailedCountAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            增加访问失败次数
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.ResetAccessFailedCountAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            重置访问失败次数
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetAccessFailedCountAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取登录失败次数
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetLockoutEnabledAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取锁定启用状态
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.SetLockoutEnabledAsync(GreatWall.Domain.Models.User,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            设置锁定启用状态
            </summary>
            <param name="user">用户</param>
            <param name="enabled">是否启用锁定</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.SetEmailAsync(GreatWall.Domain.Models.User,System.String,System.Threading.CancellationToken)">
            <summary>
            设置电子邮件
            </summary>
            <param name="user">用户</param>
            <param name="email">电子邮件</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetEmailAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取电子邮件
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetEmailConfirmedAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取电子邮件确认状态
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.SetEmailConfirmedAsync(GreatWall.Domain.Models.User,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            确认电子邮件
            </summary>
            <param name="user">用户</param>
            <param name="confirmed">是否确认</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.FindByEmailAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            通过电子邮件查找
            </summary>
            <param name="normalizedEmail">标准化电子邮件</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetNormalizedEmailAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取标准化电子邮件
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.SetNormalizedEmailAsync(GreatWall.Domain.Models.User,System.String,System.Threading.CancellationToken)">
            <summary>
            设置标准化电子邮件
            </summary>
            <param name="user">用户</param>
            <param name="normalizedEmail">标准化电子邮件</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.SetPhoneNumberAsync(GreatWall.Domain.Models.User,System.String,System.Threading.CancellationToken)">
            <summary>
            设置手机号
            </summary>
            <param name="user">用户</param>
            <param name="phoneNumber">手机号</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetPhoneNumberAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取手机号
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.GetPhoneNumberConfirmedAsync(GreatWall.Domain.Models.User,System.Threading.CancellationToken)">
            <summary>
            获取手机号确认状态
            </summary>
            <param name="user">用户</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.SetPhoneNumberConfirmedAsync(GreatWall.Domain.Models.User,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            设置手机号确认状态
            </summary>
            <param name="user">用户</param>
            <param name="confirmed">是否确认</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:GreatWall.Data.Repositories.UserRepository.FilterByRole(System.Linq.IQueryable{GreatWall.Domain.Models.User},System.Guid,System.Boolean)">
            <summary>
            过滤角色
            </summary>
            <param name="queryable">查询对象</param>
            <param name="roleId">角色标识</param>
            <param name="except">是否排除该角色的用户列表</param>
        </member>
        <member name="T:GreatWall.Data.Stores.Abstractions.IResourcePoStore">
            <summary>
            资源存储器
            </summary>
        </member>
        <member name="T:GreatWall.Data.Stores.Implements.ResourcePoStore">
            <summary>
            资源存储器
            </summary>
        </member>
        <member name="M:GreatWall.Data.Stores.Implements.ResourcePoStore.#ctor(GreatWall.Data.IGreatWallUnitOfWork)">
            <summary>
            初始化资源存储器
            </summary>
            <param name="unitOfWork">工作单元</param>
        </member>
        <member name="T:GreatWall.Data.UnitOfWorks.SqlServer.GreatWallUnitOfWork">
            <summary>
            工作单元
            </summary>
        </member>
        <member name="M:GreatWall.Data.UnitOfWorks.SqlServer.GreatWallUnitOfWork.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{GreatWall.Data.UnitOfWorks.SqlServer.GreatWallUnitOfWork})">
            <summary>
            初始化工作单元
            </summary>
            <param name="options">配置项</param>
        </member>
    </members>
</doc>
