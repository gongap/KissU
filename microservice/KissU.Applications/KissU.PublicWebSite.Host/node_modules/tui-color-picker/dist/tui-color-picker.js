/*!
 * TOAST UI Color Picker
 * @version 2.2.5
 * @author NHN FE Development Team <dl_javascript@nhn.com>
 * @license MIT
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("tui-code-snippet"));
	else if(typeof define === 'function' && define.amd)
		define(["tui-code-snippet"], factory);
	else if(typeof exports === 'object')
		exports["colorPicker"] = factory(require("tui-code-snippet"));
	else
		root["tui"] = root["tui"] || {}, root["tui"]["colorPicker"] = factory(root["tui"]["util"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_tui_code_snippet__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "dist";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://tui.colorPicker/(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/js/colorutil.js":
/*!*****************************!*\
  !*** ./src/js/colorutil.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @fileoverview Utility methods to manipulate colors\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar hexRX = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i;\nvar colorutil = {\n  /**\n   * pad left zero characters.\n   * @param {number} number number value to pad zero.\n   * @param {number} length pad length to want.\n   * @returns {string} padded string.\n   */\n  leadingZero: function (number, length) {\n    var zero = '',\n        i = 0;\n\n    if ((number + '').length > length) {\n      return number + '';\n    }\n\n    for (; i < length - 1; i += 1) {\n      zero += '0';\n    }\n\n    return (zero + number).slice(length * -1);\n  },\n\n  /**\n   * Check validate of hex string value is RGB\n   * @param {string} str - rgb hex string\n   * @returns {boolean} return true when supplied str is valid RGB hex string\n   */\n  isValidRGB: function (str) {\n    return hexRX.test(str);\n  },\n  // @license RGB <-> HSV conversion utilities based off of http://www.cs.rit.edu/~ncs/color/t_convert.html\n\n  /**\n   * Convert color hex string to rgb number array\n   * @param {string} hexStr - hex string\n   * @returns {number[]} rgb numbers\n   */\n  hexToRGB: function (hexStr) {\n    var r, g, b;\n\n    if (!colorutil.isValidRGB(hexStr)) {\n      return false;\n    }\n\n    hexStr = hexStr.substring(1);\n    r = parseInt(hexStr.substr(0, 2), 16);\n    g = parseInt(hexStr.substr(2, 2), 16);\n    b = parseInt(hexStr.substr(4, 2), 16);\n    return [r, g, b];\n  },\n\n  /**\n   * Convert rgb number to hex string\n   * @param {number} r - red\n   * @param {number} g - green\n   * @param {number} b - blue\n   * @returns {string|boolean} return false when supplied rgb number is not valid. otherwise, converted hex string\n   */\n  rgbToHEX: function (r, g, b) {\n    var hexStr = '#' + colorutil.leadingZero(r.toString(16), 2) + colorutil.leadingZero(g.toString(16), 2) + colorutil.leadingZero(b.toString(16), 2);\n\n    if (colorutil.isValidRGB(hexStr)) {\n      return hexStr;\n    }\n\n    return false;\n  },\n\n  /**\n   * Convert rgb number to HSV value\n   * @param {number} r - red\n   * @param {number} g - green\n   * @param {number} b - blue\n   * @returns {number[]} hsv value\n   */\n  rgbToHSV: function (r, g, b) {\n    var max, min, h, s, v, d;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    max = Math.max(r, g, b);\n    min = Math.min(r, g, b);\n    v = max;\n    d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if (max === min) {\n      h = 0;\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / d + 2;\n          break;\n\n        case b:\n          h = (r - g) / d + 4;\n          break;\n        // no default\n      }\n\n      h /= 6;\n    }\n\n    return [Math.round(h * 360), Math.round(s * 100), Math.round(v * 100)];\n  },\n\n  /**\n   * Convert HSV number to RGB\n   * @param {number} h - hue\n   * @param {number} s - saturation\n   * @param {number} v - value\n   * @returns {number[]} rgb value\n   */\n  hsvToRGB: function (h, s, v) {\n    var r, g, b;\n    var i;\n    var f, p, q, t;\n    h = Math.max(0, Math.min(360, h));\n    s = Math.max(0, Math.min(100, s));\n    v = Math.max(0, Math.min(100, v));\n    s /= 100;\n    v /= 100;\n\n    if (s === 0) {\n      // Achromatic (grey)\n      r = g = b = v;\n      return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n\n    h /= 60; // sector 0 to 5\n\n    i = Math.floor(h);\n    f = h - i; // factorial part of h\n\n    p = v * (1 - s);\n    q = v * (1 - s * f);\n    t = v * (1 - s * (1 - f));\n\n    switch (i) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n\n      default:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n  }\n};\nmodule.exports = colorutil;\n\n//# sourceURL=webpack://tui.colorPicker/./src/js/colorutil.js?");

/***/ }),

/***/ "./src/js/core/collection.js":
/*!***********************************!*\
  !*** ./src/js/core/collection.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @fileoverview Common collections.\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar snippet = __webpack_require__(/*! tui-code-snippet */ \"tui-code-snippet\");\n\nvar util = snippet,\n    forEachProp = util.forEachOwnProperties,\n    forEachArr = util.forEachArray,\n    isFunc = util.isFunction,\n    isObj = util.isObject;\nvar aps = Array.prototype.slice;\n/**\n * Common collection.\n *\n * It need function for get model's unique id.\n *\n * if the function is not supplied then it use default function {@link Collection#getItemID}\n * @constructor\n * @param {function} [getItemIDFn] function for get model's id.\n * @ignore\n */\n\nfunction Collection(getItemIDFn) {\n  /**\n   * @type {object.<string, *>}\n   */\n  this.items = {};\n  /**\n   * @type {number}\n   */\n\n  this.length = 0;\n\n  if (isFunc(getItemIDFn)) {\n    /**\n     * @type {function}\n     */\n    this.getItemID = getItemIDFn;\n  }\n}\n/**********\n * static props\n **********/\n\n/**\n * Combind supplied function filters and condition.\n * @param {...function} filters - function filters\n * @returns {function} combined filter\n */\n\n\nCollection.and = function (filters) {\n  var cnt;\n  filters = aps.call(arguments);\n  cnt = filters.length;\n  return function (item) {\n    var i = 0;\n\n    for (; i < cnt; i += 1) {\n      if (!filters[i].call(null, item)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n};\n/**\n * Combine multiple function filters with OR clause.\n * @param {...function} filters - function filters\n * @returns {function} combined filter\n */\n\n\nCollection.or = function (filters) {\n  var cnt;\n  filters = aps.call(arguments);\n  cnt = filters.length;\n  return function (item) {\n    var i = 1,\n        result = filters[0].call(null, item);\n\n    for (; i < cnt; i += 1) {\n      result = result || filters[i].call(null, item);\n    }\n\n    return result;\n  };\n};\n/**\n * Merge several collections.\n *\n * You can\\'t merge collections different _getEventID functions. Take case of use.\n * @param {...Collection} collections collection arguments to merge\n * @returns {Collection} merged collection.\n */\n// eslint-disable-next-line no-unused-vars\n\n\nCollection.merge = function (collections) {\n  // eslint-disable-line\n  var cols = aps.call(arguments),\n      newItems = {},\n      merged = new Collection(cols[0].getItemID),\n      extend = util.extend;\n  forEachArr(cols, function (col) {\n    extend(newItems, col.items);\n  });\n  merged.items = newItems;\n  merged.length = util.keys(merged.items).length;\n  return merged;\n};\n/**********\n * prototype props\n **********/\n\n/**\n * get model's unique id.\n * @param {object} item model instance.\n * @returns {number} model unique id.\n */\n\n\nCollection.prototype.getItemID = function (item) {\n  return item._id + '';\n};\n/**\n * add models.\n * @param {...*} item models to add this collection.\n */\n\n\nCollection.prototype.add = function (item) {\n  var id, ownItems;\n\n  if (arguments.length > 1) {\n    forEachArr(aps.call(arguments), function (o) {\n      this.add(o);\n    }, this);\n    return;\n  }\n\n  id = this.getItemID(item);\n  ownItems = this.items;\n\n  if (!ownItems[id]) {\n    this.length += 1;\n  }\n\n  ownItems[id] = item;\n};\n/**\n * remove models.\n * @param {...(object|string|number)} id model instance or unique id to delete.\n * @returns {array} deleted model list.\n */\n\n\nCollection.prototype.remove = function (id) {\n  var removed = [],\n      ownItems,\n      itemToRemove;\n\n  if (!this.length) {\n    return removed;\n  }\n\n  if (arguments.length > 1) {\n    removed = util.map(aps.call(arguments), function (id) {\n      return this.remove(id);\n    }, this);\n    return removed;\n  }\n\n  ownItems = this.items;\n\n  if (isObj(id)) {\n    id = this.getItemID(id);\n  }\n\n  if (!ownItems[id]) {\n    return removed;\n  }\n\n  this.length -= 1;\n  itemToRemove = ownItems[id];\n  delete ownItems[id];\n  return itemToRemove;\n};\n/**\n * remove all models in collection.\n */\n\n\nCollection.prototype.clear = function () {\n  this.items = {};\n  this.length = 0;\n};\n/**\n * check collection has specific model.\n * @param {(object|string|number|function)} id model instance or id or filter function to check\n * @returns {boolean} is has model?\n */\n\n\nCollection.prototype.has = function (id) {\n  var isFilter, has;\n\n  if (!this.length) {\n    return false;\n  }\n\n  isFilter = isFunc(id);\n  has = false;\n\n  if (isFilter) {\n    this.each(function (item) {\n      if (id(item) === true) {\n        has = true;\n        return false;\n      }\n\n      return true;\n    });\n  } else {\n    id = isObj(id) ? this.getItemID(id) : id;\n    has = util.isExisty(this.items[id]);\n  }\n\n  return has;\n};\n/**\n * invoke callback when model exist in collection.\n * @param {(string|number)} id model unique id.\n * @param {function} fn the callback.\n * @param {*} [context] callback context.\n */\n\n\nCollection.prototype.doWhenHas = function (id, fn, context) {\n  var item = this.items[id];\n\n  if (!util.isExisty(item)) {\n    return;\n  }\n\n  fn.call(context || this, item);\n};\n/**\n * Search model. and return new collection.\n * @param {function} filter filter function.\n * @returns {Collection} new collection with filtered models.\n * @example\n * collection.find(function(item) {\n *     return item.edited === true;\n * });\n *\n * function filter1(item) {\n *     return item.edited === false;\n * }\n *\n * function filter2(item) {\n *     return item.disabled === false;\n * }\n *\n * collection.find(Collection.and(filter1, filter2));\n *\n * collection.find(Collection.or(filter1, filter2));\n */\n\n\nCollection.prototype.find = function (filter) {\n  var result = new Collection();\n\n  if (this.hasOwnProperty('getItemID')) {\n    result.getItemID = this.getItemID;\n  }\n\n  this.each(function (item) {\n    if (filter(item) === true) {\n      result.add(item);\n    }\n  });\n  return result;\n};\n/**\n * Group element by specific key values.\n *\n * if key parameter is function then invoke it and use returned value.\n * @param {(string|number|function|array)} key key property or getter function. if string[] supplied, create each collection before grouping.\n * @param {function} [groupFunc] - function that return each group's key\n * @returns {object.<string, Collection>} grouped object\n * @example\n *\n * // pass `string`, `number`, `boolean` type value then group by property value.\n * collection.groupBy('gender');    // group by 'gender' property value.\n * collection.groupBy(50);          // group by '50' property value.\n *\n * // pass `function` then group by return value. each invocation `function` is called with `(item)`.\n * collection.groupBy(function(item) {\n *     if (item.score > 60) {\n *         return 'pass';\n *     }\n *     return 'fail';\n * });\n *\n * // pass `array` with first arguments then create each collection before grouping.\n * collection.groupBy(['go', 'ruby', 'javascript']);\n * // result: { 'go': empty Collection, 'ruby': empty Collection, 'javascript': empty Collection }\n *\n * // can pass `function` with `array` then group each elements.\n * collection.groupBy(['go', 'ruby', 'javascript'], function(item) {\n *     if (item.isFast) {\n *         return 'go';\n *     }\n *\n *     return item.name;\n * });\n */\n\n\nCollection.prototype.groupBy = function (key, groupFunc) {\n  var result = {},\n      collection,\n      baseValue,\n      keyIsFunc = isFunc(key),\n      getItemIDFn = this.getItemID;\n\n  if (util.isArray(key)) {\n    util.forEachArray(key, function (k) {\n      result[k + ''] = new Collection(getItemIDFn);\n    });\n\n    if (!groupFunc) {\n      return result;\n    }\n\n    key = groupFunc;\n    keyIsFunc = true;\n  }\n\n  this.each(function (item) {\n    if (keyIsFunc) {\n      baseValue = key(item);\n    } else {\n      baseValue = item[key];\n\n      if (isFunc(baseValue)) {\n        baseValue = baseValue.apply(item);\n      }\n    }\n\n    collection = result[baseValue];\n\n    if (!collection) {\n      collection = result[baseValue] = new Collection(getItemIDFn);\n    }\n\n    collection.add(item);\n  });\n  return result;\n};\n/**\n * Return single item in collection.\n *\n * Returned item is inserted in this collection firstly.\n * @returns {object} item.\n */\n\n\nCollection.prototype.single = function () {\n  var result;\n  this.each(function (item) {\n    result = item;\n    return false;\n  }, this);\n  return result;\n};\n/**\n * sort a basis of supplied compare function.\n * @param {function} compareFunction compareFunction\n * @returns {array} sorted array.\n */\n\n\nCollection.prototype.sort = function (compareFunction) {\n  var arr = [];\n  this.each(function (item) {\n    arr.push(item);\n  });\n\n  if (isFunc(compareFunction)) {\n    arr = arr.sort(compareFunction);\n  }\n\n  return arr;\n};\n/**\n * iterate each model element.\n *\n * when iteratee return false then break the loop.\n * @param {function} iteratee iteratee(item, index, items)\n * @param {*} [context] context\n */\n\n\nCollection.prototype.each = function (iteratee, context) {\n  forEachProp(this.items, iteratee, context || this);\n};\n/**\n * return new array with collection items.\n * @returns {array} new array.\n */\n\n\nCollection.prototype.toArray = function () {\n  if (!this.length) {\n    return [];\n  }\n\n  return util.map(this.items, function (item) {\n    return item;\n  });\n};\n\nmodule.exports = Collection;\n\n//# sourceURL=webpack://tui.colorPicker/./src/js/core/collection.js?");

/***/ }),

/***/ "./src/js/core/domevent.js":
/*!*********************************!*\
  !*** ./src/js/core/domevent.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @fileoverview Utility module for handling DOM events.\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar snippet = __webpack_require__(/*! tui-code-snippet */ \"tui-code-snippet\");\n\nvar util = snippet,\n    browser = util.browser,\n    eventKey = '_evt',\n    DRAG = {\n  START: ['touchstart', 'mousedown'],\n  END: {\n    mousedown: 'mouseup',\n    touchstart: 'touchend',\n    pointerdown: 'touchend',\n    MSPointerDown: 'touchend'\n  },\n  MOVE: {\n    mousedown: 'mousemove',\n    touchstart: 'touchmove',\n    pointerdown: 'touchmove',\n    MSPointerDown: 'touchmove'\n  }\n};\nvar domevent = {\n  /**\n   * Bind dom events.\n   * @param {HTMLElement} obj HTMLElement to bind events.\n   * @param {(string|object)} types Space splitted events names or eventName:handler object.\n   * @param {*} fn handler function or context for handler method.\n   * @param {*} [context] context object for handler method.\n   */\n  on: function (obj, types, fn, context) {\n    if (util.isString(types)) {\n      util.forEach(types.split(' '), function (type) {\n        domevent._on(obj, type, fn, context);\n      });\n      return;\n    }\n\n    util.forEachOwnProperties(types, function (handler, type) {\n      domevent._on(obj, type, handler, fn);\n    });\n  },\n\n  /**\n   * DOM event binding.\n   * @param {HTMLElement} obj HTMLElement to bind events.\n   * @param {String} type The name of events.\n   * @param {*} fn handler function\n   * @param {*} [context] context object for handler method.\n   * @private\n   */\n  _on: function (obj, type, fn, context) {\n    var id, handler, originHandler;\n    id = type + util.stamp(fn) + (context ? '_' + util.stamp(context) : '');\n\n    if (obj[eventKey] && obj[eventKey][id]) {\n      return;\n    }\n\n    handler = function (e) {\n      fn.call(context || obj, e || window.event);\n    };\n\n    originHandler = handler;\n\n    if ('addEventListener' in obj) {\n      if (type === 'mouseenter' || type === 'mouseleave') {\n        handler = function (e) {\n          e = e || window.event;\n\n          if (!domevent._checkMouse(obj, e)) {\n            return;\n          }\n\n          originHandler(e);\n        };\n\n        obj.addEventListener(type === 'mouseenter' ? 'mouseover' : 'mouseout', handler, false);\n      } else {\n        if (type === 'mousewheel') {\n          obj.addEventListener('DOMMouseScroll', handler, false);\n        }\n\n        obj.addEventListener(type, handler, false);\n      }\n    } else if ('attachEvent' in obj) {\n      obj.attachEvent('on' + type, handler);\n    }\n\n    obj[eventKey] = obj[eventKey] || {};\n    obj[eventKey][id] = handler;\n  },\n\n  /**\n   * Unbind DOM Event handler.\n   * @param {HTMLElement} obj HTMLElement to unbind.\n   * @param {(string|object)} types Space splitted events names or eventName:handler object.\n   * @param {*} fn handler function or context for handler method.\n   * @param {*} [context] context object for handler method.\n   */\n  off: function (obj, types, fn, context) {\n    if (util.isString(types)) {\n      util.forEach(types.split(' '), function (type) {\n        domevent._off(obj, type, fn, context);\n      });\n      return;\n    }\n\n    util.forEachOwnProperties(types, function (handler, type) {\n      domevent._off(obj, type, handler, fn);\n    });\n  },\n\n  /**\n   * Unbind DOM event handler.\n   * @param {HTMLElement} obj HTMLElement to unbind.\n   * @param {String} type The name of event to unbind.\n   * @param {function()} fn Event handler that supplied when binding.\n   * @param {*} context context object that supplied when binding.\n   * @private\n   */\n  _off: function (obj, type, fn, context) {\n    var id = type + util.stamp(fn) + (context ? '_' + util.stamp(context) : ''),\n        handler = obj[eventKey] && obj[eventKey][id];\n\n    if (!handler) {\n      return;\n    }\n\n    if ('removeEventListener' in obj) {\n      if (type === 'mouseenter' || type === 'mouseleave') {\n        obj.removeEventListener(type === 'mouseenter' ? 'mouseover' : 'mouseout', handler, false);\n      } else {\n        if (type === 'mousewheel') {\n          obj.removeEventListener('DOMMouseScroll', handler, false);\n        }\n\n        obj.removeEventListener(type, handler, false);\n      }\n    } else if ('detachEvent' in obj) {\n      try {\n        obj.detachEvent('on' + type, handler);\n      } catch (e) {} //eslint-disable-line\n\n    }\n\n    delete obj[eventKey][id];\n\n    if (util.keys(obj[eventKey]).length) {\n      return;\n    } // throw exception when deleting host object's property in below IE8\n\n\n    if (util.browser.msie && util.browser.version < 9) {\n      obj[eventKey] = null;\n      return;\n    }\n\n    delete obj[eventKey];\n  },\n\n  /**\n   * Bind DOM event. this event will unbind after invokes.\n   * @param {HTMLElement} obj HTMLElement to bind events.\n   * @param {(string|object)} types Space splitted events names or eventName:handler object.\n   * @param {*} fn handler function or context for handler method.\n   * @param {*} [context] context object for handler method.\n   */\n  once: function (obj, types, fn, context) {\n    var that = this;\n\n    if (util.isObject(types)) {\n      util.forEachOwnProperties(types, function (handler, type) {\n        domevent.once(obj, type, handler, fn);\n      });\n      return;\n    }\n\n    function onceHandler() {\n      fn.apply(context || obj, arguments);\n\n      that._off(obj, types, onceHandler, context);\n    }\n\n    domevent.on(obj, types, onceHandler, context);\n  },\n\n  /**\n   * Cancel event bubbling.\n   * @param {Event} e Event object.\n   */\n  stopPropagation: function (e) {\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    } else {\n      e.cancelBubble = true;\n    }\n  },\n\n  /**\n   * Cancel browser default actions.\n   * @param {Event} e Event object.\n   */\n  preventDefault: function (e) {\n    if (e.preventDefault) {\n      e.preventDefault();\n    } else {\n      e.returnValue = false;\n    }\n  },\n\n  /**\n   * Syntatic sugar of stopPropagation and preventDefault\n   * @param {Event} e Event object.\n   */\n  stop: function (e) {\n    domevent.preventDefault(e);\n    domevent.stopPropagation(e);\n  },\n\n  /**\n   * Stop scroll events.\n   * @param {HTMLElement} el HTML element to prevent scroll.\n   */\n  disableScrollPropagation: function (el) {\n    domevent.on(el, 'mousewheel MozMousePixelScroll', domevent.stopPropagation);\n  },\n\n  /**\n   * Stop all events related with click.\n   * @param {HTMLElement} el HTML element to prevent all event related with click.\n   */\n  disableClickPropagation: function (el) {\n    domevent.on(el, DRAG.START.join(' ') + ' click dblclick', domevent.stopPropagation);\n  },\n\n  /**\n   * Get mouse position from mouse event.\n   *\n   * If supplied relatveElement parameter then return relative position based on element.\n   * @param {Event} mouseEvent Mouse event object\n   * @param {HTMLElement} relativeElement HTML element that calculate relative position.\n   * @returns {number[]} mouse position.\n   */\n  getMousePosition: function (mouseEvent, relativeElement) {\n    var rect;\n\n    if (!relativeElement) {\n      return [mouseEvent.clientX, mouseEvent.clientY];\n    }\n\n    rect = relativeElement.getBoundingClientRect();\n    return [mouseEvent.clientX - rect.left - relativeElement.clientLeft, mouseEvent.clientY - rect.top - relativeElement.clientTop];\n  },\n\n  /**\n   * Normalize mouse wheel event that different each browsers.\n   * @param {MouseEvent} e Mouse wheel event.\n   * @returns {Number} delta\n   */\n  getWheelDelta: function (e) {\n    var delta = 0;\n\n    if (e.wheelDelta) {\n      delta = e.wheelDelta / 120;\n    }\n\n    if (e.detail) {\n      delta = -e.detail / 3;\n    }\n\n    return delta;\n  },\n\n  /**\n   * prevent firing mouseleave event when mouse entered child elements.\n   * @param {HTMLElement} el HTML element\n   * @param {MouseEvent} e Mouse event\n   * @returns {Boolean} leave?\n   * @private\n   */\n  _checkMouse: function (el, e) {\n    var related = e.relatedTarget;\n\n    if (!related) {\n      return true;\n    }\n\n    try {\n      while (related && related !== el) {\n        related = related.parentNode;\n      }\n    } catch (err) {\n      return false;\n    }\n\n    return related !== el;\n  },\n\n  /**\n   * Trigger specific events to html element.\n   * @param {HTMLElement} obj HTMLElement\n   * @param {string} type Event type name\n   * @param {object} [eventData] Event data\n   */\n  trigger: function (obj, type, eventData) {\n    var rMouseEvent = /(mouse|click)/;\n\n    if (util.isUndefined(eventData) && rMouseEvent.exec(type)) {\n      eventData = domevent.mouseEvent(type);\n    }\n\n    if (obj.dispatchEvent) {\n      obj.dispatchEvent(eventData);\n    } else if (obj.fireEvent) {\n      obj.fireEvent('on' + type, eventData);\n    }\n  },\n\n  /**\n   * Create virtual mouse event.\n   *\n   * Tested at\n   *\n   * - IE7 ~ IE11\n   * - Chrome\n   * - Firefox\n   * - Safari\n   * @param {string} type Event type\n   * @param {object} [eventObj] Event data\n   * @returns {MouseEvent} Virtual mouse event.\n   */\n  mouseEvent: function (type, eventObj) {\n    var evt, e;\n    e = util.extend({\n      bubbles: true,\n      cancelable: type !== 'mousemove',\n      view: window,\n      wheelDelta: 0,\n      detail: 0,\n      screenX: 0,\n      screenY: 0,\n      clientX: 0,\n      clientY: 0,\n      ctrlKey: false,\n      altKey: false,\n      shiftKey: false,\n      metaKey: false,\n      button: 0,\n      relatedTarget: undefined // eslint-disable-line\n\n    }, eventObj); // prevent throw error when inserting wheelDelta property to mouse event on below IE8\n\n    if (browser.msie && browser.version < 9) {\n      delete e.wheelDelta;\n    }\n\n    if (typeof document.createEvent === 'function') {\n      evt = document.createEvent('MouseEvents');\n      evt.initMouseEvent(type, e.bubbles, e.cancelable, e.view, e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, e.button, document.body.parentNode);\n    } else if (document.createEventObject) {\n      evt = document.createEventObject();\n      util.forEach(e, function (value, propName) {\n        evt[propName] = value;\n      }, this);\n      evt.button = {\n        0: 1,\n        1: 4,\n        2: 2\n      }[evt.button] || evt.button;\n    }\n\n    return evt;\n  },\n\n  /**\n   * Normalize mouse event's button attributes.\n   *\n   * Can detect which button is clicked by this method.\n   *\n   * Meaning of return numbers\n   *\n   * - 0: primary mouse button\n   * - 1: wheel button or center button\n   * - 2: secondary mouse button\n   * @param {MouseEvent} mouseEvent - The mouse event object want to know.\n   * @returns {number} - The value of meaning which button is clicked?\n   */\n  getMouseButton: function (mouseEvent) {\n    var primary = '0,1,3,5,7';\n    var secondary = '2,6';\n    var wheel = '4';\n    var button, result;\n    /* istanbul ignore else */\n\n    if (document.implementation.hasFeature('MouseEvents', '2.0')) {\n      return mouseEvent.button;\n    }\n\n    button = mouseEvent.button + '';\n\n    if (~primary.indexOf(button)) {\n      result = 0;\n    } else if (~secondary.indexOf(button)) {\n      result = 2;\n    } else if (~wheel.indexOf(button)) {\n      result = 1;\n    }\n\n    return result;\n  }\n};\nmodule.exports = domevent;\n\n//# sourceURL=webpack://tui.colorPicker/./src/js/core/domevent.js?");

/***/ }),

/***/ "./src/js/core/domutil.js":
/*!********************************!*\
  !*** ./src/js/core/domutil.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @fileoverview Utility modules for manipulate DOM elements.\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar snippet = __webpack_require__(/*! tui-code-snippet */ \"tui-code-snippet\");\n\nvar domevent = __webpack_require__(/*! ./domevent */ \"./src/js/core/domevent.js\");\n\nvar Collection = __webpack_require__(/*! ./collection */ \"./src/js/core/collection.js\");\n\nvar util = snippet,\n    posKey = '_pos',\n    supportSelectStart = 'onselectstart' in document,\n    prevSelectStyle = '',\n    domutil,\n    userSelectProperty;\nvar CSS_AUTO_REGEX = /^auto$|^$|%/;\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n\ndomutil = {\n  /**\n   * Create DOM element and return it.\n   * @param {string} tagName Tag name to append.\n   * @param {HTMLElement} [container] HTML element will be parent to created element.\n   * if not supplied, will use **document.body**\n   * @param {string} [className] Design class names to appling created element.\n   * @returns {HTMLElement} HTML element created.\n   */\n  appendHTMLElement: function (tagName, container, className) {\n    var el;\n    className = className || '';\n    el = document.createElement(tagName);\n    el.className = className;\n\n    if (container) {\n      container.appendChild(el);\n    } else {\n      document.body.appendChild(el);\n    }\n\n    return el;\n  },\n\n  /**\n   * Remove element from parent node.\n   * @param {HTMLElement} el - element to remove.\n   */\n  remove: function (el) {\n    if (el && el.parentNode) {\n      el.parentNode.removeChild(el);\n    }\n  },\n\n  /**\n   * Get element by id\n   * @param {string} id element id attribute\n   * @returns {HTMLElement} element\n   */\n  get: function (id) {\n    return document.getElementById(id);\n  },\n\n  /**\n   * Check supplied element is matched selector.\n   * @param {HTMLElement} el - element to check\n   * @param {string} selector - selector string to check\n   * @returns {boolean} match?\n   */\n  _matcher: function (el, selector) {\n    var cssClassSelector = /^\\./;\n    var idSelector = /^#/;\n    var result = el.nodeName.toLowerCase() === selector.toLowerCase();\n\n    if (cssClassSelector.test(selector)) {\n      result = domutil.hasClass(el, selector.replace('.', ''));\n    } else if (idSelector.test(selector)) {\n      result = el.id === selector.replace('#', '');\n    }\n\n    return result;\n  },\n\n  /**\n   * Find DOM element by specific selectors.\n   * below three selector only supported.\n   *\n   * 1. css selector\n   * 2. id selector\n   * 3. nodeName selector\n   * @param {string} selector selector\n   * @param {(HTMLElement|string)} [root] You can assign root element to find. if not supplied, document.body will use.\n   * @param {boolean|function} [multiple=false] - set true then return all elements that meet condition, if set function then use it filter function.\n   * @returns {HTMLElement} HTML element finded.\n   */\n  find: function (selector, root, multiple) {\n    var result = [],\n        found = false,\n        isFirst = util.isUndefined(multiple) || multiple === false,\n        isFilter = util.isFunction(multiple);\n\n    if (util.isString(root)) {\n      root = domutil.get(root);\n    }\n\n    root = root || window.document.body;\n\n    function recurse(el, selector) {\n      var childNodes = el.childNodes,\n          i = 0,\n          len = childNodes.length,\n          cursor;\n\n      for (; i < len; i += 1) {\n        cursor = childNodes[i];\n\n        if (cursor.nodeName === '#text') {\n          continue;\n        }\n\n        if (domutil._matcher(cursor, selector)) {\n          if (isFilter && multiple(cursor) || !isFilter) {\n            result.push(cursor);\n          }\n\n          if (isFirst) {\n            found = true;\n            break;\n          }\n        } else if (cursor.childNodes.length > 0) {\n          recurse(cursor, selector);\n\n          if (found) {\n            break;\n          }\n        }\n      }\n    }\n\n    recurse(root, selector);\n    return isFirst ? result[0] || null : result;\n  },\n\n  /**\n   * Find parent element recursively.\n   * @param {HTMLElement} el - base element to start find.\n   * @param {string} selector - selector string for find\n   * @returns {HTMLElement} - element finded or undefined.\n   */\n  closest: function (el, selector) {\n    var parent = el.parentNode;\n\n    if (domutil._matcher(el, selector)) {\n      return el;\n    }\n\n    while (parent && parent !== window.document.body) {\n      if (domutil._matcher(parent, selector)) {\n        return parent;\n      }\n\n      parent = parent.parentNode;\n    }\n  },\n\n  /**\n   * Return texts inside element.\n   * @param {HTMLElement} el target element\n   * @returns {string} text inside node\n   */\n  text: function (el) {\n    var ret = '',\n        i = 0,\n        nodeType = el.nodeType;\n\n    if (nodeType) {\n      if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n        // nodes that available contain other nodes\n        if (typeof el.textContent === 'string') {\n          return el.textContent;\n        }\n\n        for (el = el.firstChild; el; el = el.nextSibling) {\n          ret += domutil.text(el);\n        }\n      } else if (nodeType === 3 || nodeType === 4) {\n        // TEXT, CDATA SECTION\n        return el.nodeValue;\n      }\n    } else {\n      for (; el[i]; i += 1) {\n        ret += domutil.text(el[i]);\n      }\n    }\n\n    return ret;\n  },\n\n  /**\n   * Set data attribute to target element\n   * @param {HTMLElement} el - element to set data attribute\n   * @param {string} key - key\n   * @param {string|number} data - data value\n   */\n  setData: function (el, key, data) {\n    if ('dataset' in el) {\n      el.dataset[key] = data;\n      return;\n    }\n\n    el.setAttribute('data-' + key, data);\n  },\n\n  /**\n   * Get data value from data-attribute\n   * @param {HTMLElement} el - target element\n   * @param {string} key - key\n   * @returns {string} value\n   */\n  getData: function (el, key) {\n    if ('dataset' in el) {\n      return el.dataset[key];\n    }\n\n    return el.getAttribute('data-' + key);\n  },\n\n  /**\n   * Check element has specific design class name.\n   * @param {HTMLElement} el target element\n   * @param {string} name css class\n   * @returns {boolean} return true when element has that css class name\n   */\n  hasClass: function (el, name) {\n    var className;\n\n    if (!util.isUndefined(el.classList)) {\n      return el.classList.contains(name);\n    }\n\n    className = domutil.getClass(el);\n    return className.length > 0 && new RegExp('(^|\\\\s)' + name + '(\\\\s|$)').test(className);\n  },\n\n  /**\n   * Add design class to HTML element.\n   * @param {HTMLElement} el target element\n   * @param {string} name css class name\n   */\n  addClass: function (el, name) {\n    var className;\n\n    if (!util.isUndefined(el.classList)) {\n      util.forEachArray(name.split(' '), function (value) {\n        el.classList.add(value);\n      });\n    } else if (!domutil.hasClass(el, name)) {\n      className = domutil.getClass(el);\n      domutil.setClass(el, (className ? className + ' ' : '') + name);\n    }\n  },\n\n  /**\n   *\n   * Overwrite design class to HTML element.\n   * @param {HTMLElement} el target element\n   * @param {string} name css class name\n   */\n  setClass: function (el, name) {\n    if (util.isUndefined(el.className.baseVal)) {\n      el.className = name;\n    } else {\n      el.className.baseVal = name;\n    }\n  },\n\n  /**\n   * Element에 cssClass속성을 제거하는 메서드\n   * Remove specific design class from HTML element.\n   * @param {HTMLElement} el target element\n   * @param {string} name class name to remove\n   */\n  removeClass: function (el, name) {\n    var removed = '';\n\n    if (!util.isUndefined(el.classList)) {\n      el.classList.remove(name);\n    } else {\n      removed = (' ' + domutil.getClass(el) + ' ').replace(' ' + name + ' ', ' ');\n      domutil.setClass(el, trim(removed));\n    }\n  },\n\n  /**\n   * Get HTML element's design classes.\n   * @param {HTMLElement} el target element\n   * @returns {string} element css class name\n   */\n  getClass: function (el) {\n    if (!el || !el.className) {\n      return '';\n    }\n\n    return util.isUndefined(el.className.baseVal) ? el.className : el.className.baseVal;\n  },\n\n  /**\n   * Get specific CSS style value from HTML element.\n   * @param {HTMLElement} el target element\n   * @param {string} style css attribute name\n   * @returns {(string|null)} css style value\n   */\n  getStyle: function (el, style) {\n    var value = el.style[style] || el.currentStyle && el.currentStyle[style],\n        css;\n\n    if ((!value || value === 'auto') && document.defaultView) {\n      css = document.defaultView.getComputedStyle(el, null);\n      value = css ? css[style] : null;\n    }\n\n    return value === 'auto' ? null : value;\n  },\n\n  /**\n   * get element's computed style values.\n   *\n   * in lower IE8. use polyfill function that return object. it has only one function 'getPropertyValue'\n   * @param {HTMLElement} el - element want to get style.\n   * @returns {object} virtual CSSStyleDeclaration object.\n   */\n  getComputedStyle: function (el) {\n    var defaultView = document.defaultView;\n\n    if (!defaultView || !defaultView.getComputedStyle) {\n      return {\n        getPropertyValue: function (prop) {\n          var re = /(\\-([a-z]){1})/g;\n\n          if (prop === 'float') {\n            prop = 'styleFloat';\n          }\n\n          if (re.test(prop)) {\n            prop = prop.replace(re, function () {\n              return arguments[2].toUpperCase();\n            });\n          }\n\n          return el.currentStyle[prop] ? el.currentStyle[prop] : null;\n        }\n      };\n    }\n\n    return document.defaultView.getComputedStyle(el);\n  },\n\n  /**\n   * Set position CSS style.\n   * @param {HTMLElement} el target element\n   * @param {number} [x=0] left pixel value.\n   * @param {number} [y=0] top pixel value.\n   */\n  setPosition: function (el, x, y) {\n    x = util.isUndefined(x) ? 0 : x;\n    y = util.isUndefined(y) ? 0 : y;\n    el[posKey] = [x, y];\n    el.style.left = x + 'px';\n    el.style.top = y + 'px';\n  },\n\n  /**\n   * Get position from HTML element.\n   * @param {HTMLElement} el target element\n   * @param {boolean} [clear=false] clear cache before calculating position.\n   * @returns {number[]} point\n   */\n  getPosition: function (el, clear) {\n    var left, top, bound;\n\n    if (clear) {\n      el[posKey] = null;\n    }\n\n    if (el[posKey]) {\n      return el[posKey];\n    }\n\n    left = 0;\n    top = 0;\n\n    if ((CSS_AUTO_REGEX.test(el.style.left) || CSS_AUTO_REGEX.test(el.style.top)) && 'getBoundingClientRect' in el) {\n      // 엘리먼트의 left또는 top이 'auto'일 때 수단\n      bound = el.getBoundingClientRect();\n      left = bound.left;\n      top = bound.top;\n    } else {\n      left = parseFloat(el.style.left || 0);\n      top = parseFloat(el.style.top || 0);\n    }\n\n    return [left, top];\n  },\n\n  /**\n   * Return element's size\n   * @param {HTMLElement} el target element\n   * @returns {number[]} width, height\n   */\n  getSize: function (el) {\n    var bound,\n        width = domutil.getStyle(el, 'width'),\n        height = domutil.getStyle(el, 'height');\n\n    if ((CSS_AUTO_REGEX.test(width) || CSS_AUTO_REGEX.test(height)) && 'getBoundingClientRect' in el) {\n      bound = el.getBoundingClientRect();\n      width = bound.width;\n      height = bound.height;\n    } else {\n      width = parseFloat(width || 0);\n      height = parseFloat(height || 0);\n    }\n\n    return [width, height];\n  },\n\n  /**\n   * Check specific CSS style is available.\n   * @param {array} props property name to testing\n   * @returns {(string|boolean)} return true when property is available\n   * @example\n   * var props = ['transform', '-webkit-transform'];\n   * domutil.testProp(props);    // 'transform'\n   */\n  testProp: function (props) {\n    var style = document.documentElement.style,\n        i = 0,\n        len = props.length;\n\n    for (; i < len; i += 1) {\n      if (props[i] in style) {\n        return props[i];\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * Get form data\n   * @param {HTMLFormElement} formElement - form element to extract data\n   * @returns {object} form data\n   */\n  getFormData: function (formElement) {\n    var groupedByName = new Collection(function () {\n      return this.length;\n    }),\n        noDisabledFilter = function (el) {\n      return !el.disabled;\n    },\n        output = {};\n\n    groupedByName.add.apply(groupedByName, domutil.find('input', formElement, noDisabledFilter).concat(domutil.find('select', formElement, noDisabledFilter)).concat(domutil.find('textarea', formElement, noDisabledFilter)));\n    groupedByName = groupedByName.groupBy(function (el) {\n      return el && el.getAttribute('name') || '_other';\n    });\n    util.forEach(groupedByName, function (elements, name) {\n      if (name === '_other') {\n        return;\n      }\n\n      elements.each(function (el) {\n        var nodeName = el.nodeName.toLowerCase(),\n            type = el.type,\n            result = [];\n\n        if (type === 'radio') {\n          result = [elements.find(function (el) {\n            return el.checked;\n          }).toArray().pop()];\n        } else if (type === 'checkbox') {\n          result = elements.find(function (el) {\n            return el.checked;\n          }).toArray();\n        } else if (nodeName === 'select') {\n          elements.find(function (el) {\n            return !!el.childNodes.length;\n          }).each(function (el) {\n            result = result.concat(domutil.find('option', el, function (opt) {\n              return opt.selected;\n            }));\n          });\n        } else {\n          result = elements.find(function (el) {\n            return el.value !== '';\n          }).toArray();\n        }\n\n        result = util.map(result, function (el) {\n          return el.value;\n        });\n\n        if (!result.length) {\n          result = '';\n        } else if (result.length === 1) {\n          result = result[0];\n        }\n\n        output[name] = result;\n      });\n    });\n    return output;\n  }\n};\nuserSelectProperty = domutil.testProp(['userSelect', 'WebkitUserSelect', 'OUserSelect', 'MozUserSelect', 'msUserSelect']);\n/**\n * Disable browser's text selection behaviors.\n * @method\n */\n\ndomutil.disableTextSelection = function () {\n  if (supportSelectStart) {\n    return function () {\n      domevent.on(window, 'selectstart', domevent.preventDefault);\n    };\n  }\n\n  return function () {\n    var style = document.documentElement.style;\n    prevSelectStyle = style[userSelectProperty];\n    style[userSelectProperty] = 'none';\n  };\n}();\n/**\n * Enable browser's text selection behaviors.\n * @method\n */\n\n\ndomutil.enableTextSelection = function () {\n  if (supportSelectStart) {\n    return function () {\n      domevent.off(window, 'selectstart', domevent.preventDefault);\n    };\n  }\n\n  return function () {\n    document.documentElement.style[userSelectProperty] = prevSelectStyle;\n  };\n}();\n/**\n * Disable browser's image drag behaviors.\n */\n\n\ndomutil.disableImageDrag = function () {\n  domevent.on(window, 'dragstart', domevent.preventDefault);\n};\n/**\n * Enable browser's image drag behaviors.\n */\n\n\ndomutil.enableImageDrag = function () {\n  domevent.off(window, 'dragstart', domevent.preventDefault);\n};\n/**\n * Replace matched property with template\n * @param {string} template - String of template\n * @param {Object} propObj - Properties\n * @returns {string} Replaced template string\n */\n\n\ndomutil.applyTemplate = function (template, propObj) {\n  var newTemplate = template.replace(/\\{\\{(\\w*)\\}\\}/g, function (value, prop) {\n    return propObj.hasOwnProperty(prop) ? propObj[prop] : '';\n  });\n  return newTemplate;\n};\n\nmodule.exports = domutil;\n\n//# sourceURL=webpack://tui.colorPicker/./src/js/core/domutil.js?");

/***/ }),

/***/ "./src/js/core/drag.js":
/*!*****************************!*\
  !*** ./src/js/core/drag.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * @fileoverview General drag handler\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar util = __webpack_require__(/*! tui-code-snippet */ \"tui-code-snippet\");\n\nvar domutil = __webpack_require__(/*! ./domutil */ \"./src/js/core/domutil.js\");\n\nvar domevent = __webpack_require__(/*! ./domevent */ \"./src/js/core/domevent.js\");\n/**\n * @constructor\n * @mixes CustomEvents\n * @param {object} options - options for drag handler\n * @param {number} [options.distance=10] - distance in pixels after mouse must move before dragging should start\n * @param {HTMLElement} container - container element to bind drag events\n * @ignore\n */\n\n\nfunction Drag(options, container) {\n  domevent.on(container, 'mousedown', this._onMouseDown, this);\n  this.options = util.extend({\n    distance: 10\n  }, options);\n  /**\n   * @type {HTMLElement}\n   */\n\n  this.container = container;\n  /**\n   * @type {boolean}\n   */\n\n  this._isMoved = false;\n  /**\n   * dragging distance in pixel between mousedown and firing dragStart events\n   * @type {number}\n   */\n\n  this._distance = 0;\n  /**\n   * @type {boolean}\n   */\n\n  this._dragStartFired = false;\n  /**\n   * @type {object}\n   */\n\n  this._dragStartEventData = null;\n}\n/**\n * Destroy method.\n */\n\n\nDrag.prototype.destroy = function () {\n  domevent.off(this.container, 'mousedown', this._onMouseDown, this);\n  this.options = this.container = this._isMoved = this._distance = this._dragStartFired = this._dragStartEventData = null;\n};\n/**\n * Toggle events for mouse dragging.\n * @param {boolean} toBind - bind events related with dragging when supplied \"true\"\n */\n\n\nDrag.prototype._toggleDragEvent = function (toBind) {\n  var container = this.container,\n      domMethod,\n      method;\n\n  if (toBind) {\n    domMethod = 'on';\n    method = 'disable';\n  } else {\n    domMethod = 'off';\n    method = 'enable';\n  }\n\n  domutil[method + 'TextSelection'](container);\n  domutil[method + 'ImageDrag'](container);\n  domevent[domMethod](global.document, {\n    mousemove: this._onMouseMove,\n    mouseup: this._onMouseUp\n  }, this);\n};\n/**\n * Normalize mouse event object.\n * @param {MouseEvent} mouseEvent - mouse event object.\n * @returns {object} normalized mouse event data.\n */\n\n\nDrag.prototype._getEventData = function (mouseEvent) {\n  return {\n    target: mouseEvent.target || mouseEvent.srcElement,\n    originEvent: mouseEvent\n  };\n};\n/**\n * MouseDown DOM event handler.\n * @param {MouseEvent} mouseDownEvent MouseDown event object.\n */\n\n\nDrag.prototype._onMouseDown = function (mouseDownEvent) {\n  // only primary button can start drag.\n  if (domevent.getMouseButton(mouseDownEvent) !== 0) {\n    return;\n  }\n\n  this._distance = 0;\n  this._dragStartFired = false;\n  this._dragStartEventData = this._getEventData(mouseDownEvent);\n\n  this._toggleDragEvent(true);\n};\n/**\n * MouseMove DOM event handler.\n * @emits Drag#drag\n * @emits Drag#dragStart\n * @param {MouseEvent} mouseMoveEvent MouseMove event object.\n */\n\n\nDrag.prototype._onMouseMove = function (mouseMoveEvent) {\n  var distance = this.options.distance; // prevent automatic scrolling.\n\n  domevent.preventDefault(mouseMoveEvent);\n  this._isMoved = true;\n\n  if (this._distance < distance) {\n    this._distance += 1;\n    return;\n  }\n\n  if (!this._dragStartFired) {\n    this._dragStartFired = true;\n    /**\n     * Drag starts events. cancelable.\n     * @event Drag#dragStart\n     * @type {object}\n     * @property {HTMLElement} target - target element in this event.\n     * @property {MouseEvent} originEvent - original mouse event object.\n     */\n\n    if (!this.invoke('dragStart', this._dragStartEventData)) {\n      this._toggleDragEvent(false);\n\n      return;\n    }\n  }\n  /**\n   * Events while dragging.\n   * @event Drag#drag\n   * @type {object}\n   * @property {HTMLElement} target - target element in this event.\n   * @property {MouseEvent} originEvent - original mouse event object.\n   */\n\n\n  this.fire('drag', this._getEventData(mouseMoveEvent));\n};\n/**\n * MouseUp DOM event handler.\n * @param {MouseEvent} mouseUpEvent MouseUp event object.\n * @emits Drag#dragEnd\n * @emits Drag#click\n */\n\n\nDrag.prototype._onMouseUp = function (mouseUpEvent) {\n  this._toggleDragEvent(false); // emit \"click\" event when not emitted drag event between mousedown and mouseup.\n\n\n  if (this._isMoved) {\n    this._isMoved = false;\n    /**\n     * Drag end events.\n     * @event Drag#dragEnd\n     * @type {MouseEvent}\n     * @property {HTMLElement} target - target element in this event.\n     * @property {MouseEvent} originEvent - original mouse event object.\n     */\n\n    this.fire('dragEnd', this._getEventData(mouseUpEvent));\n    return;\n  }\n  /**\n   * Click events.\n   * @event Drag#click\n   * @type {MouseEvent}\n   * @property {HTMLElement} target - target element in this event.\n   * @property {MouseEvent} originEvent - original mouse event object.\n   */\n\n\n  this.fire('click', this._getEventData(mouseUpEvent));\n};\n\nutil.CustomEvents.mixin(Drag);\nmodule.exports = Drag;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://tui.colorPicker/./src/js/core/drag.js?");

/***/ }),

/***/ "./src/js/core/view.js":
/*!*****************************!*\
  !*** ./src/js/core/view.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @fileoverview The base class of views.\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar util = __webpack_require__(/*! tui-code-snippet */ \"tui-code-snippet\");\n\nvar domutil = __webpack_require__(/*! ./domutil */ \"./src/js/core/domutil.js\");\n\nvar Collection = __webpack_require__(/*! ./collection */ \"./src/js/core/collection.js\");\n/**\n * Base class of views.\n *\n * All views create own container element inside supplied container element.\n * @constructor\n * @param {options} options The object for describe view's specs.\n * @param {HTMLElement} container Default container element for view. you can use this element for this.container syntax.\n * @ignore\n */\n\n\nfunction View(options, container) {\n  var id = util.stamp(this);\n  options = options || {};\n\n  if (util.isUndefined(container)) {\n    container = domutil.appendHTMLElement('div');\n  }\n\n  domutil.addClass(container, 'tui-view-' + id);\n  /**\n   * unique id\n   * @type {number}\n   */\n\n  this.id = id;\n  /**\n   * base element of view.\n   * @type {HTMLDIVElement}\n   */\n\n  this.container = container;\n  /**\n   * child views.\n   * @type {Collection}\n   */\n\n  this.childs = new Collection(function (view) {\n    return util.stamp(view);\n  });\n  /**\n   * parent view instance.\n   * @type {View}\n   */\n\n  this.parent = null;\n}\n/**\n * Add child views.\n * @param {View} view The view instance to add.\n * @param {function} [fn] Function for invoke before add. parent view class is supplied first arguments.\n */\n\n\nView.prototype.addChild = function (view, fn) {\n  if (fn) {\n    fn.call(view, this);\n  } // add parent view\n\n\n  view.parent = this;\n  this.childs.add(view);\n};\n/**\n * Remove added child view.\n * @param {(number|View)} id View id or instance itself to remove.\n * @param {function} [fn] Function for invoke before remove. parent view class is supplied first arguments.\n */\n\n\nView.prototype.removeChild = function (id, fn) {\n  var view = util.isNumber(id) ? this.childs.items[id] : id;\n  id = util.stamp(view);\n\n  if (fn) {\n    fn.call(view, this);\n  }\n\n  this.childs.remove(id);\n};\n/**\n * Render view recursively.\n */\n\n\nView.prototype.render = function () {\n  this.childs.each(function (childView) {\n    childView.render();\n  });\n};\n/**\n * Invoke function recursively.\n * @param {function} fn - function to invoke child view recursively\n * @param {boolean} [skipThis=false] - set true then skip invoke with this(root) view.\n */\n\n\nView.prototype.recursive = function (fn, skipThis) {\n  if (!util.isFunction(fn)) {\n    return;\n  }\n\n  if (!skipThis) {\n    fn(this);\n  }\n\n  this.childs.each(function (childView) {\n    childView.recursive(fn);\n  });\n};\n/**\n * Resize view recursively to parent.\n */\n\n\nView.prototype.resize = function () {\n  var args = Array.prototype.slice.call(arguments),\n      parent = this.parent;\n\n  while (parent) {\n    if (util.isFunction(parent._onResize)) {\n      parent._onResize.apply(parent, args);\n    }\n\n    parent = parent.parent;\n  }\n};\n/**\n * Invoking method before destroying.\n */\n\n\nView.prototype._beforeDestroy = function () {};\n/**\n * Clear properties\n */\n\n\nView.prototype._destroy = function () {\n  this._beforeDestroy();\n\n  this.childs.clear();\n  this.container.innerHTML = '';\n  this.id = this.parent = this.childs = this.container = null;\n};\n/**\n * Destroy child view recursively.\n * @param {boolean} isChildView - Whether it is the child view or not\n */\n\n\nView.prototype.destroy = function (isChildView) {\n  this.childs.each(function (childView) {\n    childView.destroy(true);\n\n    childView._destroy();\n  });\n\n  if (isChildView) {\n    return;\n  }\n\n  this._destroy();\n};\n/**\n * Calculate view's container element bound.\n * @returns {object} The bound of container element.\n */\n\n\nView.prototype.getViewBound = function () {\n  var container = this.container,\n      position = domutil.getPosition(container),\n      size = domutil.getSize(container);\n  return {\n    x: position[0],\n    y: position[1],\n    width: size[0],\n    height: size[1]\n  };\n};\n\nmodule.exports = View;\n\n//# sourceURL=webpack://tui.colorPicker/./src/js/core/view.js?");

/***/ }),

/***/ "./src/js/factory.js":
/*!***************************!*\
  !*** ./src/js/factory.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @fileoverview ColorPicker factory module\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar util = __webpack_require__(/*! tui-code-snippet */ \"tui-code-snippet\");\n\nvar colorutil = __webpack_require__(/*! ./colorutil */ \"./src/js/colorutil.js\");\n\nvar Layout = __webpack_require__(/*! ./layout */ \"./src/js/layout.js\");\n\nvar Palette = __webpack_require__(/*! ./palette */ \"./src/js/palette.js\");\n\nvar Slider = __webpack_require__(/*! ./slider */ \"./src/js/slider.js\");\n/**\n * Create an unique id for a color-picker instance.\n * @private\n */\n\n\nvar currentId = 0;\n\nfunction generateId() {\n  currentId += 1;\n  return currentId;\n}\n/**\n * @constructor\n * @param {object} options - options for colorpicker component\n *  @param {HTMLDivElement} options.container - container element\n *  @param {string} [options.color='#ffffff'] - default selected color\n *  @param {string[]} [options.preset] - color preset for palette (use base16 palette if not supplied)\n *  @param {string} [options.cssPrefix='tui-colorpicker-'] - css prefix text for each child elements\n *  @param {string} [options.detailTxt='Detail'] - text for detail button.\n *  @param {boolean} [options.usageStatistics=true] - Let us know the hostname. If you don't want to send the hostname, please set to false.\n * @example\n * var colorPicker = tui.colorPicker; // or require('tui-color-picker')\n *\n * var instance = colorPicker.create({\n *   container: document.getElementById('color-picker')\n * });\n */\n\n\nfunction ColorPicker(options) {\n  var layout;\n\n  if (!(this instanceof ColorPicker)) {\n    return new ColorPicker(options);\n  }\n  /**\n   * Option object\n   * @type {object}\n   * @private\n   */\n\n\n  options = this.options = util.extend({\n    container: null,\n    color: '#f8f8f8',\n    preset: ['#181818', '#282828', '#383838', '#585858', '#b8b8b8', '#d8d8d8', '#e8e8e8', '#f8f8f8', '#ab4642', '#dc9656', '#f7ca88', '#a1b56c', '#86c1b9', '#7cafc2', '#ba8baf', '#a16946'],\n    cssPrefix: 'tui-colorpicker-',\n    detailTxt: 'Detail',\n    id: generateId(),\n    usageStatistics: true\n  }, options);\n\n  if (!options.container) {\n    throw new Error('ColorPicker(): need container option.');\n  }\n  /**********\n   * Create layout view\n   **********/\n\n  /**\n   * @type {Layout}\n   * @private\n   */\n\n\n  layout = this.layout = new Layout(options, options.container);\n  /**********\n   * Create palette view\n   **********/\n\n  this.palette = new Palette(options, layout.container);\n  this.palette.on({\n    _selectColor: this._onSelectColorInPalette,\n    _toggleSlider: this._onToggleSlider\n  }, this);\n  /**********\n   * Create slider view\n   **********/\n\n  this.slider = new Slider(options, layout.container);\n  this.slider.on('_selectColor', this._onSelectColorInSlider, this);\n  /**********\n   * Add child views\n   **********/\n\n  layout.addChild(this.palette);\n  layout.addChild(this.slider);\n  this.render(options.color);\n\n  if (options.usageStatistics) {\n    util.sendHostname('color-picker', 'UA-129987462-1');\n  }\n}\n/**\n * Handler method for Palette#_selectColor event\n * @private\n * @fires ColorPicker#selectColor\n * @param {object} selectColorEventData - event data\n */\n\n\nColorPicker.prototype._onSelectColorInPalette = function (selectColorEventData) {\n  var color = selectColorEventData.color,\n      opt = this.options;\n\n  if (!colorutil.isValidRGB(color) && color !== '') {\n    this.render();\n    return;\n  }\n  /**\n   * @event ColorPicker#selectColor\n   * @type {object}\n   * @property {string} color - selected color (hex string)\n   * @property {string} origin - flags for represent the source of event fires.\n   */\n\n\n  this.fire('selectColor', {\n    color: color,\n    origin: 'palette'\n  });\n\n  if (opt.color === color) {\n    return;\n  }\n\n  opt.color = color;\n  this.render(color);\n};\n/**\n * Handler method for Palette#_toggleSlider event\n * @private\n */\n\n\nColorPicker.prototype._onToggleSlider = function () {\n  this.slider.toggle(!this.slider.isVisible());\n};\n/**\n * Handler method for Slider#_selectColor event\n * @private\n * @fires ColorPicker#selectColor\n * @param {object} selectColorEventData - event data\n */\n\n\nColorPicker.prototype._onSelectColorInSlider = function (selectColorEventData) {\n  var color = selectColorEventData.color,\n      opt = this.options;\n  /**\n   * @event ColorPicker#selectColor\n   * @type {object}\n   * @property {string} color - selected color (hex string)\n   * @property {string} origin - flags for represent the source of event fires.\n   * @ignore\n   */\n\n  this.fire('selectColor', {\n    color: color,\n    origin: 'slider'\n  });\n\n  if (opt.color === color) {\n    return;\n  }\n\n  opt.color = color;\n  this.palette.render(color);\n};\n/**********\n * PUBLIC API\n **********/\n\n/**\n * Set color to colorpicker instance.<br>\n * The string parameter must be hex color value\n * @param {string} hexStr - hex formatted color string\n * @example\n * instance.setColor('#ffff00');\n */\n\n\nColorPicker.prototype.setColor = function (hexStr) {\n  if (!colorutil.isValidRGB(hexStr)) {\n    throw new Error('ColorPicker#setColor(): need valid hex string color value');\n  }\n\n  this.options.color = hexStr;\n  this.render(hexStr);\n};\n/**\n * Get hex color string of current selected color in colorpicker instance.\n * @returns {string} hex string formatted color\n * @example\n * instance.setColor('#ffff00');\n * instance.getColor(); // '#ffff00';\n */\n\n\nColorPicker.prototype.getColor = function () {\n  return this.options.color;\n};\n/**\n * Toggle colorpicker element. set true then reveal colorpicker view.\n * @param {boolean} [isShow=false] - A flag to show\n * @example\n * instance.toggle(false); // hide\n * instance.toggle(); // hide\n * instance.toggle(true); // show\n */\n\n\nColorPicker.prototype.toggle = function (isShow) {\n  this.layout.container.style.display = !!isShow ? 'block' : 'none';\n};\n/**\n * Render colorpicker\n * @param {string} [color] - selected color\n * @ignore\n */\n\n\nColorPicker.prototype.render = function (color) {\n  this.layout.render(color || this.options.color);\n};\n/**\n * Destroy colorpicker instance.\n * @example\n * instance.destroy(); // DOM-element is removed\n */\n\n\nColorPicker.prototype.destroy = function () {\n  this.layout.destroy();\n  this.options.container.innerHTML = '';\n  this.layout = this.slider = this.palette = this.options = null;\n};\n\nutil.CustomEvents.mixin(ColorPicker);\nmodule.exports = ColorPicker;\n\n//# sourceURL=webpack://tui.colorPicker/./src/js/factory.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domutil = __webpack_require__(/*! ./core/domutil */ \"./src/js/core/domutil.js\");\n\nvar domevent = __webpack_require__(/*! ./core/domevent */ \"./src/js/core/domevent.js\");\n\nvar Collection = __webpack_require__(/*! ./core/collection */ \"./src/js/core/collection.js\");\n\nvar View = __webpack_require__(/*! ./core/view */ \"./src/js/core/view.js\");\n\nvar Drag = __webpack_require__(/*! ./core/drag */ \"./src/js/core/drag.js\");\n\nvar create = __webpack_require__(/*! ./factory */ \"./src/js/factory.js\");\n\nvar Palette = __webpack_require__(/*! ./palette */ \"./src/js/palette.js\");\n\nvar Slider = __webpack_require__(/*! ./slider */ \"./src/js/slider.js\");\n\nvar colorutil = __webpack_require__(/*! ./colorutil */ \"./src/js/colorutil.js\");\n\nvar svgvml = __webpack_require__(/*! ./svgvml */ \"./src/js/svgvml.js\");\n\nvar colorPicker = {\n  domutil: domutil,\n  domevent: domevent,\n  Collection: Collection,\n  View: View,\n  Drag: Drag,\n  create: create,\n  Palette: Palette,\n  Slider: Slider,\n  colorutil: colorutil,\n  svgvml: svgvml\n};\nmodule.exports = colorPicker;\n\n//# sourceURL=webpack://tui.colorPicker/./src/js/index.js?");

/***/ }),

/***/ "./src/js/layout.js":
/*!**************************!*\
  !*** ./src/js/layout.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @fileoverview ColorPicker layout module\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar util = __webpack_require__(/*! tui-code-snippet */ \"tui-code-snippet\");\n\nvar domutil = __webpack_require__(/*! ./core/domutil */ \"./src/js/core/domutil.js\");\n\nvar View = __webpack_require__(/*! ./core/view */ \"./src/js/core/view.js\");\n/**\n * @constructor\n * @extends {View}\n * @param {object} options - option object\n *  @param {string} options.cssPrefix - css prefix for each child elements\n * @param {HTMLDivElement} container - container\n * @ignore\n */\n\n\nfunction Layout(options, container) {\n  /**\n   * option object\n   * @type {object}\n   */\n  this.options = util.extend({\n    cssPrefix: 'tui-colorpicker-'\n  }, options);\n  container = domutil.appendHTMLElement('div', container, this.options.cssPrefix + 'container');\n  View.call(this, options, container);\n  this.render();\n}\n\nutil.inherit(Layout, View);\n/**\n * @override\n * @param {string} [color] - selected color\n */\n\nLayout.prototype.render = function (color) {\n  this.recursive(function (view) {\n    view.render(color);\n  }, true);\n};\n\nmodule.exports = Layout;\n\n//# sourceURL=webpack://tui.colorPicker/./src/js/layout.js?");

/***/ }),

/***/ "./src/js/palette.js":
/*!***************************!*\
  !*** ./src/js/palette.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @fileoverview Color palette view\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar util = __webpack_require__(/*! tui-code-snippet */ \"tui-code-snippet\");\n\nvar domutil = __webpack_require__(/*! ./core/domutil */ \"./src/js/core/domutil.js\");\n\nvar colorutil = __webpack_require__(/*! ./colorutil */ \"./src/js/colorutil.js\");\n\nvar domevent = __webpack_require__(/*! ./core/domevent */ \"./src/js/core/domevent.js\");\n\nvar View = __webpack_require__(/*! ./core/view */ \"./src/js/core/view.js\");\n\nvar tmpl = __webpack_require__(/*! ../template/palette */ \"./src/template/palette.js\");\n/**\n * @constructor\n * @extends {View}\n * @mixes CustomEvents\n * @param {object} options - options for color palette view\n *  @param {string[]} options.preset - color list\n * @param {HTMLDivElement} container - container element\n * @ignore\n */\n\n\nfunction Palette(options, container) {\n  /**\n   * option object\n   * @type {object}\n   */\n  this.options = util.extend({\n    cssPrefix: 'tui-colorpicker-',\n    preset: ['#181818', '#282828', '#383838', '#585858', '#B8B8B8', '#D8D8D8', '#E8E8E8', '#F8F8F8', '#AB4642', '#DC9656', '#F7CA88', '#A1B56C', '#86C1B9', '#7CAFC2', '#BA8BAF', '#A16946'],\n    detailTxt: 'Detail'\n  }, options);\n  container = domutil.appendHTMLElement('div', container, this.options.cssPrefix + 'palette-container');\n  View.call(this, options, container);\n}\n\nutil.inherit(Palette, View);\n/**\n * Mouse click event handler\n * @fires Palette#_selectColor\n * @fires Palette#_toggleSlider\n * @param {MouseEvent} clickEvent - mouse event object\n */\n\nPalette.prototype._onClick = function (clickEvent) {\n  var options = this.options,\n      target = clickEvent.srcElement || clickEvent.target,\n      eventData = {};\n\n  if (domutil.hasClass(target, options.cssPrefix + 'palette-button')) {\n    eventData.color = target.value;\n    /**\n     * @event Palette#_selectColor\n     * @type {object}\n     * @property {string} color - selected color value\n     */\n\n    this.fire('_selectColor', eventData);\n    return;\n  }\n\n  if (domutil.hasClass(target, options.cssPrefix + 'palette-toggle-slider')) {\n    /**\n     * @event Palette#_toggleSlider\n     */\n    this.fire('_toggleSlider');\n  }\n};\n/**\n * Textbox change event handler\n * @fires Palette#_selectColor\n * @param {Event} changeEvent - change event object\n */\n\n\nPalette.prototype._onChange = function (changeEvent) {\n  var options = this.options,\n      target = changeEvent.srcElement || changeEvent.target,\n      eventData = {};\n\n  if (domutil.hasClass(target, options.cssPrefix + 'palette-hex')) {\n    eventData.color = target.value;\n    /**\n     * @event Palette#_selectColor\n     * @type {object}\n     * @property {string} color - selected color value\n     */\n\n    this.fire('_selectColor', eventData);\n  }\n};\n/**\n * Invoke before destory\n * @override\n */\n\n\nPalette.prototype._beforeDestroy = function () {\n  this._toggleEvent(false);\n};\n/**\n * Toggle view DOM events\n * @param {boolean} [onOff=false] - true to bind event.\n */\n\n\nPalette.prototype._toggleEvent = function (onOff) {\n  var options = this.options,\n      container = this.container,\n      method = domevent[!!onOff ? 'on' : 'off'],\n      hexTextBox;\n  method(container, 'click', this._onClick, this);\n  hexTextBox = domutil.find('.' + options.cssPrefix + 'palette-hex', container);\n\n  if (hexTextBox) {\n    method(hexTextBox, 'change', this._onChange, this);\n  }\n};\n/**\n * Render palette\n * @override\n */\n\n\nPalette.prototype.render = function (color) {\n  var options = this.options,\n      html = '';\n\n  this._toggleEvent(false);\n\n  html = tmpl.layout.replace('{{colorList}}', util.map(options.preset, function (itemColor) {\n    var itemHtml = '';\n    var style = '';\n\n    if (colorutil.isValidRGB(itemColor)) {\n      style = domutil.applyTemplate(tmpl.itemStyle, {\n        color: itemColor\n      });\n    }\n\n    itemHtml = domutil.applyTemplate(tmpl.item, {\n      itemStyle: style,\n      itemClass: !itemColor ? ' ' + options.cssPrefix + 'color-transparent' : '',\n      color: itemColor,\n      cssPrefix: options.cssPrefix,\n      selected: itemColor === color ? ' ' + options.cssPrefix + 'selected' : ''\n    });\n    return itemHtml;\n  }).join(''));\n  html = domutil.applyTemplate(html, {\n    cssPrefix: options.cssPrefix,\n    detailTxt: options.detailTxt,\n    color: color\n  });\n  this.container.innerHTML = html;\n\n  this._toggleEvent(true);\n};\n\nutil.CustomEvents.mixin(Palette);\nmodule.exports = Palette;\n\n//# sourceURL=webpack://tui.colorPicker/./src/js/palette.js?");

/***/ }),

/***/ "./src/js/slider.js":
/*!**************************!*\
  !*** ./src/js/slider.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @fileoverview Slider view\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar util = __webpack_require__(/*! tui-code-snippet */ \"tui-code-snippet\");\n\nvar domutil = __webpack_require__(/*! ./core/domutil */ \"./src/js/core/domutil.js\");\n\nvar domevent = __webpack_require__(/*! ./core/domevent */ \"./src/js/core/domevent.js\");\n\nvar svgvml = __webpack_require__(/*! ./svgvml */ \"./src/js/svgvml.js\");\n\nvar colorutil = __webpack_require__(/*! ./colorutil */ \"./src/js/colorutil.js\");\n\nvar View = __webpack_require__(/*! ./core/view */ \"./src/js/core/view.js\");\n\nvar Drag = __webpack_require__(/*! ./core/drag */ \"./src/js/core/drag.js\");\n\nvar tmpl = __webpack_require__(/*! ../template/slider */ \"./src/template/slider.js\"); // Limitation position of point element inside of colorslider and hue bar\n// Minimum value can to be negative because that using color point of handle element is center point. not left, top point.\n\n\nvar COLORSLIDER_POS_LIMIT_RANGE = [-7, 112];\nvar HUEBAR_POS_LIMIT_RANGE = [-3, 115];\nvar HUE_WHEEL_MAX = 359.99;\n/**\n * @constructor\n * @extends {View}\n * @mixes CustomEvents\n * @param {object} options - options for view\n *  @param {string} options.cssPrefix - design css prefix\n * @param {HTMLElement} container - container element\n * @ignore\n */\n\nfunction Slider(options, container) {\n  container = domutil.appendHTMLElement('div', container, options.cssPrefix + 'slider-container');\n  container.style.display = 'none';\n  View.call(this, options, container);\n  /**\n   * @type {object}\n   */\n\n  this.options = util.extend({\n    color: '#f8f8f8',\n    cssPrefix: 'tui-colorpicker-'\n  }, options);\n  /**\n   * Cache immutable data in click, drag events.\n   *\n   * (i.e. is event related with colorslider? or huebar?)\n   * @type {object}\n   * @property {boolean} isColorSlider\n   * @property {number[]} containerSize\n   */\n\n  this._dragDataCache = {};\n  /**\n   * Color slider handle element\n   * @type {SVG|VML}\n   */\n\n  this.sliderHandleElement = null;\n  /**\n   * hue bar handle element\n   * @type {SVG|VML}\n   */\n\n  this.huebarHandleElement = null;\n  /**\n   * Element that render base color in colorslider part\n   * @type {SVG|VML}\n   */\n\n  this.baseColorElement = null;\n  /**\n   * @type {Drag}\n   */\n\n  this.drag = new Drag({\n    distance: 0\n  }, container); // bind drag events\n\n  this.drag.on({\n    dragStart: this._onDragStart,\n    drag: this._onDrag,\n    dragEnd: this._onDragEnd,\n    click: this._onClick\n  }, this);\n}\n\nutil.inherit(Slider, View);\n/**\n * @override\n */\n\nSlider.prototype._beforeDestroy = function () {\n  this.drag.off();\n  this.drag = this.options = this._dragDataCache = this.sliderHandleElement = this.huebarHandleElement = this.baseColorElement = null;\n};\n/**\n * Toggle slider view\n * @param {boolean} onOff - set true then reveal slider view\n */\n\n\nSlider.prototype.toggle = function (onOff) {\n  this.container.style.display = !!onOff ? 'block' : 'none';\n};\n/**\n * Get slider display status\n * @returns {boolean} return true when slider is visible\n */\n\n\nSlider.prototype.isVisible = function () {\n  return this.container.style.display === 'block';\n};\n/**\n * Render slider view\n * @override\n * @param {string} colorStr - hex string color from parent view (Layout)\n */\n\n\nSlider.prototype.render = function (colorStr) {\n  var that = this,\n      container = that.container,\n      options = that.options,\n      html = tmpl.layout,\n      rgb,\n      hsv;\n\n  if (!colorutil.isValidRGB(colorStr)) {\n    return;\n  }\n\n  html = html.replace(/{{slider}}/, tmpl.slider);\n  html = html.replace(/{{huebar}}/, tmpl.huebar);\n  html = html.replace(/{{cssPrefix}}/g, options.cssPrefix);\n  html = html.replace(/{{id}}/g, options.id);\n  that.container.innerHTML = html;\n  that.sliderHandleElement = domutil.find('.' + options.cssPrefix + 'slider-handle', container);\n  that.huebarHandleElement = domutil.find('.' + options.cssPrefix + 'huebar-handle', container);\n  that.baseColorElement = domutil.find('.' + options.cssPrefix + 'slider-basecolor', container);\n  rgb = colorutil.hexToRGB(colorStr);\n  hsv = colorutil.rgbToHSV.apply(null, rgb);\n  this.moveHue(hsv[0], true);\n  this.moveSaturationAndValue(hsv[1], hsv[2], true);\n};\n/**\n * Move colorslider by newLeft(X), newTop(Y) value\n * @private\n * @param {number} newLeft - left pixel value to move handle\n * @param {number} newTop - top pixel value to move handle\n * @param {boolean} [silent=false] - set true then not fire custom event\n */\n\n\nSlider.prototype._moveColorSliderHandle = function (newLeft, newTop, silent) {\n  var handle = this.sliderHandleElement,\n      handleColor; // Check position limitation.\n\n  newTop = Math.max(COLORSLIDER_POS_LIMIT_RANGE[0], newTop);\n  newTop = Math.min(COLORSLIDER_POS_LIMIT_RANGE[1], newTop);\n  newLeft = Math.max(COLORSLIDER_POS_LIMIT_RANGE[0], newLeft);\n  newLeft = Math.min(COLORSLIDER_POS_LIMIT_RANGE[1], newLeft);\n  svgvml.setTranslateXY(handle, newLeft, newTop);\n  handleColor = newTop > 50 ? 'white' : 'black';\n  svgvml.setStrokeColor(handle, handleColor);\n\n  if (!silent) {\n    this.fire('_selectColor', {\n      color: colorutil.rgbToHEX.apply(null, this.getRGB())\n    });\n  }\n};\n/**\n * Move colorslider by supplied saturation and values.\n *\n * The movement of color slider handle follow HSV cylinder model. {@link https://en.wikipedia.org/wiki/HSL_and_HSV}\n * @param {number} saturation - the percent of saturation (0% ~ 100%)\n * @param {number} value - the percent of saturation (0% ~ 100%)\n * @param {boolean} [silent=false] - set true then not fire custom event\n */\n\n\nSlider.prototype.moveSaturationAndValue = function (saturation, value, silent) {\n  var absMin, maxValue, newLeft, newTop;\n  saturation = saturation || 0;\n  value = value || 0;\n  absMin = Math.abs(COLORSLIDER_POS_LIMIT_RANGE[0]);\n  maxValue = COLORSLIDER_POS_LIMIT_RANGE[1]; // subtract absMin value because current color position is not left, top of handle element.\n  // The saturation. from left 0 to right 100\n\n  newLeft = saturation * maxValue / 100 - absMin; // The Value. from top 100 to bottom 0. that why newTop subtract by maxValue.\n\n  newTop = maxValue - value * maxValue / 100 - absMin;\n\n  this._moveColorSliderHandle(newLeft, newTop, silent);\n};\n/**\n * Move color slider handle to supplied position\n *\n * The number of X, Y must be related value from color slider container\n * @private\n * @param {number} x - the pixel value to move handle\n * @param {number} y - the pixel value to move handle\n */\n\n\nSlider.prototype._moveColorSliderByPosition = function (x, y) {\n  var offset = COLORSLIDER_POS_LIMIT_RANGE[0];\n\n  this._moveColorSliderHandle(x + offset, y + offset);\n};\n/**\n * Get saturation and value value.\n * @returns {number[]} saturation and value\n */\n\n\nSlider.prototype.getSaturationAndValue = function () {\n  var absMin = Math.abs(COLORSLIDER_POS_LIMIT_RANGE[0]),\n      maxValue = absMin + COLORSLIDER_POS_LIMIT_RANGE[1],\n      position = svgvml.getTranslateXY(this.sliderHandleElement),\n      saturation,\n      value;\n  saturation = (position[1] + absMin) / maxValue * 100; // The value of HSV color model is inverted. top 100 ~ bottom 0. so subtract by 100\n\n  value = 100 - (position[0] + absMin) / maxValue * 100;\n  return [saturation, value];\n};\n/**\n * Move hue handle supplied pixel value\n * @private\n * @param {number} newTop - pixel to move hue handle\n * @param {boolean} [silent=false] - set true then not fire custom event\n */\n\n\nSlider.prototype._moveHueHandle = function (newTop, silent) {\n  var hueHandleElement = this.huebarHandleElement,\n      baseColorElement = this.baseColorElement,\n      newGradientColor,\n      hexStr;\n  newTop = Math.max(HUEBAR_POS_LIMIT_RANGE[0], newTop);\n  newTop = Math.min(HUEBAR_POS_LIMIT_RANGE[1], newTop);\n  svgvml.setTranslateY(hueHandleElement, newTop);\n  newGradientColor = colorutil.hsvToRGB(this.getHue(), 100, 100);\n  hexStr = colorutil.rgbToHEX.apply(null, newGradientColor);\n  svgvml.setGradientColorStop(baseColorElement, hexStr);\n\n  if (!silent) {\n    this.fire('_selectColor', {\n      color: colorutil.rgbToHEX.apply(null, this.getRGB())\n    });\n  }\n};\n/**\n * Move hue bar handle by supplied degree\n * @param {number} degree - (0 ~ 359.9 degree)\n * @param {boolean} [silent=false] - set true then not fire custom event\n */\n\n\nSlider.prototype.moveHue = function (degree, silent) {\n  var newTop = 0,\n      absMin,\n      maxValue;\n  absMin = Math.abs(HUEBAR_POS_LIMIT_RANGE[0]);\n  maxValue = absMin + HUEBAR_POS_LIMIT_RANGE[1];\n  degree = degree || 0;\n  newTop = maxValue * degree / HUE_WHEEL_MAX - absMin;\n\n  this._moveHueHandle(newTop, silent);\n};\n/**\n * Move hue bar handle by supplied percent\n * @private\n * @param {number} y - pixel value to move hue handle\n */\n\n\nSlider.prototype._moveHueByPosition = function (y) {\n  var offset = HUEBAR_POS_LIMIT_RANGE[0];\n\n  this._moveHueHandle(y + offset);\n};\n/**\n * Get huebar handle position by color degree\n * @returns {number} degree (0 ~ 359.9 degree)\n */\n\n\nSlider.prototype.getHue = function () {\n  var handle = this.huebarHandleElement,\n      position = svgvml.getTranslateXY(handle),\n      absMin,\n      maxValue;\n  absMin = Math.abs(HUEBAR_POS_LIMIT_RANGE[0]);\n  maxValue = absMin + HUEBAR_POS_LIMIT_RANGE[1]; // maxValue : 359.99 = pos.y : x\n\n  return (position[0] + absMin) * HUE_WHEEL_MAX / maxValue;\n};\n/**\n * Get HSV value from slider\n * @returns {number[]} hsv values\n */\n\n\nSlider.prototype.getHSV = function () {\n  var sv = this.getSaturationAndValue(),\n      h = this.getHue();\n  return [h].concat(sv);\n};\n/**\n * Get RGB value from slider\n * @returns {number[]} RGB value\n */\n\n\nSlider.prototype.getRGB = function () {\n  return colorutil.hsvToRGB.apply(null, this.getHSV());\n};\n/**********\n * Drag event handler\n **********/\n\n/**\n * Cache immutable data when dragging or click view\n * @param {object} event - Click, DragStart event.\n * @returns {object} cached data.\n */\n\n\nSlider.prototype._prepareColorSliderForMouseEvent = function (event) {\n  var options = this.options,\n      sliderPart = domutil.closest(event.target, '.' + options.cssPrefix + 'slider-part'),\n      cache;\n  cache = this._dragDataCache = {\n    isColorSlider: domutil.hasClass(sliderPart, options.cssPrefix + 'slider-left'),\n    parentElement: sliderPart\n  };\n  return cache;\n};\n/**\n * Click event handler\n * @param {object} clickEvent - Click event from Drag module\n */\n\n\nSlider.prototype._onClick = function (clickEvent) {\n  var cache = this._prepareColorSliderForMouseEvent(clickEvent),\n      mousePos = domevent.getMousePosition(clickEvent.originEvent, cache.parentElement);\n\n  if (cache.isColorSlider) {\n    this._moveColorSliderByPosition(mousePos[0], mousePos[1]);\n  } else {\n    this._moveHueByPosition(mousePos[1]);\n  }\n\n  this._dragDataCache = null;\n};\n/**\n * DragStart event handler\n * @param {object} dragStartEvent - dragStart event data from Drag#dragStart\n */\n\n\nSlider.prototype._onDragStart = function (dragStartEvent) {\n  this._prepareColorSliderForMouseEvent(dragStartEvent);\n};\n/**\n * Drag event handler\n * @param {Drag#drag} dragEvent - drag event data\n */\n\n\nSlider.prototype._onDrag = function (dragEvent) {\n  var cache = this._dragDataCache,\n      mousePos = domevent.getMousePosition(dragEvent.originEvent, cache.parentElement);\n\n  if (cache.isColorSlider) {\n    this._moveColorSliderByPosition(mousePos[0], mousePos[1]);\n  } else {\n    this._moveHueByPosition(mousePos[1]);\n  }\n};\n/**\n * Drag#dragEnd event handler\n */\n\n\nSlider.prototype._onDragEnd = function () {\n  this._dragDataCache = null;\n};\n\nutil.CustomEvents.mixin(Slider);\nmodule.exports = Slider;\n\n//# sourceURL=webpack://tui.colorPicker/./src/js/slider.js?");

/***/ }),

/***/ "./src/js/svgvml.js":
/*!**************************!*\
  !*** ./src/js/svgvml.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @fileoverview module for manipulate SVG or VML object\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar util = __webpack_require__(/*! tui-code-snippet */ \"tui-code-snippet\");\n\nvar PARSE_TRANSLATE_NUM_REGEX = /[\\.\\-0-9]+/g;\nvar SVG_HUE_HANDLE_RIGHT_POS = -6;\n/* istanbul ignore next */\n\nvar svgvml = {\n  /**\n   * Return true when browser is below IE8.\n   * @returns {boolean} is old browser?\n   */\n  isOldBrowser: function () {\n    var _isOldBrowser = svgvml._isOldBrowser;\n\n    if (!util.isExisty(_isOldBrowser)) {\n      svgvml._isOldBrowser = _isOldBrowser = util.browser.msie && util.browser.version < 9;\n    }\n\n    return _isOldBrowser;\n  },\n\n  /**\n   * Get translate transform value\n   * @param {SVG|VML} obj - svg or vml object that want to know translate x, y\n   * @returns {number[]} translated coordinates [x, y]\n   */\n  getTranslateXY: function (obj) {\n    var temp;\n\n    if (svgvml.isOldBrowser()) {\n      temp = obj.style;\n      return [parseFloat(temp.top), parseFloat(temp.left)];\n    }\n\n    temp = obj.getAttribute('transform');\n\n    if (!temp) {\n      return [0, 0];\n    }\n\n    temp = temp.match(PARSE_TRANSLATE_NUM_REGEX); // need caution for difference of VML, SVG coordinates system.\n    // translate command need X coords in first parameter. but VML is use CSS coordinate system(top, left)\n\n    return [parseFloat(temp[1]), parseFloat(temp[0])];\n  },\n\n  /**\n   * Set translate transform value\n   * @param {SVG|VML} obj - SVG or VML object to setting translate transform.\n   * @param {number} x - translate X value\n   * @param {number} y - translate Y value\n   */\n  setTranslateXY: function (obj, x, y) {\n    if (svgvml.isOldBrowser()) {\n      obj.style.left = x + 'px';\n      obj.style.top = y + 'px';\n    } else {\n      obj.setAttribute('transform', 'translate(' + x + ',' + y + ')');\n    }\n  },\n\n  /**\n   * Set translate only Y value\n   * @param {SVG|VML} obj - SVG or VML object to setting translate transform.\n   * @param {number} y - translate Y value\n   */\n  setTranslateY: function (obj, y) {\n    if (svgvml.isOldBrowser()) {\n      obj.style.top = y + 'px';\n    } else {\n      obj.setAttribute('transform', 'translate(' + SVG_HUE_HANDLE_RIGHT_POS + ',' + y + ')');\n    }\n  },\n\n  /**\n   * Set stroke color to SVG or VML object\n   * @param {SVG|VML} obj - SVG or VML object to setting stroke color\n   * @param {string} colorStr - color string\n   */\n  setStrokeColor: function (obj, colorStr) {\n    if (svgvml.isOldBrowser()) {\n      obj.strokecolor = colorStr;\n    } else {\n      obj.setAttribute('stroke', colorStr);\n    }\n  },\n\n  /**\n   * Set gradient stop color to SVG, VML object.\n   * @param {SVG|VML} obj - SVG, VML object to applying gradient stop color\n   * @param {string} colorStr - color string\n   */\n  setGradientColorStop: function (obj, colorStr) {\n    if (svgvml.isOldBrowser()) {\n      obj.color = colorStr;\n    } else {\n      obj.setAttribute('stop-color', colorStr);\n    }\n  }\n};\nmodule.exports = svgvml;\n\n//# sourceURL=webpack://tui.colorPicker/./src/js/svgvml.js?");

/***/ }),

/***/ "./src/styl/tui-color-picker.styl":
/*!****************************************!*\
  !*** ./src/styl/tui-color-picker.styl ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack://tui.colorPicker/./src/styl/tui-color-picker.styl?");

/***/ }),

/***/ "./src/template/palette.js":
/*!*********************************!*\
  !*** ./src/template/palette.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @fileoverview Palette view template\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar layout = ['<ul class=\"{{cssPrefix}}clearfix\">{{colorList}}</ul>', '<div class=\"{{cssPrefix}}clearfix\" style=\"overflow:hidden\">', '<input type=\"button\" class=\"{{cssPrefix}}palette-toggle-slider\" value=\"{{detailTxt}}\" />', '<input type=\"text\" class=\"{{cssPrefix}}palette-hex\" value=\"{{color}}\" maxlength=\"7\" />', '<span class=\"{{cssPrefix}}palette-preview\" style=\"background-color:{{color}};color:{{color}}\">{{color}}</span>', '</div>'].join('\\n');\nvar item = '<li><input class=\"{{cssPrefix}}palette-button{{selected}}{{itemClass}}\" type=\"button\" style=\"{{itemStyle}}\" title=\"{{color}}\" value=\"{{color}}\" /></li>';\nvar itemStyle = 'background-color:{{color}};color:{{color}}';\nmodule.exports = {\n  layout: layout,\n  item: item,\n  itemStyle: itemStyle\n};\n\n//# sourceURL=webpack://tui.colorPicker/./src/template/palette.js?");

/***/ }),

/***/ "./src/template/slider.js":
/*!********************************!*\
  !*** ./src/template/slider.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * @fileoverview Slider template\n * @author NHN. FE Development Team <dl_javascript@nhn.com>\n */\n\n\nvar util = __webpack_require__(/*! tui-code-snippet */ \"tui-code-snippet\");\n\nvar layout = ['<div class=\"{{cssPrefix}}slider-left {{cssPrefix}}slider-part\">{{slider}}</div>', '<div class=\"{{cssPrefix}}slider-right {{cssPrefix}}slider-part\">{{huebar}}</div>'].join('\\n');\nvar SVGSlider = ['<svg class=\"{{cssPrefix}}svg {{cssPrefix}}svg-slider\">', '<defs>', '<linearGradient id=\"{{cssPrefix}}svg-fill-color-{{id}}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">', '<stop offset=\"0%\" stop-color=\"rgb(255,255,255)\" />', '<stop class=\"{{cssPrefix}}slider-basecolor\" offset=\"100%\" stop-color=\"rgb(255,0,0)\" />', '</linearGradient>', '<linearGradient id=\"{{cssPrefix}}svn-fill-black-{{id}}\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">', '<stop offset=\"0%\" style=\"stop-color:rgb(0,0,0);stop-opacity:0\" />', '<stop offset=\"100%\" style=\"stop-color:rgb(0,0,0);stop-opacity:1\" />', '</linearGradient>', '</defs>', '<rect width=\"100%\" height=\"100%\" fill=\"url(#{{cssPrefix}}svg-fill-color-{{id}})\"></rect>', '<rect width=\"100%\" height=\"100%\" fill=\"url(#{{cssPrefix}}svn-fill-black-{{id}})\"></rect>', '<path transform=\"translate(0,0)\" class=\"{{cssPrefix}}slider-handle\" d=\"M0 7.5 L15 7.5 M7.5 15 L7.5 0 M2 7 a5.5 5.5 0 1 1 0 1 Z\" stroke=\"black\" stroke-width=\"0.75\" fill=\"none\" />', '</svg>'].join('\\n');\nvar VMLSlider = ['<div class=\"{{cssPrefix}}vml-slider\">', '<v:rect strokecolor=\"none\" class=\"{{cssPrefix}}vml {{cssPrefix}}vml-slider-bg\">', '<v:fill class=\"{{cssPrefix}}vml {{cssPrefix}}slider-basecolor\" type=\"gradient\" method=\"none\" color=\"#ff0000\" color2=\"#fff\" angle=\"90\" />', '</v:rect>', '<v:rect strokecolor=\"#ccc\" class=\"{{cssPrefix}}vml {{cssPrefix}}vml-slider-bg\">', '<v:fill type=\"gradient\" method=\"none\" color=\"black\" color2=\"white\" o:opacity2=\"0%\" class=\"{{cssPrefix}}vml\" />', '</v:rect>', '<v:shape class=\"{{cssPrefix}}vml {{cssPrefix}}slider-handle\" coordsize=\"1 1\" style=\"width:1px;height:1px;\"' + 'path=\"m 0,7 l 14,7 m 7,14 l 7,0 ar 12,12 2,2 z\" filled=\"false\" stroked=\"true\" />', '</div>'].join('\\n');\nvar SVGHuebar = ['<svg class=\"{{cssPrefix}}svg {{cssPrefix}}svg-huebar\">', '<defs>', '<linearGradient id=\"g-{{id}}\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">', '<stop offset=\"0%\" stop-color=\"rgb(255,0,0)\" />', '<stop offset=\"16.666%\" stop-color=\"rgb(255,255,0)\" />', '<stop offset=\"33.333%\" stop-color=\"rgb(0,255,0)\" />', '<stop offset=\"50%\" stop-color=\"rgb(0,255,255)\" />', '<stop offset=\"66.666%\" stop-color=\"rgb(0,0,255)\" />', '<stop offset=\"83.333%\" stop-color=\"rgb(255,0,255)\" />', '<stop offset=\"100%\" stop-color=\"rgb(255,0,0)\" />', '</linearGradient>', '</defs>', '<rect width=\"18px\" height=\"100%\" fill=\"url(#g-{{id}})\"></rect>', '<path transform=\"translate(-6,-3)\" class=\"{{cssPrefix}}huebar-handle\" d=\"M0 0 L4 4 L0 8 L0 0 Z\" fill=\"black\" stroke=\"none\" />', '</svg>'].join('\\n');\nvar VMLHuebar = ['<div class=\"{{cssPrefix}}vml-huebar\">', '<v:rect strokecolor=\"#ccc\" class=\"{{cssPrefix}}vml {{cssPrefix}}vml-huebar-bg\">', '<v:fill type=\"gradient\" method=\"none\" colors=\"' + '0% rgb(255,0,0), 16.666% rgb(255,255,0), 33.333% rgb(0,255,0), 50% rgb(0,255,255), 66.666% rgb(0,0,255), 83.333% rgb(255,0,255), 100% rgb(255,0,0)' + '\" angle=\"180\" class=\"{{cssPrefix}}vml\" />', '</v:rect>', '<v:shape class=\"{{cssPrefix}}vml {{cssPrefix}}huebar-handle\" coordsize=\"1 1\" style=\"width:1px;height:1px;position:absolute;z-index:1;right:22px;top:-3px;\"' + 'path=\"m 0,0 l 4,4 l 0,8 l 0,0 z\" filled=\"true\" fillcolor=\"black\" stroked=\"false\" />', '</div>'].join('\\n');\nvar isOldBrowser = util.browser.msie && util.browser.version < 9;\n\nif (isOldBrowser) {\n  global.document.namespaces.add('v', 'urn:schemas-microsoft-com:vml');\n}\n\nmodule.exports = {\n  layout: layout,\n  slider: isOldBrowser ? VMLSlider : SVGSlider,\n  huebar: isOldBrowser ? VMLHuebar : SVGHuebar\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://tui.colorPicker/./src/template/slider.js?");

/***/ }),

/***/ 0:
/*!****************************************************************!*\
  !*** multi ./src/styl/tui-color-picker.styl ./src/js/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./src/styl/tui-color-picker.styl */\"./src/styl/tui-color-picker.styl\");\nmodule.exports = __webpack_require__(/*! ./src/js/index.js */\"./src/js/index.js\");\n\n\n//# sourceURL=webpack://tui.colorPicker/multi_./src/styl/tui-color-picker.styl_./src/js/index.js?");

/***/ }),

/***/ "tui-code-snippet":
/*!******************************************************************************************************************************!*\
  !*** external {"commonjs":"tui-code-snippet","commonjs2":"tui-code-snippet","amd":"tui-code-snippet","root":["tui","util"]} ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_tui_code_snippet__;\n\n//# sourceURL=webpack://tui.colorPicker/external_%7B%22commonjs%22:%22tui-code-snippet%22,%22commonjs2%22:%22tui-code-snippet%22,%22amd%22:%22tui-code-snippet%22,%22root%22:%5B%22tui%22,%22util%22%5D%7D?");

/***/ })

/******/ });
});