{
  "ServerEngine": { //微服务框架配置
    "Ip": "${Server_IP}|127.0.0.1", //私有容器IP
    "Port": "${Server_Port}|81", ///私有容器端口
    "MappingIp": "${Mapping_ip}", //公开主机IP
    "MappingPort": "${Mapping_Port}", //公开主机端口
    "WanIp": "${WanIp}", //外网IP
    "Token": "123456789", //是否验证Token,缺省值为True
    "DockerDeployMode": "${DockerDeployMode}|Standard", //Docker容器部署模式
    "Libuv": true, //是否开启Libuv高性能事件驱动的I/O库,缺省值为false
    "WatchInterval": 20, //设置向服务注册中心更新路由数据的心跳值，缺省值为20s
    "SoBacklog": 100, //用于临时存放已完成三次握手的请求的队列的最大长度
    "Weight": 20, //权重轮询
    "MaxConcurrentRequests": 1000, //支持最大并发
    "ExecutionTimeoutInMilliseconds": 5000, //执行超时时间（毫秒）
    "DisconnTimeInterval": 10, //断开连接时间间隔
    "BreakerForceClosed": true, //是否强制关闭熔断
    "BreakerRequestVolumeThreshold": 20, //10秒钟内至少多少请求失败，熔断器才发挥起作用
    "options.BreakeErrorThresholdPercentage": 50, //错误率达到多少开启熔断保护
    "options.BreakeSleepWindowInMilliseconds": 60000, //熔断多少毫秒后去尝试请求
    "Protocol": "${Protocol}", //配置微服务组件支持的协议 缺省值为: None, Tcp, Http, WS, Mqtt, Dns, Udp
    "RootPath": "${RootPath}", //指定服务引擎解析的业务模块路径
    "WebRootPath": "${WebRootPath}", //指定Web主机根路径
    "IsModulePerLifetimeScope": false, //模块是否使用每个生命周期范围
    "ReloadOnChange": false, //当配置改变后是否重新加载
    "RequestCacheEnabled": true, //启用请求缓存
    "IncludeSensitiveDetails": true,
    "Ports": {
      "HttpPort": "${HttpPort}",
      "WSPort": "${WSPort}",
      "MQTTPort": "${MQTTPort}",
      "GrpcPort": "${GrpcPort}",
      "UdpPort": "${UdpPort}"
    },
    "Packages": [
      {
        "TypeName": "EnginePartModule",
        "Using": "${UseEngineParts}|ServiceProxyModule;DotNettyModule;SerilogModule;MessagePackModule;ConsulModule;WSProtocolModule;MqttProtocolModule;EventBusRabbitMQModule;CachingModule;SkywalkingModule;GrpcModule;ApolloModule;"
      }
    ]
  },
  "Consul": { //Consul服务注册中心配置
    "ConnectionString": "${Register_Conn}|127.0.0.1:8500", //Consul服务注册中心地址
    "SessionTimeout": "${Register_SessionTimeout}|50", //会话超时时间
    "RoutePath": "${Register_RoutePath}", //服务组件地址,服务引擎会通过指定该地址扫描到相应的服务组件，并解析到相应的服务与命令
    "ReloadOnChange": true, //当配置改变后是否重新加载
    "EnableChildrenMonitor": true, //启用子节点监视器
    "MqttRoutePath": "${MqttRoutePath}" //Mqtt路由配置路径
  },
  "Zookeeper": {
    "ConnectionString": "${Zookeeper_ConnectionString}|127.0.0.1:2181", // Zookeeper服务地址,
    "SessionTimeout": 50, //会话超时
    "ReloadOnChange": true ////当配置改变后是否重新加载
  },
  "Dns": {
    "RootDnsAddress": "192.168.1.1", //根DNS地址。
    "QueryTimeout": 1000 //查询超时时间
  },
  "WebSocket": {
    "WaitTime": 2,
    "KeepClean": false,
    "Behavior": {
      "IgnoreExtensions": true,
      "EmitOnPing": false
    }
  },
  "EventBus": {
    "EventBusConnection": "${EventBusConnection}|localhost", //RabbitMq服务地址
    "Port": "${EventBusPort}|5672", //RabbitMq服务端口号
    "EventBusUserName": "${EventBusUserName}|guest", //用户名
    "EventBusPassword": "${EventBusPassword}|guest", //密码
    "VirtualHost": "${VirtualHost}|/", //虚拟主机
    "MessageTTL": "${MessageTTL}|30000", //消息过期时间，比如过期时间是30分钟就是1800000
    "RetryCount": "${RetryCount}|1", //重试次数，这里设置的延迟队列，只能设置为1
    "FailCount": "${FailCount}|3", //处理失败流程重试次数，如果出现异常，会进行重试
    "prefetchCount": "${PrefetchCount}|0", //设置均匀分配消费者消息的个数
    "BrokerName": "${BrokerName}|kissu_sample" //BrokerName
  },
  "EventBus_Kafka": {
    "Servers": "${EventBusConnection}|localhost:9092", //Kafka服务地址
    "MaxQueueBuffering": "${MaxQueueBuffering}|10", //最大队列缓冲
    "MaxSocketBlocking": "${MaxSocketBlocking}|10", //最大套接字阻塞
    "EnableAutoCommit": "${EnableAutoCommit}|false", //启用自动提交
    "LogConnectionClose": "${LogConnectionClose}|false", //记录连接关闭
    "OffsetReset": "${OffsetReset}|earliest", //失调复位
    "GroupID": "${EventBusGroupID}|kissUdemo" //GroupID
  },
  "RabbitMQ": {
    "EventBus": {
      "ConnectionName": "",
      "ClientName": "",
      "ExchangeName": ""
    }

  },
  "Swagger": { //Swagger配置,只有微服务组件对外提供了Http服务，才可能生成Swagger文档。微服务必须依赖AspNetCoreKestrelModule和安装了KissU.AspNetCore.Swagger组件包，并且配置了Swagger相关参数，才可能生成SwaggerApi文档。
    "Info": {
      "Version": "${SwaggerVersion}|V1", // Api文档的版本号,
      "Title": "${SwaggerTitle}|KissU Services", //Api文档标题
      "Description": "${SwaggerDes}|KissU Services", //Api文档描述
      "Contact": {
        "Name": "API Support", //联系人
        "Email": "gonganping@qq.com", //联系人的Email
        "Url": "https://github.com/gongap/kissu" //微服务组件的项目地址
      },
      "License": {
        "Name": "MIT", //许可协议
        "Url": "" //协议地址
      }
    },
    "Options": {
      "IgnoreFullyQualified": false,
      "IncludeControllerXmlComments": true
    }
  },
  "Serilog": {
    "Using": [ "Serilog.Sinks.RollingFile" ],
    "LevelSwitches": { "$controlSwitch": "Verbose" },
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning"
      }
    },
    "WriteTo:RollingFile": {
      "Name": "RollingFile",
      "Args": {
        "formatter": "Serilog.Formatting.Elasticsearch.ElasticsearchJsonFormatter, Serilog.Formatting.Elasticsearch",
        "pathFormat": "Logs\\log-{Date}.log"
      }
    },
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ],
    "Properties": {
      "Application": "Sample"
    }
  },
  "Exceptionless": {
    "ApiKey": "gAmpmBBGVxlnpUnyPUkVE93x7gER4iLlHfSRNfwT",
    "ServerUrl": "http://localhost:8089"
  }
}